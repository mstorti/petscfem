#!/bin/bash
#__INSERT_LICENSE__
#$Id: maketag,v 1.12 2002/02/18 00:18:00 mstorti Exp $

tmp=tmp_file_log.txt
savelog=save.log
stablelog=stable.log
sep="     > "

echo ==========================================================
echo ==========================================================
echo ==========================================================
echo ==========================================================
echo  ATENCION VERSION EN CONSTRUCCION 
echo  PUEDE TENER PROBLEMAS AL GUARDAR VERSIONES ESTABLES
echo  VERIFICAR
echo ==========================================================
echo ==========================================================
echo ==========================================================
echo ==========================================================

echo Verify that current directory is OK...
echo n | cvs release .
echo -n "Continue? (y/n) > " 
read answer
echo "ans: $answer" 
if [ "$answer" != "y" ] ; then         \
        echo exiting 
        exit 1 
fi
echo Last tags:
grep "^tag: " $savelog | tail
echo -n "Enter new tag: > " 
read newtag 
newtag_=`echo $newtag | perl -pe 's/\-/--/g; s/\./-/g;'` 

./tools/checktag $newtag ./save.log
echo "encoded tag: $newtag_" 

echo -n "Continue (y/n) > " 
read answer 
if [ ! $answer = "y" ] ; then \
	exit 1
fi

stable="n"
echo -n "Is it a stable version? (y/n) > " 
read stable

echo "Now I will launch the editor in order" 
echo "    to enter a log message for this release..." 
echo "    <press enter to continue>" 
read answer 

if [ -e $tmp ] ; then rm $tmp ; fi 
cat <<EOM > $tmp
# Insert here the comment for this release (version: $newtag) :
# [ lines starting whit '#' are discarded ]
EOM

$EDITOR $tmp

echo -n "Proceed to tag files (y/n) > " 
read answer 
if [ ! $answer = "y" ] ; then \
	exit 1
fi

echo "updating VERSION..."
echo $newtag > VERSION 

echo "logging on " $savelog
echo "----------" >> $savelog
echo "tag: $newtag on `date`, by `whoami` in `hostname -f`" \
  | perl -p -e 's/ ARS{0,1}T / -0300 /;'  >> $savelog
if [ $stable = "y" ] ; then \
        echo "$sep-- STABLE VERSION -- " >> $savelog
fi 
cat $tmp | perl -ne "next if /^#/; s/^/$sep/; print;" | cat >> $savelog

if [ $stable = "y" ] ; then \
echo "logging on " $stablelog
echo "----------" >> $stablelog
echo "tag: $newtag on `date`, by `whoami` in `hostname -f`" |
    | perl -p -e 's/ ARS{0,1}T / -0300 /;' >> $stablelog
cat $tmp | perl -ne "next if /^#/; s/^/$sep/; print;" | cat >> $stablelog
cvs ci -m "Administrative files" stable.log VERSION
fi

rm $tmp

cvs ci -m "Administrative files" save.log VERSION

#cvs tag $newtag_ .
cvs tag $newtag_ 

.\" Automatically generated by Pod::Man version 1.02
.\" Fri Jan 12 14:09:08 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` `
.    ds C' '
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
.    .
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "ODOC 1"
.TH ODOC 1 "perl v5.6.0" "2001-01-11" "User Contributed Perl Documentation"
.UC
.SH "NAME"
odoc.pl \- generate documentation for PETSc-FEM options in text-hashes
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    $ odoc.pl [OPTIONS] FILES ...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Options  to programs,  elemsets and  other parts  of  \f(CW\*(C`PETSc\-FEM\*(C'\fR are
passed via text-hashes, which are  then queried by the code via calles
to functions in the \f(CW\*(C`getopt\*(C'\fR package. This is normally done via calls
to  the *GETOPT*  macros.  You  can document  the  options so  defined
introducing special comments, for instance
.PP
.Vb 2
\&  //o Use the weak form for the Galerkin part of the advective term. 
\&  SGETOPTDEF(int,weak_form,1);
.Ve
will generate a LaTeX entry in the form 
.PP
.Vb 2
\&    * int weak_form (default: 1) : Use the weak form for the Galerkin 
\&                       part of the advective term.
.Ve
You  can  put  almost any  kind  of  LaTeX  material in  the  embedded
documentation.  You must add a  doc section for each *GETOPT* call and
then execute
.PP
.Vb 1
\&  $ odoc.pl -o doc.tex file1 file2 ...
.Ve
in order to obtain a \fIdoc.tex\fR file. 
.SH "SYNTAX"
.IX Header "SYNTAX"
The syntaxis of the embedded documentation is as follows:
.Sp
The  embedded  documentation  must  be  in a  block  \fBpreceding\fR  the
\&\f(CW\*(C`*GETOPT*\*(C'\fR call.
.Ip "\(bu" 4
\&\fBSpanning doc  blocks over more  than one line:\fR All  lines following
the  the \f(CW\*(C`//o\*(C'\fR  directive  must start  with  \f(CW\*(C`// \*(C'\fR  (i.e. the  \f(CW\*(C`//\*(C'\fR
comment  directive must  be followed  by a  space.  Lines  starting by
\&\f(CW\*(C`//\*(C'\fR followed by a non space character are 'special directives'.
.Ip "\(bu" 4
\&\fBThe  \fR\f(CW\*(C`//i_tex\*(C'\fR\fB  directive  \-  Including large  amount  of  LaTeX
material:\fR If  you have a too  large section then you  can introduce a
special line with a directive of the form \f(CW\*(C`//i_tex\*(C'\fR as, for instance
.Sp
.Vb 3
\&  //o Sets the frequency save for the ``rotary save'' mechanism. 
\&  //i_tex nsdoc.tex rotary_save
\&  GETOPTDEF(int,nsaverot,100);
.Ve
This  will read  the  section \f(CW\*(C`rotary_save\*(C'\fR  entry  in the  nsdoc.tex
file. The  section in  the \fInsdoc.tex\fR file  are the lines  between a
line containing \f(CW\*(C`%section rotary_save\*(C'\fR and \f(CW\*(C`%end_section\*(C'\fR
.Sp
.Vb 1
\&   .... % other sections
.Ve
.Vb 4
\&   %section rotary_save
\&   This section shows how to ...
\&   ...
\&   %end_section
.Ve
.Vb 1
\&   .... % other sections
.Ve
.Ip "\(bu" 4
\&\fBIncluding  explicit doc sections:\fR  If the  \f(CW\*(C`*GETOPT*\*(C'\fR call  is too
complicated or the  \f(CW\*(C`getopt\*(C'\fR functions (as \f(CW\*(C`get_int\*(C'\fR, \f(CW\*(C`get_double\*(C'\fR,
etc...) have been called explicitly, then you can include explicit doc
sections where you explicitly give the different fields of the entries
(\f(CW\*(C`type\*(C'\fR,  \f(CW\*(C`name\*(C'\fR,  \f(CW\*(C`default\*(C'\fR,  \f(CW\*(C`doc\*(C'\fR).  You  enter  them  in  the
following way
.Sp
.Vb 4
\&    //o _T: double[ndim]/double[ndim*ndof]/double[ndim*ndof*ndof] 
\&    //  _N: advective_jacobians _D: no default  _DOC: 
\&    //i_tex advdif.tex advective_jacobians
\&    //  _END
.Ve
i.e.,  they are  delimited  by the  \fImagic  strings\fR \f(CW\*(C`_T:\*(C'\fR,  \f(CW\*(C`_N:\*(C'\fR,
\&\f(CW\*(C`_D:\*(C'\fR,  \f(CW\*(C`_DOC:\*(C'\fR, \f(CW\*(C`_END\*(C'\fR,  \fBin that  order\fR.  You  can  put several
fields  in the  same  line.  You  can  use the  \f(CW\*(C`//i_tex\*(C'\fR inside  the
\&\f(CW\*(C`_DOC:\*(C'\fR block.
.Ip "\(bu" 4
\&\fBNot documented \fR\f(CW\*(C`*GETOPT*\*(C'\fR\fB calls:\fR If \f(CW\*(C`odoc.pl\*(C'\fR finds a \f(CW\*(C`*GETOPT*\*(C'\fR
call that doesn't have a previous \f(CW\*(C`//o\*(C'\fR block, a warnng is issued. If
you want to suppress this  warning add a \f(CW\*(C`//nd\*(C'\fR after the \f(CW\*(C`*GETOPT*\*(C'\fR
call as, for instance
.Sp
.Vb 1
\&   TGETOPTDEF(GLOBAL_OPTIONS,double,alpha,1.); //nd
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.Ip "\-s section_name" 4
.IX Item "-s section_name"
Process the specified section name in
the \f(CW\*(C`*.cpp\*(C'\fR source file. Sections are delimited by \f(CW\*(C`//target
section_name\*(C'\fR and \f(CW\*(C`//end_target\*(C'\fR lines. For instance:
.Sp
.Vb 4
\&  // Contents of file `myprg.cpp'
\&  //target common_options
\&  ....
\&  //end_target
.Ve
.Vb 3
\&  //target specific_option
\&  ....
\&  //end_target
.Ve
then will be able to write
.Sp
.Vb 1
\&   $ odoc.pl -s common_options myprg.cpp
.Ve
.Ip "\-o outputfile" 4
.IX Item "-o outputfile"
Put the generated LaTeX documentation in file \f(CW\*(C`outputfile\*(C'\fR. 
.Ip "\-h" 4
.IX Item "-h"
Give help.
.SH "AUTHOR"
.IX Header "AUTHOR"
Mario A. Storti <mstorti@intec.unl.edu.ar>

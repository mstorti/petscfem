// -*- mode: c++ -*-
<:$max_arg = 15;:>//
// This header file automatically generated from readlist.eperl
//                       DON'T MODIFY!!
// In any case, modify the eperl script and re-run eperl
// with make `readlist.h'

/** Defines and argument list to be used as a variable argument list.
    @doc Example: ARG\_LIST(int,arg,0) expands to 
    int arg\_0 = 0, int arg\_1 = 0, int arg\_2 = 0 ...
    The current maximum number of args is \$maxargs=<:=$maxargs:>.
    This is set in `readlist.eperl'. 
    @author M. Storti
    @param type (input) the type of the variable argument list (int,
    double, etc...)
    @param name (input) the name of the arguments.
    @param default (input) the default value. 
*/ 
#define ARG_LIST(type,name,default) \
<:for ($j=0; $j<$max_arg-1; $j++) {
    print "type name##_$j = default,";
    if (($j+1) % 3 == 0) {print "  \\\n";}
}:>//
type name##_<:=$max_arg-1:> = default

/** Same, but without the default value
 */
#define ARG_LIST_ND(type,name) \
<:for ($j=0; $j<$max_arg-1; $j++) {
    print "type name##_$j,";
    if (($j+1) % 3 == 0) {print "  \\\n";}
}:>//
type name##_<:=$max_arg-1:>

/** Reads the argument list in a FastVector of the corresponding type. 
    @doc Example: READ\_ARG\_LIST(name,indx,default,exit\_label)
    This is set in `readlist.eperl'. 
    @author M. Storti
    @param name (input) the name of the arguments.
    @param indx (input) the FastVector where arguments are stored.
    @param default (input) the default value. 
    @param exit\_label (input) the exit label to be generated. Usually: EXIT
*/ 
#define READ_ARG_LIST(name,indx,default,exit_label) \
<:for ($j=0; $j<$max_arg; $j++) {
print <<EOT;
if (name##_$j == default) goto exit_label; \\
    indx.push_back(name##_$j);          \\
                                          \\
EOT
}
:>//
exit_label:;

// This header file automatically generated from readlist.eperl
//                       DON'T MODIFY!!
// In any case, modify the eperl script and re-run eperl
// with make `readlist.h'

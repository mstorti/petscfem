//
// time: Fri Sep  3 12:13:53 2004
//
// version: 3.1.2 (format), 4.2.0 (DX)
//
//
// MODULE main
//
// comment: A general purpose visual program for gridded, two-dimensional, multivariate data has been used. 
// comment: 
// comment: The control panels allow you to choose which variable to visualize as a deformed surface, which variable to visualize as colors on the surface, and which variable to visualize as contour lines (for scalar data) or glyphs (for vector or connection-dependent data). You can also set the contour line values.
// comment: 
// comment: If you would like to modify or use this visual program in the future, choose Open Visual Program Editor from the Windows menu, and then choose Save As from the File menu of the VPE.
// page assignment: ProcScalar	order=5, windowed=0, showing=0
// page assignment: ProcVelocity	order=6, windowed=0, showing=0
// page assignment: ScalarGrad	order=4, windowed=0, showing=0
// page assignment: Selectscalar	order=3, windowed=0, showing=0
// page assignment: Streamlines	order=8, windowed=0, showing=1
// page assignment: Vectors	order=7, windowed=0, showing=0
// page assignment: camera	order=9, windowed=0, showing=0
// page assignment: image	order=10, windowed=0, showing=0
// page assignment: import	order=2, windowed=0, showing=0
// workspace: width = 721, height = 638
// layout: snap = 0, width = 20, height = 20, align = NN
//
macro main(
) -> (
) {
    // 
    // node AmbientLight[1]: x = 355, y = 112, inputs = 1, label = AmbientLight
    // input[1]: defaulting = 0, visible = 1, type = 8, value = [0.1 0.1 0.1]
    // page group: image
    //
main_AmbientLight_1_out_1 = 
    AmbientLight(
    main_AmbientLight_1_in_1
    ) [instance: 1, cache: 1];
    // 
    // node Toggle[4]: x = 80, y = 340, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_4"
    // input[2]: defaulting = 0, visible = 0, type = 29, value =  2  
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 0, visible = 1, type = 29, value =  1  
    // input[5]: defaulting = 0, visible = 1, type = 29, value =  2  
    // output[1]: visible = 1, type = 29, value =  2  
    // page group: Selectscalar
    // toggle : 0
    //
main_Toggle_4_out_1[cache: 2] = 
    Toggle(
    main_Toggle_4_in_1,
    main_Toggle_4_in_2,
    main_Toggle_4_in_3,
    main_Toggle_4_in_4,
    main_Toggle_4_in_5,
    main_Toggle_4_in_6
    ) [instance: 4, cache: 1];
    // 
    // node Selector[1]: x = 20, y = 80, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_1"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "abs(u)" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 1 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "none" "abs(u)" "pressure" "vorticity" "log(abs(vort))" "alpha" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 0 1 2 3 4 5 }
    // output[1]: visible = 1, type = 29, value = 1 
    // output[2]: visible = 1, type = 32, value = "abs(u)" 
    // page group: Selectscalar
    //
    // 
    // node Import[1]: x = 125, y = 120, inputs = 6, label = Import
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "viewer.dx"
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "dx"
    // page group: import
    //
main_Import_1_out_1 = 
    Import(
    main_Import_1_in_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Compute[48]: x = 25, y = 213, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0,$0.1]"
    // page group: import
    // expression: value = [u.0,u.1]
    // name[2]: value = u
    //
main_Compute_48_out_1 = 
    Compute(
    main_Compute_48_in_1,
    main_Import_1_out_1
    ) [instance: 48, cache: 1];
    // 
    // node Transmitter[42]: x = 47, y = 300, inputs = 1, label = u
    // page group: import
    //
u = main_Compute_48_out_1;
    // 
    // node Receiver[38]: x = 180, y = 0, inputs = 1, label = u
    // page group: Selectscalar
    //
main_Receiver_38_out_1[cache: 0] = u;
    // 
    // node Compute[29]: x = 160, y = 80, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "mag($0)"
    // page group: Selectscalar
    // expression: value = mag(u)
    // name[2]: value = u
    //
main_Compute_29_out_1 = 
    Compute(
    main_Compute_29_in_1,
    main_Receiver_38_out_1
    ) [instance: 29, cache: 1];
    // 
    // node Compute[47]: x = 126, y = 211, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.2"
    // page group: import
    // expression: value = u.2
    // name[2]: value = u
    //
main_Compute_47_out_1 = 
    Compute(
    main_Compute_47_in_1,
    main_Import_1_out_1
    ) [instance: 47, cache: 1];
    // 
    // node Transmitter[43]: x = 157, y = 297, inputs = 1, label = p
    // page group: import
    //
p = main_Compute_47_out_1;
    // 
    // node Receiver[37]: x = 298, y = 111, inputs = 1, label = p
    // page group: Selectscalar
    //
main_Receiver_37_out_1[cache: 0] = p;
    // 
    // node Receiver[35]: x = 80, y = 0, inputs = 1, label = u
    // page group: ProcVelocity
    //
main_Receiver_35_out_1[cache: 0] = u;
    // 
    // node Compute[49]: x = 18, y = 96, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.0"
    // page group: ProcVelocity
    // expression: value = u.0
    // name[2]: value = u
    //
main_Compute_49_out_1 = 
    Compute(
    main_Compute_49_in_1,
    main_Receiver_35_out_1
    ) [instance: 49, cache: 1];
    // 
    // node Gradient[4]: x = 17, y = 163, inputs = 2, label = Gradient
    // page group: ProcVelocity
    //
main_Gradient_4_out_1 = 
    Gradient(
    main_Compute_49_out_1,
    main_Gradient_4_in_2
    ) [instance: 4, cache: 1];
    // 
    // node Compute[51]: x = 97, y = 92, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.1"
    // page group: ProcVelocity
    // expression: value = u.1
    // name[2]: value = u
    //
main_Compute_51_out_1 = 
    Compute(
    main_Compute_51_in_1,
    main_Receiver_35_out_1
    ) [instance: 51, cache: 1];
    // 
    // node Gradient[5]: x = 98, y = 161, inputs = 2, label = Gradient
    // page group: ProcVelocity
    //
main_Gradient_5_out_1 = 
    Gradient(
    main_Compute_51_out_1,
    main_Gradient_5_in_2
    ) [instance: 5, cache: 1];
    // 
    // node Compute[52]: x = 19, y = 252, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$1.x-$0.y"
    // page group: ProcVelocity
    // expression: value = guy.x-gux.y
    // name[2]: value = gux
    // name[3]: value = guy
    //
main_Compute_52_out_1 = 
    Compute(
    main_Compute_52_in_1,
    main_Gradient_4_out_1,
    main_Gradient_5_out_1
    ) [instance: 52, cache: 1];
    // 
    // node Compute[30]: x = 164, y = 354, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "mag($0)"
    // page group: ProcVelocity
    // expression: value = mag(w)
    // name[2]: value = w
    //
main_Compute_30_out_1 = 
    Compute(
    main_Compute_30_in_1,
    main_Compute_52_out_1
    ) [instance: 30, cache: 1];
    // 
    // node Transmitter[9]: x = 190, y = 444, inputs = 1, label = w
    // page group: ProcVelocity
    //
w = main_Compute_30_out_1;
    // 
    // node Receiver[39]: x = 357, y = 96, inputs = 1, label = w
    // page group: Selectscalar
    //
main_Receiver_39_out_1[cache: 0] = w;
    // 
    // node Compute[10]: x = 37, y = 364, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "log10(max(mag($0),0.01))"
    // page group: ProcVelocity
    // expression: value = log10(max(mag(w),0.01))
    // name[2]: value = w
    //
main_Compute_10_out_1 = 
    Compute(
    main_Compute_10_in_1,
    main_Compute_52_out_1
    ) [instance: 10, cache: 1];
    // 
    // node Transmitter[10]: x = 20, y = 459, inputs = 1, label = log_abs_w
    // page group: ProcVelocity
    //
log_abs_w = main_Compute_10_out_1;
    // 
    // node Receiver[40]: x = 404, y = 129, inputs = 1, label = log_abs_w
    // page group: Selectscalar
    //
main_Receiver_40_out_1[cache: 0] = log_abs_w;
    // 
    // node Receiver[57]: x = 504, y = 139, inputs = 1, label = alpha
    // page group: Selectscalar
    //
main_Receiver_57_out_1[cache: 0] = alpha;
    // 
    // node Switch[5]: x = 160, y = 260, inputs = 6, label = Switch
    // input[1]: defaulting = 1, visible = 1, type = 1, value = 1
    // page group: Selectscalar
    //
main_Switch_5_out_1 = 
    Switch(
    main_Selector_1_out_1,
    main_Compute_29_out_1,
    main_Receiver_37_out_1,
    main_Receiver_39_out_1,
    main_Receiver_40_out_1,
    main_Receiver_57_out_1
    ) [instance: 5, cache: 1];
    // 
    // node Scalar[15]: x = 324, y = 300, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_15"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.8
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.8
    // page group: Selectscalar
    //
    // 
    // node Isolate[1]: x = 180, y = 360, inputs = 2, label = Isolate
    // input[2]: defaulting = 1, visible = 1, type = 5, value = 0.95
    // page group: Selectscalar
    //
main_Isolate_1_out_1 = 
    Isolate(
    main_Switch_5_out_1,
    main_Scalar_15_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Switch[11]: x = 180, y = 440, inputs = 3, label = Switch
    // page group: Selectscalar
    //
main_Switch_11_out_1 = 
    Switch(
    main_Toggle_4_out_1,
    main_Isolate_1_out_1,
    main_Switch_5_out_1
    ) [instance: 11, cache: 1];
    // 
    // node Transmitter[32]: x = 180, y = 520, inputs = 1, label = scalar_field
    // page group: Selectscalar
    //
scalar_field = main_Switch_11_out_1;
    // 
    // node Receiver[45]: x = 60, y = 20, inputs = 1, label = scalar_field
    // page group: ScalarGrad
    //
main_Receiver_45_out_1[cache: 0] = scalar_field;
    // 
    // node Gradient[3]: x = 100, y = 100, inputs = 2, label = Gradient
    // page group: ScalarGrad
    //
main_Gradient_3_out_1 = 
    Gradient(
    main_Receiver_45_out_1,
    main_Gradient_3_in_2
    ) [instance: 3, cache: 1];
    // 
    // node AutoGlyph[3]: x = 80, y = 180, inputs = 7, label = AutoGlyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "rocket"
    // input[3]: defaulting = 0, visible = 1, type = 5, value = 0.1
    // input[4]: defaulting = 0, visible = 1, type = 5, value = 10.0
    // input[6]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 0.2
    // page group: ScalarGrad
    //
main_AutoGlyph_3_out_1 = 
    AutoGlyph(
    main_Gradient_3_out_1,
    main_AutoGlyph_3_in_2,
    main_AutoGlyph_3_in_3,
    main_AutoGlyph_3_in_4,
    main_AutoGlyph_3_in_5,
    main_AutoGlyph_3_in_6,
    main_AutoGlyph_3_in_7
    ) [instance: 3, cache: 1];
    // 
    // node Sequencer[1]: x = 119, y = 21, inputs = 7, label = Sequencer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Sequencer_1"
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 0
    // input[5]: defaulting = 0, visible = 1, type = 1, value = 4000
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 16777217, value = { 0 4000 1 2566 4000 1 }
    // page group: import
    // vcr[1]: min = 0, max = 4000, beg = 2566, end = 4000, cur = 2567, inc = 1, loop = off, step = off, pal = off
    // window: position = (-0.3975,0.5417), size = 0.3496x0.1055
    //
    main_Sequencer_1_in_3 = @frame;
main_Sequencer_1_out_1[cache: 2] = 
    Sequencer(
    main_Sequencer_1_in_1,
    main_Sequencer_1_in_2,
    main_Sequencer_1_in_3,
    main_Sequencer_1_in_4,
    main_Sequencer_1_in_5,
    main_Sequencer_1_in_6,
    main_Sequencer_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[30]: x = 20, y = 100, inputs = 1, label = seq_step
    // page group: import
    //
seq_step = main_Sequencer_1_out_1;
    // 
    // node Receiver[53]: x = 131, y = 70, inputs = 1, label = seq_step
    // page group: camera
    //
main_Receiver_53_out_1[cache: 0] = seq_step;
    // 
    // node Integer[2]: x = 233, y = 64, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_2"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 600
    // input[5]: defaulting = 1, visible = 0, type = 1, value = -1000000
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1000000
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 600
    // page group: camera
    //
    // 
    // node Compute[36]: x = 187, y = 161, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "2*3.14159*(float($0)/float($1)-0.4)"
    // page group: camera
    // expression: value = 2*3.14159*(float(j)/float(n)-0.4)
    // name[2]: value = j
    // name[3]: value = n
    //
main_Compute_36_out_1 = 
    Compute(
    main_Compute_36_in_1,
    main_Receiver_53_out_1,
    main_Integer_2_out_1
    ) [instance: 36, cache: 1];
    // 
    // node Scalar[17]: x = 276, y = 157, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_17"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 2.0
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 2.0
    // page group: camera
    //
    // 
    // node Scalar[18]: x = 343, y = 155, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_18"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 2.0
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 2.0
    // page group: camera
    //
    // 
    // node Compute[37]: x = 227, y = 291, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "($1+$2)/2+($2-$1)/2*cos(1.7*$0)"
    // page group: camera
    // expression: value = (Rmin+Rmax)/2+(Rmax-Rmin)/2*cos(1.7*phi)
    // name[2]: value = phi
    // name[3]: value = Rmin
    // name[4]: value = Rmax
    //
main_Compute_37_out_1 = 
    Compute(
    main_Compute_37_in_1,
    main_Compute_36_out_1,
    main_Scalar_17_out_1,
    main_Scalar_18_out_1
    ) [instance: 37, cache: 1];
    // 
    // node Scalar[19]: x = 414, y = 156, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_19"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.2
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.2
    // page group: camera
    //
    // 
    // node Scalar[20]: x = 477, y = 156, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_20"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.4
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.4
    // page group: camera
    //
    // 
    // node Compute[38]: x = 346, y = 291, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "($1+$2)/2+($2-$1)/2*cos($0)"
    // page group: camera
    // expression: value = (Hmin+Hmax)/2+(Hmax-Hmin)/2*cos(phi)
    // name[2]: value = phi
    // name[3]: value = Hmin
    // name[4]: value = Hmax
    //
main_Compute_38_out_1 = 
    Compute(
    main_Compute_38_in_1,
    main_Compute_36_out_1,
    main_Scalar_19_out_1,
    main_Scalar_20_out_1
    ) [instance: 38, cache: 1];
    // 
    // node Compute[39]: x = 268, y = 380, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[0.7+$1*cos($0),1.5+$1*sin($0),1.5+$2]"
    // page group: camera
    // expression: value = [0.7+R*cos(phi),1.5+R*sin(phi),1.5+H]
    // name[2]: value = phi
    // name[3]: value = R
    // name[4]: value = H
    //
main_Compute_39_out_1 = 
    Compute(
    main_Compute_39_in_1,
    main_Compute_36_out_1,
    main_Compute_37_out_1,
    main_Compute_38_out_1
    ) [instance: 39, cache: 1];
    // 
    // node Camera[1]: x = 215, y = 464, inputs = 9, label = Camera
    // input[1]: defaulting = 0, visible = 1, type = 8, value = [0.7 1.5 1.5]
    // input[3]: defaulting = 0, visible = 1, type = 5, value = 1.0
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 640
    // input[5]: defaulting = 0, visible = 1, type = 5, value = 0.75
    // input[6]: defaulting = 0, visible = 1, type = 8, value = [0 0 1]
    // input[8]: defaulting = 0, visible = 1, type = 5, value = 40.0
    // page group: camera
    //
main_Camera_1_out_1 = 
    Camera(
    main_Camera_1_in_1,
    main_Compute_39_out_1,
    main_Camera_1_in_3,
    main_Camera_1_in_4,
    main_Camera_1_in_5,
    main_Camera_1_in_6,
    main_Camera_1_in_7,
    main_Camera_1_in_8,
    main_Camera_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node Receiver[56]: x = 618, y = 48, inputs = 1, label = seq_step
    // page group: camera
    //
main_Receiver_56_out_1[cache: 0] = seq_step;
    // 
    // node Compute[40]: x = 658, y = 181, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "float($0)/float($1)"
    // page group: camera
    // expression: value = float(j)/float(n)
    // name[2]: value = j
    // name[3]: value = n
    //
main_Compute_40_out_1 = 
    Compute(
    main_Compute_40_in_1,
    main_Receiver_56_out_1,
    main_Integer_2_out_1
    ) [instance: 40, cache: 1];
    // 
    // node Scalar[21]: x = 807, y = 165, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_21"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.5
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.5
    // page group: camera
    //
    // 
    // node Compute[42]: x = 638, y = 297, inputs = 3, label = To
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[0.,0.5,0.1]"
    // page group: camera
    // expression: value = [0.,0.5,0.1]
    // name[2]: value = xi
    // name[3]: value = H
    //
main_Compute_42_out_1 = 
    Compute(
    main_Compute_42_in_1,
    main_Compute_40_out_1,
    main_Scalar_21_out_1
    ) [instance: 42, cache: 1];
    // 
    // node Scalar[22]: x = 864, y = 170, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_22"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = -1.0
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = -1.0
    // page group: camera
    //
    // 
    // node Scalar[25]: x = 922, y = 169, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_25"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 3.0
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 3.0
    // page group: camera
    //
    // 
    // node Compute[41]: x = 743, y = 302, inputs = 5, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[-0.2,$2+($3-$2)*$0,0.5]"
    // page group: camera
    // expression: value = [-0.2,y0+(y1-y0)*xi,0.5]
    // name[2]: value = xi
    // name[3]: value = H
    // name[4]: value = y0
    // name[5]: value = y1
    //
main_Compute_41_out_1 = 
    Compute(
    main_Compute_41_in_1,
    main_Compute_40_out_1,
    main_Scalar_21_out_1,
    main_Scalar_22_out_1,
    main_Scalar_25_out_1
    ) [instance: 41, cache: 1];
    // 
    // node Camera[2]: x = 760, y = 397, inputs = 9, label = Camera
    // input[1]: defaulting = 1, visible = 1, type = 8, value = [0 0.5 0]
    // input[3]: defaulting = 0, visible = 1, type = 5, value = 1.0
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 640
    // input[5]: defaulting = 0, visible = 1, type = 5, value = 0.75
    // input[6]: defaulting = 0, visible = 1, type = 8, value = [0 0 1]
    // input[8]: defaulting = 0, visible = 1, type = 5, value = 40.0
    // page group: camera
    //
main_Camera_2_out_1 = 
    Camera(
    main_Compute_42_out_1,
    main_Compute_41_out_1,
    main_Camera_2_in_3,
    main_Camera_2_in_4,
    main_Camera_2_in_5,
    main_Camera_2_in_6,
    main_Camera_2_in_7,
    main_Camera_2_in_8,
    main_Camera_2_in_9
    ) [instance: 2, cache: 1];
    // 
    // node Receiver[36]: x = 656, y = 125, inputs = 1, label = seq_step
    // page group: image
    //
main_Receiver_36_out_1[cache: 0] = seq_step;
    // 
    // node Transmitter[21]: x = 80, y = 180, inputs = 1, label = caption
    // page group: Selectscalar
    //
caption = main_Selector_1_out_2;
    // 
    // node Receiver[30]: x = 740, y = 125, inputs = 1, label = caption
    // page group: image
    //
main_Receiver_30_out_1[cache: 0] = caption;
    // 
    // node Format[1]: x = 656, y = 205, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "Frame %d, Color=%s"
    // page group: image
    //
main_Format_1_out_1 = 
    Format(
    main_Format_1_in_1,
    main_Receiver_36_out_1,
    main_Receiver_30_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Caption[2]: x = 570, y = 281, inputs = 9, label = Caption
    // page group: image
    //
main_Caption_2_out_1 = 
    Caption(
    main_Format_1_out_1,
    main_Caption_2_in_2,
    main_Caption_2_in_3,
    main_Caption_2_in_4,
    main_Caption_2_in_5,
    main_Caption_2_in_6,
    main_Caption_2_in_7,
    main_Caption_2_in_8,
    main_Caption_2_in_9
    ) [instance: 2, cache: 1];
    // 
    // node Toggle[2]: x = 133, y = 377, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_2"
    // input[2]: defaulting = 0, visible = 0, type = 29, value =  1  
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[4]: defaulting = 0, visible = 1, type = 29, value =  1  
    // input[5]: defaulting = 0, visible = 1, type = 29, value =  0  
    // output[1]: visible = 1, type = 29, value =  1  
    // page group: Streamlines
    // toggle : 1
    //
main_Toggle_2_out_1[cache: 2] = 
    Toggle(
    main_Toggle_2_in_1,
    main_Toggle_2_in_2,
    main_Toggle_2_in_3,
    main_Toggle_2_in_4,
    main_Toggle_2_in_5,
    main_Toggle_2_in_6
    ) [instance: 2, cache: 1];
    // 
    // node Receiver[14]: x = 604, y = 19, inputs = 1, label = u
    // page group: Streamlines
    //
main_Receiver_14_out_1[cache: 0] = u;
    // 
    // node Compute[45]: x = 515, y = 23, inputs = 1, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "0.01"
    // page group: Streamlines
    // expression: value = 0.01
    //
main_Compute_45_out_1 = 
    Compute(
    main_Compute_45_in_1
    ) [instance: 45, cache: 1];
    // 
    // node Compute[44]: x = 425, y = 111, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0/(mag($0)+$1)"
    // page group: Streamlines
    // expression: value = u/(mag(u)+aumax)
    // name[2]: value = u
    // name[3]: value = aumax
    //
main_Compute_44_out_1 = 
    Compute(
    main_Compute_44_in_1,
    main_Receiver_14_out_1,
    main_Compute_45_out_1
    ) [instance: 44, cache: 1];
    // 
    // node Grid[2]: x = 38, y = 2, inputs = 4, label = Grid
    // input[1]: defaulting = 0, visible = 1, type = 8, value = [0.5,0.5]
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "line"
    // input[3]: defaulting = 0, visible = 1, type = 16777224, value = {[0,0.5]}
    // input[4]: defaulting = 0, visible = 1, type = 16777217, value = {11}
    // page group: Streamlines
    //
main_Grid_2_out_1 = 
    Grid(
    main_Grid_2_in_1,
    main_Grid_2_in_2,
    main_Grid_2_in_3,
    main_Grid_2_in_4
    ) [instance: 2, cache: 1];
    // 
    // node Grid[3]: x = 159, y = 4, inputs = 4, label = Grid
    // input[1]: defaulting = 0, visible = 1, type = 8, value = [0.85,0.05]
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "line"
    // input[3]: defaulting = 0, visible = 1, type = 16777224, value = {[0,0.05]}
    // input[4]: defaulting = 0, visible = 1, type = 16777217, value = {11}
    // page group: Streamlines
    //
main_Grid_3_out_1 = 
    Grid(
    main_Grid_3_in_1,
    main_Grid_3_in_2,
    main_Grid_3_in_3,
    main_Grid_3_in_4
    ) [instance: 3, cache: 1];
    // 
    // node Grid[4]: x = 290, y = 42, inputs = 4, label = Grid
    // input[1]: defaulting = 0, visible = 1, type = 8, value = [0.15,0.05]
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "line"
    // input[3]: defaulting = 0, visible = 1, type = 16777224, value = {[0,0.05]}
    // input[4]: defaulting = 0, visible = 1, type = 16777217, value = {11}
    // page group: Streamlines
    //
main_Grid_4_out_1 = 
    Grid(
    main_Grid_4_in_1,
    main_Grid_4_in_2,
    main_Grid_4_in_3,
    main_Grid_4_in_4
    ) [instance: 4, cache: 1];
    // 
    // node Collect[9]: x = 110, y = 99, inputs = 4, label = Collect
    // page group: Streamlines
    //
main_Collect_9_out_1 = 
    Collect(
    main_Grid_2_out_1,
    main_Grid_3_out_1,
    main_Grid_4_out_1,
    main_Collect_9_in_4
    ) [instance: 9, cache: 1];
    // 
    // node Streamline[1]: x = 159, y = 212, inputs = 7, label = Streamline
    // input[2]: defaulting = 1, visible = 1, type = 16777224, value = {[2 0]}
    // input[3]: defaulting = 1, visible = 1, type = 16777221, value = NULL
    // input[4]: defaulting = 0, visible = 1, type = 5, value = 100.0
    // input[7]: defaulting = 0, visible = 1, type = 29, value = 0.01
    // page group: Streamlines
    //
main_Streamline_1_out_1 = 
    Streamline(
    main_Compute_44_out_1,
    main_Collect_9_out_1,
    main_Streamline_1_in_3,
    main_Streamline_1_in_4,
    main_Streamline_1_in_5,
    main_Streamline_1_in_6,
    main_Streamline_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Translate[1]: x = 223, y = 285, inputs = 2, label = Translate
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [0 0 0.1]
    // page group: Streamlines
    //
main_Translate_1_out_1 = 
    Translate(
    main_Streamline_1_out_1,
    main_Translate_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Color[7]: x = 208, y = 387, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "black"
    // page group: Streamlines
    //
main_Color_7_out_1 = 
    Color(
    main_Translate_1_out_1,
    main_Color_7_in_2,
    main_Color_7_in_3,
    main_Color_7_in_4,
    main_Color_7_in_5
    ) [instance: 7, cache: 1];
    // 
    // node Switch[6]: x = 205, y = 481, inputs = 2, label = Switch
    // page group: Streamlines
    //
main_Switch_6_out_1 = 
    Switch(
    main_Toggle_2_out_1,
    main_Color_7_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Transmitter[33]: x = 188, y = 576, inputs = 1, label = streamlines
    // page group: Streamlines
    //
streamlines = main_Switch_6_out_1;
    // 
    // node Receiver[46]: x = 105, y = 158, inputs = 1, label = streamlines
    // page group: image
    //
main_Receiver_46_out_1[cache: 0] = streamlines;
    // 
    // node Receiver[44]: x = 284, y = 3, inputs = 1, label = scalar_field
    // page group: ProcScalar
    //
main_Receiver_44_out_1[cache: 0] = scalar_field;
    // 
    // node Scalar[3]: x = 489, y = 37, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_3"
    // input[2]: defaulting = 1, visible = 1, type = 67108863, value = NULL
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 100000.0
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 100000.0
    // page group: ProcScalar
    //
    // 
    // node Scalar[6]: x = 747, y = 14, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_6"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = -1000.0
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = -1000.0
    // page group: ProcScalar
    //
    // 
    // node Compute[19]: x = 308, y = 129, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "max(min($0,$1),$2)"
    // page group: ProcScalar
    // expression: value = max(min(w,w_max),w_min)
    // name[2]: value = w
    // name[3]: value = w_max
    // name[4]: value = w_min
    //
main_Compute_19_out_1 = 
    Compute(
    main_Compute_19_in_1,
    main_Receiver_44_out_1,
    main_Scalar_3_out_1,
    main_Scalar_6_out_1
    ) [instance: 19, cache: 1];
    // 
    // node Colormap[1]: x = 517, y = 215, inputs = 19, label = Colormap
    // input[1]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.666667] [1.0 0.0] }
    // input[2]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[4]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[5]: defaulting = 0, visible = 0, type = 32, value = "Colormap_1"
    // input[7]: defaulting = 1, visible = 1, type = 5, value = 0.0
    // input[8]: defaulting = 1, visible = 1, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 1, type = 1, value = 20
    // input[12]: defaulting = 0, visible = 0, type = 16777221, value = { 0.0 1.0 }
    // input[13]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[14]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[15]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[16]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[17]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // input[18]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[19]: visible = 1
    // page group: ProcScalar
    // window: position = (0.0771,0.2070), size = 0.6348x0.5859
    //
main_Colormap_1_out_1[cache: 2],
main_Colormap_1_out_2[cache: 2] = 
    Colormap(
    main_Colormap_1_in_1,
    main_Colormap_1_in_2,
    main_Colormap_1_in_3,
    main_Colormap_1_in_4,
    main_Colormap_1_in_5,
    main_Compute_19_out_1,
    main_Colormap_1_in_7,
    main_Colormap_1_in_8,
    main_Colormap_1_in_9,
    main_Colormap_1_in_10,
    main_Colormap_1_in_11,
    main_Colormap_1_in_12,
    main_Colormap_1_in_13,
    main_Colormap_1_in_14,
    main_Colormap_1_in_15,
    main_Colormap_1_in_16,
    main_Colormap_1_in_17,
    main_Colormap_1_in_18,
    main_Colormap_1_in_19
    ) [instance: 1, cache: 1];
    // 
    // node Color[6]: x = 307, y = 284, inputs = 5, label = Color
    // page group: ProcScalar
    //
main_Color_6_out_1 = 
    Color(
    main_Compute_19_out_1,
    main_Colormap_1_out_1,
    main_Color_6_in_3,
    main_Color_6_in_4,
    main_Color_6_in_5
    ) [instance: 6, cache: 1];
    // 
    // node Toggle[6]: x = 20, y = 340, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_6"
    // input[2]: defaulting = 0, visible = 0, type = 29, value =  0  
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 0, visible = 1, type = 29, value =  1  
    // input[5]: defaulting = 0, visible = 1, type = 29, value =  0  
    // output[1]: visible = 1, type = 29, value =  0  
    // page group: ProcScalar
    // toggle : 0
    //
main_Toggle_6_out_1[cache: 2] = 
    Toggle(
    main_Toggle_6_in_1,
    main_Toggle_6_in_2,
    main_Toggle_6_in_3,
    main_Toggle_6_in_4,
    main_Toggle_6_in_5,
    main_Toggle_6_in_6
    ) [instance: 6, cache: 1];
    // 
    // node ShowConnections[1]: x = 20, y = 220, inputs = 1, label = ShowConnections
    // page group: ProcScalar
    //
main_ShowConnections_1_out_1 = 
    ShowConnections(
    main_Compute_19_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Switch[13]: x = 100, y = 380, inputs = 2, label = Switch
    // page group: ProcScalar
    //
main_Switch_13_out_1 = 
    Switch(
    main_Toggle_6_out_1,
    main_ShowConnections_1_out_1
    ) [instance: 13, cache: 1];
    // 
    // node ColorBar[2]: x = 468, y = 335, inputs = 16, label = ColorBar
    // input[1]: defaulting = 1, visible = 1, type = 2048, value = NULL
    // page group: ProcScalar
    //
main_ColorBar_2_out_1 = 
    ColorBar(
    main_Colormap_1_out_1,
    main_ColorBar_2_in_2,
    main_ColorBar_2_in_3,
    main_ColorBar_2_in_4,
    main_ColorBar_2_in_5,
    main_ColorBar_2_in_6,
    main_ColorBar_2_in_7,
    main_ColorBar_2_in_8,
    main_ColorBar_2_in_9,
    main_ColorBar_2_in_10,
    main_ColorBar_2_in_11,
    main_ColorBar_2_in_12,
    main_ColorBar_2_in_13,
    main_ColorBar_2_in_14,
    main_ColorBar_2_in_15,
    main_ColorBar_2_in_16
    ) [instance: 2, cache: 1];
    // 
    // node Collect[5]: x = 273, y = 404, inputs = 6, label = Collect
    // page group: ProcScalar
    //
main_Collect_5_out_1 = 
    Collect(
    main_Color_6_out_1,
    main_Switch_13_out_1,
    main_Collect_5_in_3,
    main_Collect_5_in_4,
    main_Collect_5_in_5,
    main_ColorBar_2_out_1
    ) [instance: 5, cache: 1];
    // 
    // node Transmitter[5]: x = 224, y = 528, inputs = 1, label = colored_scalar
    // page group: ProcScalar
    //
colored_scalar = main_Collect_5_out_1;
    // 
    // node Receiver[6]: x = 198, y = 128, inputs = 1, label = colored_scalar
    // page group: image
    //
main_Receiver_6_out_1[cache: 0] = colored_scalar;
    // 
    // node Glyph[3]: x = 20, y = 256, inputs = 7, label = Glyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "sphere"
    // input[4]: defaulting = 0, visible = 1, type = 5, value = 0.01
    // page group: Streamlines
    //
main_Glyph_3_out_1 = 
    Glyph(
    main_Collect_9_out_1,
    main_Glyph_3_in_2,
    main_Glyph_3_in_3,
    main_Glyph_3_in_4,
    main_Glyph_3_in_5,
    main_Glyph_3_in_6,
    main_Glyph_3_in_7
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[39]: x = 66, y = 366, inputs = 1, label = sstart
    // page group: Streamlines
    //
sstart = main_Glyph_3_out_1;
    // 
    // node Receiver[42]: x = 313, y = 155, inputs = 1, label = sstart
    // page group: image
    //
main_Receiver_42_out_1[cache: 0] = sstart;
    // 
    // node Toggle[1]: x = 40, y = 260, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_1"
    // input[2]: defaulting = 0, visible = 0, type = 29, value =  1  
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[4]: defaulting = 0, visible = 1, type = 29, value =  1  
    // input[5]: defaulting = 0, visible = 1, type = 29, value =  0  
    // output[1]: visible = 1, type = 29, value =  1  
    // page group: Vectors
    // toggle : 1
    //
main_Toggle_1_out_1[cache: 2] = 
    Toggle(
    main_Toggle_1_in_1,
    main_Toggle_1_in_2,
    main_Toggle_1_in_3,
    main_Toggle_1_in_4,
    main_Toggle_1_in_5,
    main_Toggle_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Receiver[11]: x = 60, y = 80, inputs = 1, label = u
    // page group: Vectors
    //
main_Receiver_11_out_1[cache: 0] = u;
    // 
    // node Scalar[2]: x = 140, y = 20, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_2"
    // input[2]: defaulting = 1, visible = 1, type = 67108863, value = NULL
    // input[3]: defaulting = 0, visible = 0, type = 5, value = -0.84 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -3.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 3.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = -0.84 
    // page group: Vectors
    //
    // 
    // node Compute[16]: x = 140, y = 100, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "10**$0"
    // page group: Vectors
    // expression: value = 10**d
    // name[2]: value = d
    //
main_Compute_16_out_1 = 
    Compute(
    main_Compute_16_in_1,
    main_Scalar_2_out_1
    ) [instance: 16, cache: 1];
    // 
    // node Glyph[1]: x = 60, y = 180, inputs = 7, label = Glyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "arrow2D"
    // input[3]: defaulting = 0, visible = 1, type = 5, value = 0.5
    // input[5]: defaulting = 0, visible = 1, type = 5, value = 0.1
    // page group: Vectors
    //
main_Glyph_1_out_1 = 
    Glyph(
    main_Receiver_11_out_1,
    main_Glyph_1_in_2,
    main_Glyph_1_in_3,
    main_Compute_16_out_1,
    main_Glyph_1_in_5,
    main_Glyph_1_in_6,
    main_Glyph_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Collect[10]: x = 241, y = 352, inputs = 2, label = Collect
    // page group: Vectors
    //
main_Collect_10_out_1 = 
    Collect(
    main_Glyph_1_out_1,
    main_Collect_10_in_2
    ) [instance: 10, cache: 1];
    // 
    // node Switch[7]: x = 103, y = 383, inputs = 2, label = Switch
    // page group: Vectors
    //
main_Switch_7_out_1 = 
    Switch(
    main_Toggle_1_out_1,
    main_Collect_10_out_1
    ) [instance: 7, cache: 1];
    // 
    // node Transmitter[34]: x = 118, y = 526, inputs = 1, label = vectors
    // page group: Vectors
    //
vectors = main_Switch_7_out_1;
    // 
    // node Receiver[47]: x = 581, y = 151, inputs = 1, label = vectors
    // page group: image
    //
main_Receiver_47_out_1[cache: 0] = vectors;
    // 
    // node Collect[2]: x = 295, y = 325, inputs = 7, label = Collect
    // page group: image
    //
main_Collect_2_out_1 = 
    Collect(
    main_Receiver_46_out_1,
    main_Receiver_6_out_1,
    main_Receiver_42_out_1,
    main_Caption_2_out_1,
    main_Collect_2_in_5,
    main_Collect_2_in_6,
    main_Receiver_47_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Light[2]: x = 473, y = 61, inputs = 3, label = Light
    // input[1]: defaulting = 0, visible = 1, type = 8, value = [-1 -0.2 1]
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [1 1 1]
    // input[3]: defaulting = 0, visible = 1, type = 3, value = 1
    // page group: image
    //
main_Light_2_out_1 = 
    Light(
    main_Light_2_in_1,
    main_Light_2_in_2,
    main_Light_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Collect[6]: x = 406, y = 197, inputs = 3, label = Collect
    // page group: image
    //
main_Collect_6_out_1 = 
    Collect(
    main_Light_2_out_1,
    main_AmbientLight_1_out_1,
    main_Collect_6_in_3
    ) [instance: 6, cache: 1];
    // 
    // node Colormap[2]: x = 705, y = 213, inputs = 19, label = Colormap
    // input[1]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0064102564 0.10526316] }
    // input[2]: defaulting = 0, visible = 0, type = 16777224, value = { [1.0 0.44210526] }
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [0.33653846 0.031578947] [1.0 0.0] }
    // input[4]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[5]: defaulting = 0, visible = 0, type = 32, value = "Colormap_2"
    // input[7]: defaulting = 1, visible = 1, type = 5, value = 0.0
    // input[8]: defaulting = 1, visible = 1, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 1, type = 1, value = 20
    // input[12]: defaulting = 0, visible = 0, type = 16777221, value = { 0.0 1.0 }
    // input[13]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[14]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[15]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[16]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[17]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // input[18]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[19]: visible = 1
    // page group: ProcScalar
    // window: position = (0.0635,0.1341), size = 0.6348x0.5859
    //
main_Colormap_2_out_1[cache: 2],
main_Colormap_2_out_2[cache: 2] = 
    Colormap(
    main_Colormap_2_in_1,
    main_Colormap_2_in_2,
    main_Colormap_2_in_3,
    main_Colormap_2_in_4,
    main_Colormap_2_in_5,
    main_Compute_19_out_1,
    main_Colormap_2_in_7,
    main_Colormap_2_in_8,
    main_Colormap_2_in_9,
    main_Colormap_2_in_10,
    main_Colormap_2_in_11,
    main_Colormap_2_in_12,
    main_Colormap_2_in_13,
    main_Colormap_2_in_14,
    main_Colormap_2_in_15,
    main_Colormap_2_in_16,
    main_Colormap_2_in_17,
    main_Colormap_2_in_18,
    main_Colormap_2_in_19
    ) [instance: 2, cache: 1];
    // 
    // node Compute[8]: x = 230, y = 60, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.y"
    // page group: ProcVelocity
    // expression: value = u.y
    // name[2]: value = u
    //
main_Compute_8_out_1 = 
    Compute(
    main_Compute_8_in_1,
    main_Receiver_35_out_1
    ) [instance: 8, cache: 1];
    // 
    // node Scalar[1]: x = 514, y = 226, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_1"
    // input[2]: defaulting = 1, visible = 1, type = 67108863, value = NULL
    // input[3]: defaulting = 0, visible = 0, type = 5, value = -1.08 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -3.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 3.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = -1.08 
    // page group: Streamlines
    //
    // 
    // node Compute[15]: x = 425, y = 275, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "10**$0"
    // page group: Streamlines
    // expression: value = 10**d
    // name[2]: value = d
    //
main_Compute_15_out_1 = 
    Compute(
    main_Compute_15_in_1,
    main_Scalar_1_out_1
    ) [instance: 15, cache: 1];
    // 
    // node Scalar[5]: x = 671, y = 134, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_5"
    // input[2]: defaulting = 1, visible = 1, type = 67108863, value = NULL
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.6 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -3.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 3.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = 0.6 
    // page group: Streamlines
    //
    // 
    // node Compute[23]: x = 583, y = 213, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "10**$0"
    // page group: Streamlines
    // expression: value = 10**d
    // name[2]: value = d
    //
main_Compute_23_out_1 = 
    Compute(
    main_Compute_23_in_1,
    main_Scalar_5_out_1
    ) [instance: 23, cache: 1];
    // 
    // node Scalar[16]: x = 400, y = 520, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_16"
    // input[2]: defaulting = 1, visible = 1, type = 67108863, value = NULL
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.0001
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.0001
    // page group: ProcScalar
    //
    // 
    // node Compute[34]: x = 320, y = 600, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[0, $0, 0]"
    // page group: ProcScalar
    // expression: value = [0, y, 0]
    // name[2]: value = y
    //
main_Compute_34_out_1 = 
    Compute(
    main_Compute_34_in_1,
    main_Scalar_16_out_1
    ) [instance: 34, cache: 1];
    // 
    // node Compute[43]: x = 915, y = 307, inputs = 5, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[-0.2,$2,$1]"
    // page group: camera
    // expression: value = [-0.2,y0,H]
    // name[2]: value = xi
    // name[3]: value = H
    // name[4]: value = y0
    // name[5]: value = y1
    //
main_Compute_43_out_1 = 
    Compute(
    main_Compute_43_in_1,
    main_Compute_40_out_1,
    main_Scalar_21_out_1,
    main_Scalar_22_out_1,
    main_Scalar_25_out_1
    ) [instance: 43, cache: 1];
    // 
    // node Image[6]: x = 340, y = 432, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_6"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [0.545412 0.539532 -0.00969846]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [0.545412 0.539532 116.66]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 1.65287
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 1000
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.697
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0 1 0]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 0.811701
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[20]: defaulting = 1, visible = 1, type = 64, value = NULL
    // input[21]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[22]: defaulting = 1, visible = 0, type = 32, value = "white"
    // input[23]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[25]: defaulting = 0, visible = 0, type = 32, value = "coal"
    // input[26]: defaulting = 0, visible = 0, type = 32, value = "tiff"
    // input[27]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[28]: defaulting = 0, visible = 0, type = 5, value = 0.75
    // input[29]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[32]: defaulting = 0, visible = 0, type = 16777224, value = {[-0.5 -0.5 0] [0.5 2 0.5]}
    // input[33]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[35]: defaulting = 1, visible = 0, type = 8, value = [0,0,0]
    // input[37]: defaulting = 0, visible = 0, type = 16777248, value = {"clear", "black", "black", "black"}
    // input[38]: defaulting = 0, visible = 0, type = 16777248, value = {"background", "grid", "ticks", "labels"}
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "none"
    // page group: image
    // depth: value = 16
    // window: position = (0.0000,0.0000), size = 0.9902x0.9648
    // internal caching: 1
    //
main_Image_6_out_1,
main_Image_6_out_2,
main_Image_6_out_3 = 
    Image(
    main_Image_6_in_1,
    main_Collect_2_out_1,
    main_Image_6_in_3,
    main_Image_6_in_4,
    main_Image_6_in_5,
    main_Image_6_in_6,
    main_Image_6_in_7,
    main_Image_6_in_8,
    main_Image_6_in_9,
    main_Image_6_in_10,
    main_Image_6_in_11,
    main_Image_6_in_12,
    main_Image_6_in_13,
    main_Image_6_in_14,
    main_Image_6_in_15,
    main_Image_6_in_16,
    main_Image_6_in_17,
    main_Image_6_in_18,
    main_Image_6_in_19,
    main_Image_6_in_20,
    main_Image_6_in_21,
    main_Image_6_in_22,
    main_Image_6_in_23,
    main_Image_6_in_24,
    main_Image_6_in_25,
    main_Image_6_in_26,
    main_Image_6_in_27,
    main_Image_6_in_28,
    main_Image_6_in_29,
    main_Image_6_in_30,
    main_Image_6_in_31,
    main_Image_6_in_32,
    main_Image_6_in_33,
    main_Image_6_in_34,
    main_Image_6_in_35,
    main_Image_6_in_36,
    main_Image_6_in_37,
    main_Image_6_in_38,
    main_Image_6_in_39,
    main_Image_6_in_40,
    main_Image_6_in_41,
    main_Image_6_in_42,
    main_Image_6_in_43,
    main_Image_6_in_44,
    main_Image_6_in_45,
    main_Image_6_in_46,
    main_Image_6_in_47,
    main_Image_6_in_48,
    main_Image_6_in_49
    ) [instance: 6, cache: 1];
    // 
    // node Light[3]: x = 483, y = 124, inputs = 3, label = Light
    // input[1]: defaulting = 0, visible = 1, type = 8, value = [1 0 0.5]
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [0.7 0.7 0.7]
    // input[3]: defaulting = 0, visible = 1, type = 3, value = 1
    // page group: image
    //
main_Light_3_out_1 = 
    Light(
    main_Light_3_in_1,
    main_Light_3_in_2,
    main_Light_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[36]: x = 292, y = 553, inputs = 1, label = camera_cp
    // page group: camera
    //
camera_cp = main_Camera_1_out_1;
    // 
    // node Receiver[54]: x = 479, y = 386, inputs = 1, label = camera_cp
    // page group: image
    //
main_Receiver_54_out_1[cache: 0] = camera_cp;
    // 
    // node RubberSheet[1]: x = 288, y = 211, inputs = 4, label = RubberSheet
    // input[2]: defaulting = 0, visible = 1, type = 5, value = 20000.0
    // page group: ProcScalar
    //
main_RubberSheet_1_out_1 = 
    RubberSheet(
    main_Compute_19_out_1,
    main_RubberSheet_1_in_2,
    main_RubberSheet_1_in_3,
    main_RubberSheet_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Toggle[3]: x = 40, y = 260, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_3"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 1
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 1
    // page group: ScalarGrad
    // toggle : 1
    //
    // 
    // node Switch[10]: x = 160, y = 300, inputs = 2, label = Switch
    // page group: ScalarGrad
    //
main_Switch_10_out_1 = 
    Switch(
    main_Toggle_3_out_1,
    main_AutoGlyph_3_out_1
    ) [instance: 10, cache: 1];
    // 
    // node Transmitter[11]: x = 240, y = 180, inputs = 1, label = v
    // page group: ProcVelocity
    //
v = main_Compute_8_out_1;
    // 
    // node Transmitter[22]: x = 60, y = 360, inputs = 1, label = scalar_grad
    // page group: ScalarGrad
    //
scalar_grad = main_Switch_10_out_1;
    // 
    // node Transmitter[28]: x = 522, y = 241, inputs = 1, label = pf_step
    // page group: import
    //
pf_step = main_Transmitter_28_in_1;
    // 
    // node Transmitter[29]: x = 220, y = 160, inputs = 1, label = abs_u
    // page group: Selectscalar
    //
abs_u = main_Compute_29_out_1;
    // 
    // node Transmitter[35]: x = 400, y = 600, inputs = 1, label = y_cut_plane
    // page group: ProcScalar
    //
y_cut_plane = main_Scalar_16_out_1;
    // 
    // node Transmitter[37]: x = 759, y = 479, inputs = 1, label = camera_rp
    // page group: camera
    //
camera_rp = main_Camera_2_out_1;
    // 
    // node Tube[1]: x = 290, y = 382, inputs = 4, label = Tube
    // input[2]: defaulting = 1, visible = 1, type = 5, value = 0.001
    // page group: Streamlines
    //
main_Tube_1_out_1 = 
    Tube(
    main_Translate_1_out_1,
    main_Compute_15_out_1,
    main_Tube_1_in_3,
    main_Tube_1_in_4
    ) [instance: 1, cache: 1];
    //
    // decorator Annotate	pos=(844,295) size=43x28 style(Label), value = <NULL>
    // annotation user_begin: 4
    // annotation user: from
    // annotation user_end: <NULL>
    // page group: camera
    //
    // decorator Annotate	pos=(612,289) size=26x28 style(Label), value = <NULL>
    // annotation user_begin: 2
    // annotation user: to
    // annotation user_end: <NULL>
    // page group: camera
    //
    // decorator Annotate	pos=(1021,295) size=112x28 style(Label), value = <NULL>
    // annotation user_begin: 15
    // annotation user: from (estatico)
    // annotation user_end: <NULL>
    // page group: camera
// network: end of macro body
CacheScene(main_Image_6_in_1, main_Image_6_out_1, main_Image_6_out_2);
}
main_AmbientLight_1_in_1 = [0.1 0.1 0.1];
main_AmbientLight_1_out_1 = NULL;
main_Toggle_4_in_1 = "Toggle_4";
main_Toggle_4_in_2 =  2  ;
main_Toggle_4_in_3 = 0;
main_Toggle_4_in_4 =  1  ;
main_Toggle_4_in_5 =  2  ;
main_Toggle_4_in_6 = NULL;
main_Toggle_4_out_1 =  2  ;
main_Selector_1_in_1 = "Selector_1";
main_Selector_1_in_2 = "abs(u)" ;
main_Selector_1_in_3 = 1 ;
main_Selector_1_in_4 = NULL;
main_Selector_1_in_5 = NULL;
main_Selector_1_in_6 = NULL;
main_Selector_1_in_7 = NULL;
main_Selector_1_out_1 = 1 ;
main_Selector_1_out_2 = "abs(u)" ;
main_Import_1_in_1 = "viewer.dx";
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = "dx";
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Compute_48_in_1 = "[$0.0,$0.1]";
main_Compute_48_out_1 = NULL;
main_Transmitter_42_out_1 = NULL;
main_Receiver_38_out_1 = NULL;
main_Compute_29_in_1 = "mag($0)";
main_Compute_29_out_1 = NULL;
main_Compute_47_in_1 = "$0.2";
main_Compute_47_out_1 = NULL;
main_Transmitter_43_out_1 = NULL;
main_Receiver_37_out_1 = NULL;
main_Receiver_35_out_1 = NULL;
main_Compute_49_in_1 = "$0.0";
main_Compute_49_out_1 = NULL;
main_Gradient_4_in_2 = NULL;
main_Gradient_4_out_1 = NULL;
main_Compute_51_in_1 = "$0.1";
main_Compute_51_out_1 = NULL;
main_Gradient_5_in_2 = NULL;
main_Gradient_5_out_1 = NULL;
main_Compute_52_in_1 = "$1.x-$0.y";
main_Compute_52_out_1 = NULL;
main_Compute_30_in_1 = "mag($0)";
main_Compute_30_out_1 = NULL;
main_Transmitter_9_out_1 = NULL;
main_Receiver_39_out_1 = NULL;
main_Compute_10_in_1 = "log10(max(mag($0),0.01))";
main_Compute_10_out_1 = NULL;
main_Transmitter_10_out_1 = NULL;
main_Receiver_40_out_1 = NULL;
main_Receiver_57_in_1 = NULL;
main_Receiver_57_out_1 = NULL;
main_Switch_5_out_1 = NULL;
main_Scalar_15_in_1 = "Scalar_15";
main_Scalar_15_in_2 = NULL;
main_Scalar_15_in_3 = 0.8;
main_Scalar_15_in_4 = NULL;
main_Scalar_15_in_5 = NULL;
main_Scalar_15_in_6 = NULL;
main_Scalar_15_in_7 = NULL;
main_Scalar_15_in_8 = NULL;
main_Scalar_15_in_9 = NULL;
main_Scalar_15_in_10 = NULL;
main_Scalar_15_in_11 = NULL;
main_Scalar_15_out_1 = 0.8;
main_Isolate_1_out_1 = NULL;
main_Switch_11_out_1 = NULL;
main_Transmitter_32_out_1 = NULL;
main_Receiver_45_out_1 = NULL;
main_Gradient_3_in_2 = NULL;
main_Gradient_3_out_1 = NULL;
main_AutoGlyph_3_in_2 = "rocket";
main_AutoGlyph_3_in_3 = 0.1;
main_AutoGlyph_3_in_4 = 10.0;
main_AutoGlyph_3_in_5 = NULL;
main_AutoGlyph_3_in_6 = 0.0;
main_AutoGlyph_3_in_7 = 0.2;
main_AutoGlyph_3_out_1 = NULL;
main_Sequencer_1_in_1 = "Sequencer_1";
main_Sequencer_1_in_2 = NULL;
main_Sequencer_1_in_3 = NULL;
main_Sequencer_1_in_4 = 0;
main_Sequencer_1_in_5 = 4000;
main_Sequencer_1_in_6 = NULL;
main_Sequencer_1_in_7 = { 0 4000 1 2566 4000 1 };
main_Sequencer_1_out_1 = NULL;

@startframe = 2566;
@nextframe  = @startframe;
@endframe   = 4000;
@deltaframe = 1;
main_Transmitter_30_out_1 = NULL;
main_Receiver_53_out_1 = NULL;
main_Integer_2_in_1 = "Integer_2";
main_Integer_2_in_2 = NULL;
main_Integer_2_in_3 = 600;
main_Integer_2_in_4 = NULL;
main_Integer_2_in_5 = NULL;
main_Integer_2_in_6 = NULL;
main_Integer_2_in_7 = NULL;
main_Integer_2_in_8 = NULL;
main_Integer_2_in_9 = NULL;
main_Integer_2_in_10 = NULL;
main_Integer_2_in_11 = NULL;
main_Integer_2_out_1 = 600;
main_Compute_36_in_1 = "2*3.14159*(float($0)/float($1)-0.4)";
main_Compute_36_out_1 = NULL;
main_Scalar_17_in_1 = "Scalar_17";
main_Scalar_17_in_2 = NULL;
main_Scalar_17_in_3 = 2.0;
main_Scalar_17_in_4 = NULL;
main_Scalar_17_in_5 = NULL;
main_Scalar_17_in_6 = NULL;
main_Scalar_17_in_7 = NULL;
main_Scalar_17_in_8 = NULL;
main_Scalar_17_in_9 = NULL;
main_Scalar_17_in_10 = NULL;
main_Scalar_17_in_11 = NULL;
main_Scalar_17_out_1 = 2.0;
main_Scalar_18_in_1 = "Scalar_18";
main_Scalar_18_in_2 = NULL;
main_Scalar_18_in_3 = 2.0;
main_Scalar_18_in_4 = NULL;
main_Scalar_18_in_5 = NULL;
main_Scalar_18_in_6 = NULL;
main_Scalar_18_in_7 = NULL;
main_Scalar_18_in_8 = NULL;
main_Scalar_18_in_9 = NULL;
main_Scalar_18_in_10 = NULL;
main_Scalar_18_in_11 = NULL;
main_Scalar_18_out_1 = 2.0;
main_Compute_37_in_1 = "($1+$2)/2+($2-$1)/2*cos(1.7*$0)";
main_Compute_37_out_1 = NULL;
main_Scalar_19_in_1 = "Scalar_19";
main_Scalar_19_in_2 = NULL;
main_Scalar_19_in_3 = 0.2;
main_Scalar_19_in_4 = NULL;
main_Scalar_19_in_5 = NULL;
main_Scalar_19_in_6 = NULL;
main_Scalar_19_in_7 = NULL;
main_Scalar_19_in_8 = NULL;
main_Scalar_19_in_9 = NULL;
main_Scalar_19_in_10 = NULL;
main_Scalar_19_in_11 = NULL;
main_Scalar_19_out_1 = 0.2;
main_Scalar_20_in_1 = "Scalar_20";
main_Scalar_20_in_2 = NULL;
main_Scalar_20_in_3 = 0.4;
main_Scalar_20_in_4 = NULL;
main_Scalar_20_in_5 = NULL;
main_Scalar_20_in_6 = NULL;
main_Scalar_20_in_7 = NULL;
main_Scalar_20_in_8 = NULL;
main_Scalar_20_in_9 = NULL;
main_Scalar_20_in_10 = NULL;
main_Scalar_20_in_11 = NULL;
main_Scalar_20_out_1 = 0.4;
main_Compute_38_in_1 = "($1+$2)/2+($2-$1)/2*cos($0)";
main_Compute_38_out_1 = NULL;
main_Compute_39_in_1 = "[0.7+$1*cos($0),1.5+$1*sin($0),1.5+$2]";
main_Compute_39_out_1 = NULL;
main_Camera_1_in_1 = [0.7 1.5 1.5];
main_Camera_1_in_3 = 1.0;
main_Camera_1_in_4 = 640;
main_Camera_1_in_5 = 0.75;
main_Camera_1_in_6 = [0 0 1];
main_Camera_1_in_7 = NULL;
main_Camera_1_in_8 = 40.0;
main_Camera_1_in_9 = NULL;
main_Camera_1_out_1 = NULL;
main_Receiver_56_out_1 = NULL;
main_Compute_40_in_1 = "float($0)/float($1)";
main_Compute_40_out_1 = NULL;
main_Scalar_21_in_1 = "Scalar_21";
main_Scalar_21_in_2 = NULL;
main_Scalar_21_in_3 = 0.5;
main_Scalar_21_in_4 = NULL;
main_Scalar_21_in_5 = NULL;
main_Scalar_21_in_6 = NULL;
main_Scalar_21_in_7 = NULL;
main_Scalar_21_in_8 = NULL;
main_Scalar_21_in_9 = NULL;
main_Scalar_21_in_10 = NULL;
main_Scalar_21_in_11 = NULL;
main_Scalar_21_out_1 = 0.5;
main_Compute_42_in_1 = "[0.,0.5,0.1]";
main_Compute_42_out_1 = NULL;
main_Scalar_22_in_1 = "Scalar_22";
main_Scalar_22_in_2 = NULL;
main_Scalar_22_in_3 = -1.0;
main_Scalar_22_in_4 = NULL;
main_Scalar_22_in_5 = NULL;
main_Scalar_22_in_6 = NULL;
main_Scalar_22_in_7 = NULL;
main_Scalar_22_in_8 = NULL;
main_Scalar_22_in_9 = NULL;
main_Scalar_22_in_10 = NULL;
main_Scalar_22_in_11 = NULL;
main_Scalar_22_out_1 = -1.0;
main_Scalar_25_in_1 = "Scalar_25";
main_Scalar_25_in_2 = NULL;
main_Scalar_25_in_3 = 3.0;
main_Scalar_25_in_4 = NULL;
main_Scalar_25_in_5 = NULL;
main_Scalar_25_in_6 = NULL;
main_Scalar_25_in_7 = NULL;
main_Scalar_25_in_8 = NULL;
main_Scalar_25_in_9 = NULL;
main_Scalar_25_in_10 = NULL;
main_Scalar_25_in_11 = NULL;
main_Scalar_25_out_1 = 3.0;
main_Compute_41_in_1 = "[-0.2,$2+($3-$2)*$0,0.5]";
main_Compute_41_out_1 = NULL;
main_Camera_2_in_3 = 1.0;
main_Camera_2_in_4 = 640;
main_Camera_2_in_5 = 0.75;
main_Camera_2_in_6 = [0 0 1];
main_Camera_2_in_7 = NULL;
main_Camera_2_in_8 = 40.0;
main_Camera_2_in_9 = NULL;
main_Camera_2_out_1 = NULL;
main_Receiver_36_out_1 = NULL;
main_Transmitter_21_out_1 = NULL;
main_Receiver_30_out_1 = NULL;
main_Format_1_in_1 = "Frame %d, Color=%s";
main_Format_1_out_1 = NULL;
main_Caption_2_in_2 = NULL;
main_Caption_2_in_3 = NULL;
main_Caption_2_in_4 = NULL;
main_Caption_2_in_5 = NULL;
main_Caption_2_in_6 = NULL;
main_Caption_2_in_7 = NULL;
main_Caption_2_in_8 = NULL;
main_Caption_2_in_9 = NULL;
main_Caption_2_out_1 = NULL;
main_Toggle_2_in_1 = "Toggle_2";
main_Toggle_2_in_2 =  1  ;
main_Toggle_2_in_3 = 1;
main_Toggle_2_in_4 =  1  ;
main_Toggle_2_in_5 =  0  ;
main_Toggle_2_in_6 = NULL;
main_Toggle_2_out_1 =  1  ;
main_Receiver_14_out_1 = NULL;
main_Compute_45_in_1 = "0.01";
main_Compute_45_out_1 = NULL;
main_Compute_44_in_1 = "$0/(mag($0)+$1)";
main_Compute_44_out_1 = NULL;
main_Grid_2_in_1 = [0.5,0.5];
main_Grid_2_in_2 = "line";
main_Grid_2_in_3 = {[0,0.5]};
main_Grid_2_in_4 = {11};
main_Grid_2_out_1 = NULL;
main_Grid_3_in_1 = [0.85,0.05];
main_Grid_3_in_2 = "line";
main_Grid_3_in_3 = {[0,0.05]};
main_Grid_3_in_4 = {11};
main_Grid_3_out_1 = NULL;
main_Grid_4_in_1 = [0.15,0.05];
main_Grid_4_in_2 = "line";
main_Grid_4_in_3 = {[0,0.05]};
main_Grid_4_in_4 = {11};
main_Grid_4_out_1 = NULL;
main_Collect_9_in_4 = NULL;
main_Collect_9_out_1 = NULL;
main_Streamline_1_in_3 = NULL;
main_Streamline_1_in_4 = 100.0;
main_Streamline_1_in_5 = NULL;
main_Streamline_1_in_6 = NULL;
main_Streamline_1_in_7 = 0.01;
main_Streamline_1_out_1 = NULL;
main_Translate_1_in_2 = [0 0 0.1];
main_Translate_1_out_1 = NULL;
main_Color_7_in_2 = "black";
main_Color_7_in_3 = NULL;
main_Color_7_in_4 = NULL;
main_Color_7_in_5 = NULL;
main_Color_7_out_1 = NULL;
main_Switch_6_out_1 = NULL;
main_Transmitter_33_out_1 = NULL;
main_Receiver_46_out_1 = NULL;
main_Receiver_44_out_1 = NULL;
main_Scalar_3_in_1 = "Scalar_3";
main_Scalar_3_in_2 = NULL;
main_Scalar_3_in_3 = 100000.0;
main_Scalar_3_in_4 = NULL;
main_Scalar_3_in_5 = NULL;
main_Scalar_3_in_6 = NULL;
main_Scalar_3_in_7 = NULL;
main_Scalar_3_in_8 = NULL;
main_Scalar_3_in_9 = NULL;
main_Scalar_3_in_10 = NULL;
main_Scalar_3_in_11 = NULL;
main_Scalar_3_out_1 = 100000.0;
main_Scalar_6_in_1 = "Scalar_6";
main_Scalar_6_in_2 = NULL;
main_Scalar_6_in_3 = -1000.0;
main_Scalar_6_in_4 = NULL;
main_Scalar_6_in_5 = NULL;
main_Scalar_6_in_6 = NULL;
main_Scalar_6_in_7 = NULL;
main_Scalar_6_in_8 = NULL;
main_Scalar_6_in_9 = NULL;
main_Scalar_6_in_10 = NULL;
main_Scalar_6_in_11 = NULL;
main_Scalar_6_out_1 = -1000.0;
main_Compute_19_in_1 = "max(min($0,$1),$2)";
main_Compute_19_out_1 = NULL;
main_Colormap_1_in_1 = { [0.0 0.666667] [1.0 0.0] };
main_Colormap_1_in_2 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_1_in_3 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_1_in_4 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_1_in_5 = "Colormap_1";
main_Colormap_1_in_7 = NULL;
main_Colormap_1_in_8 = NULL;
main_Colormap_1_in_9 = NULL;
main_Colormap_1_in_10 = NULL;
main_Colormap_1_in_11 = NULL;
main_Colormap_1_in_12 = { 0.0 1.0 };
main_Colormap_1_in_13 = NULL;
main_Colormap_1_in_14 = NULL;
main_Colormap_1_in_15 = NULL;
main_Colormap_1_in_16 = NULL;
main_Colormap_1_in_17 = 0.0;
main_Colormap_1_in_18 = 1.0;
main_Colormap_1_in_19 = NULL;
main_Colormap_1_out_1 = NULL;
main_Color_6_in_3 = NULL;
main_Color_6_in_4 = NULL;
main_Color_6_in_5 = NULL;
main_Color_6_out_1 = NULL;
main_Toggle_6_in_1 = "Toggle_6";
main_Toggle_6_in_2 =  0  ;
main_Toggle_6_in_3 = 0;
main_Toggle_6_in_4 =  1  ;
main_Toggle_6_in_5 =  0  ;
main_Toggle_6_in_6 = NULL;
main_Toggle_6_out_1 =  0  ;
main_ShowConnections_1_out_1 = NULL;
main_Switch_13_out_1 = NULL;
main_ColorBar_2_in_2 = NULL;
main_ColorBar_2_in_3 = NULL;
main_ColorBar_2_in_4 = NULL;
main_ColorBar_2_in_5 = NULL;
main_ColorBar_2_in_6 = NULL;
main_ColorBar_2_in_7 = NULL;
main_ColorBar_2_in_8 = NULL;
main_ColorBar_2_in_9 = NULL;
main_ColorBar_2_in_10 = NULL;
main_ColorBar_2_in_11 = NULL;
main_ColorBar_2_in_12 = NULL;
main_ColorBar_2_in_13 = NULL;
main_ColorBar_2_in_14 = NULL;
main_ColorBar_2_in_15 = NULL;
main_ColorBar_2_in_16 = NULL;
main_ColorBar_2_out_1 = NULL;
main_Collect_5_in_3 = NULL;
main_Collect_5_in_4 = NULL;
main_Collect_5_in_5 = NULL;
main_Collect_5_out_1 = NULL;
main_Transmitter_5_out_1 = NULL;
main_Receiver_6_out_1 = NULL;
main_Glyph_3_in_2 = "sphere";
main_Glyph_3_in_3 = NULL;
main_Glyph_3_in_4 = 0.01;
main_Glyph_3_in_5 = NULL;
main_Glyph_3_in_6 = NULL;
main_Glyph_3_in_7 = NULL;
main_Glyph_3_out_1 = NULL;
main_Transmitter_39_out_1 = NULL;
main_Receiver_42_out_1 = NULL;
main_Toggle_1_in_1 = "Toggle_1";
main_Toggle_1_in_2 =  1  ;
main_Toggle_1_in_3 = 1;
main_Toggle_1_in_4 =  1  ;
main_Toggle_1_in_5 =  0  ;
main_Toggle_1_in_6 = NULL;
main_Toggle_1_out_1 =  1  ;
main_Receiver_11_out_1 = NULL;
main_Scalar_2_in_1 = "Scalar_2";
main_Scalar_2_in_2 = NULL;
main_Scalar_2_in_3 = -0.84 ;
main_Scalar_2_in_4 = NULL;
main_Scalar_2_in_5 = NULL;
main_Scalar_2_in_6 = NULL;
main_Scalar_2_in_7 = NULL;
main_Scalar_2_in_8 = NULL;
main_Scalar_2_in_9 = NULL;
main_Scalar_2_in_10 = NULL;
main_Scalar_2_in_11 = NULL;
main_Scalar_2_out_1 = -0.84 ;
main_Compute_16_in_1 = "10**$0";
main_Compute_16_out_1 = NULL;
main_Glyph_1_in_2 = "arrow2D";
main_Glyph_1_in_3 = 0.5;
main_Glyph_1_in_5 = 0.1;
main_Glyph_1_in_6 = NULL;
main_Glyph_1_in_7 = NULL;
main_Glyph_1_out_1 = NULL;
main_Collect_10_in_2 = NULL;
main_Collect_10_out_1 = NULL;
main_Switch_7_out_1 = NULL;
main_Transmitter_34_out_1 = NULL;
main_Receiver_47_out_1 = NULL;
main_Collect_2_in_5 = NULL;
main_Collect_2_in_6 = NULL;
main_Collect_2_out_1 = NULL;
main_Light_2_in_1 = [-1 -0.2 1];
main_Light_2_in_2 = [1 1 1];
main_Light_2_in_3 = 1;
main_Light_2_out_1 = NULL;
main_Collect_6_in_3 = NULL;
main_Colormap_2_in_1 = { [0.0064102564 0.10526316] };
main_Colormap_2_in_2 = { [1.0 0.44210526] };
main_Colormap_2_in_3 = { [0.0 1.0] [0.33653846 0.031578947] [1.0 0.0] };
main_Colormap_2_in_4 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_2_in_5 = "Colormap_2";
main_Colormap_2_in_7 = NULL;
main_Colormap_2_in_8 = NULL;
main_Colormap_2_in_9 = NULL;
main_Colormap_2_in_10 = NULL;
main_Colormap_2_in_11 = NULL;
main_Colormap_2_in_12 = { 0.0 1.0 };
main_Colormap_2_in_13 = NULL;
main_Colormap_2_in_14 = NULL;
main_Colormap_2_in_15 = NULL;
main_Colormap_2_in_16 = NULL;
main_Colormap_2_in_17 = 0.0;
main_Colormap_2_in_18 = 1.0;
main_Colormap_2_in_19 = NULL;
main_Compute_8_in_1 = "$0.y";
main_Compute_8_out_1 = NULL;
main_Scalar_1_in_1 = "Scalar_1";
main_Scalar_1_in_2 = NULL;
main_Scalar_1_in_3 = -1.08 ;
main_Scalar_1_in_4 = NULL;
main_Scalar_1_in_5 = NULL;
main_Scalar_1_in_6 = NULL;
main_Scalar_1_in_7 = NULL;
main_Scalar_1_in_8 = NULL;
main_Scalar_1_in_9 = NULL;
main_Scalar_1_in_10 = NULL;
main_Scalar_1_in_11 = NULL;
main_Scalar_1_out_1 = -1.08 ;
main_Compute_15_in_1 = "10**$0";
main_Compute_15_out_1 = NULL;
main_Scalar_5_in_1 = "Scalar_5";
main_Scalar_5_in_2 = NULL;
main_Scalar_5_in_3 = 0.6 ;
main_Scalar_5_in_4 = NULL;
main_Scalar_5_in_5 = NULL;
main_Scalar_5_in_6 = NULL;
main_Scalar_5_in_7 = NULL;
main_Scalar_5_in_8 = NULL;
main_Scalar_5_in_9 = NULL;
main_Scalar_5_in_10 = NULL;
main_Scalar_5_in_11 = NULL;
main_Scalar_5_out_1 = 0.6 ;
main_Compute_23_in_1 = "10**$0";
main_Scalar_16_in_1 = "Scalar_16";
main_Scalar_16_in_2 = NULL;
main_Scalar_16_in_3 = 0.0001;
main_Scalar_16_in_4 = NULL;
main_Scalar_16_in_5 = NULL;
main_Scalar_16_in_6 = NULL;
main_Scalar_16_in_7 = NULL;
main_Scalar_16_in_8 = NULL;
main_Scalar_16_in_9 = NULL;
main_Scalar_16_in_10 = NULL;
main_Scalar_16_in_11 = NULL;
main_Scalar_16_out_1 = 0.0001;
main_Compute_34_in_1 = "[0, $0, 0]";
main_Compute_43_in_1 = "[-0.2,$2,$1]";
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_6_in_1 = "Image_6";
main_Image_6_in_3 = "X16,,";
main_Image_6_in_4 = 1;
main_Image_6_in_5 = [0.545412 0.539532 -0.00969846];
main_Image_6_in_6 = [0.545412 0.539532 116.66];
main_Image_6_in_7 = 1.65287;
main_Image_6_in_8 = 1000;
main_Image_6_in_9 = 0.697;
main_Image_6_in_10 = [0 1 0];
main_Image_6_in_11 = NULL;
main_Image_6_in_12 = 0;
main_Image_6_in_13 = NULL;
main_Image_6_in_14 = 1;
main_Image_6_in_15 = NULL;
main_Image_6_in_16 = NULL;
main_Image_6_in_17 = NULL;
main_Image_6_in_18 = NULL;
main_Image_6_in_19 = 0;
main_Image_6_in_20 = NULL;
main_Image_6_in_21 = 0;
main_Image_6_in_22 = NULL;
main_Image_6_in_23 = NULL;
main_Image_6_in_25 = "coal";
main_Image_6_in_26 = "tiff";
main_Image_6_in_27 = 640;
main_Image_6_in_28 = 0.75;
main_Image_6_in_29 = 0;
main_Image_6_in_30 = NULL;
main_Image_6_in_31 = NULL;
main_Image_6_in_32 = {[-0.5 -0.5 0] [0.5 2 0.5]};
main_Image_6_in_33 = 0;
main_Image_6_in_34 = NULL;
main_Image_6_in_35 = NULL;
main_Image_6_in_36 = NULL;
main_Image_6_in_37 = {"clear", "black", "black", "black"};
main_Image_6_in_38 = {"background", "grid", "ticks", "labels"};
main_Image_6_in_39 = NULL;
main_Image_6_in_40 = NULL;
main_Image_6_in_41 = "none";
main_Image_6_in_42 = NULL;
main_Image_6_in_43 = NULL;
main_Image_6_in_44 = NULL;
main_Image_6_in_45 = NULL;
main_Image_6_in_46 = NULL;
main_Image_6_in_47 = NULL;
main_Image_6_in_48 = NULL;
main_Image_6_in_49 = NULL;
main_Light_3_in_1 = [1 0 0.5];
main_Light_3_in_2 = [0.7 0.7 0.7];
main_Light_3_in_3 = 1;
main_Transmitter_36_out_1 = NULL;
main_RubberSheet_1_in_2 = 20000.0;
main_RubberSheet_1_in_3 = NULL;
main_RubberSheet_1_in_4 = NULL;
main_Toggle_3_in_1 = "Toggle_3";
main_Toggle_3_in_2 = 1;
main_Toggle_3_in_3 = 1;
main_Toggle_3_in_4 = NULL;
main_Toggle_3_in_5 = NULL;
main_Toggle_3_in_6 = NULL;
main_Toggle_3_out_1 = 1;
main_Switch_10_out_1 = NULL;
main_Transmitter_28_in_1 = NULL;
main_Tube_1_in_3 = NULL;
main_Tube_1_in_4 = NULL;
Executive("product version 4 2 0");
$sync

sequence main();
play;

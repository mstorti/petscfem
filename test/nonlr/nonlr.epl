<:
require '../eperlini.pl';       # Initializes ePerl 
doc_vals(qw(case));
:>//                            # ends ePerl block

#default definitions
#===========================================================
global_options
ndim 2

chunk_size 10
save_file "save.state.tmp"
nsave 20

rtol 1e-2
maxits 100

save_file_pattern "outvector%d.out"
#nsaverot 1000000

#if $cont eq 'y'
initial state "save_state_tmp"
#else
initial_state "nonlr.ini"
#endif
print_some_file "nonlr.some"
save_file_some "nonlr.some.tmp"
nsome 1

nnwt 1
tol_newton 0
preco_type "lu"

#print_linear_system_and_stop
#solve_system 0

Dt 0.1
nstep 300
alpha 1.

weak_form 0 # todavia no tenemos el weak form

__END_HASH__

#===========================================================
# ndim nu ndof
nodes   2  2  5
__INCLUDE__ nonlr.nod
__END_NODES__

#===========================================================
elemset nsi_tet_keps 4
#Datos del elemento
geometry cartesian2d
npg 4
__END_HASH__
3 5 6 4 
5 7 8 6 
7 9 10 8 
9 11 12 10 
11 13 14 12 
13 15 16 14 
15 17 18 16 
17 19 20 18
19 21 22 20 
21 23 24 22 
23 25 26 24 
25 27 28 26 
27 29 30 28 
29 31 32 30 
31 33 34 32 
33 35 36 34 
__END_ELEMSET__

#  elemset wall_law_res 2
#  __END_HASH__
#  3 1 
#  4 2 
#  __END_ELEMSET__

end_elemsets

#===========================================================
#fixa
# El nodo uno esta todo impuesto
# el nodo 3 impongo todo menos el g.d.l. 5 (eps) que
# tiene que salir de la restriccion
#  1 2  0.
#  1 3  0.
#  1 4  0.
#  1 5  0.
#  3 1  1.
#  3 2  0.

#  2 2  0.
#  2 3  0.
#  2 4  0.
#  2 5  0.
#  4 1  1.
#  4 2  0.

#__END_FIXA__

constraint

-1. 35 1    1. 3 1
-1. 35 2    1. 3 2
-1. 35 3    1. 3 3
-1. 35 4    1. 3 4
-1. 35 5    1. 3 5

__INCLUDE__ nonlr.peri
__END_CONSTRAINT__

# Local Variables: $
# mode: shell-script $
# eval: (setq indent-tabs-mode nil) $
# End: $

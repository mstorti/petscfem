# -*- mode: shell-script -*-
# case: <:=$ENV{'case'}:>
<:                              # starts ePerl block
#__TRANSCRIPT__
require "$ENV{'PETSCFEM_DIR'}/test/eperlini.pl";# Initializes ePerl 
get_var_env('casen',undef);
$var_rain=0;
if ($casen eq 'var_rain') {
    $casen = 'transient';
    $T0=0.01;
    $rain0=2.;
    $var_rain=1;
}
$casename = $casen;
$steady = 1;
if ($casen eq 'transient') {
    $casen = 'plain';
    $steady = 0;
    $eta0=-100;
    $alpha=0.6;
    $nstep = 20;
} else {
    $eta0=-0.5;
    $alpha=1;
    $nstep=1;
}
$var_eta=0;
$etaL = $eta0;
if ($casen eq 'var_eta0') {
    $var_eta = 1;
} elsif ($casen eq 'var_eta1') {
    $var_eta = 1;
    $etaL = -1.;
}
$save_file = ($casen ? "aqui.$casen.tmp" : "aqui.state.tmp");
## Test the 'G_body' feature. 
$Nx = 100;
$Ny = 40;
$Lx = 1;				# Side of the cavity
$Ly = $Lx/$Nx;				# Side of the cavity
$hratio = 1;			# refinement (h_center/h_wall)
$K = 1.5;
$S = 2.3;
$eta = $eta0;
$Dt = 0.001;			# time step
$solver = "petsc";
$preco_type = "lu";
$maxits = 1;
$t = $nstep*$Dt;
#
#__END_TRANSCRIPT__
@vars = qw(t Nx Ny Lx Ly hratio K S casen var_eta eta0 
    etaL Dt steady T0 rain0);
transcript("", @vars);	# print variables on output
octave_export_vars(">data.m.tmp",@vars);
:>//                            # ends ePerl block

# <:pr('casen'):> 

global_options

nsave 5
# <:pr('nstep'):> 
nstep 1000
# initial_state aqui.state
<:pr('save_file'):> 

# type of solver (may be "iisd", "petsc"...)
<:pr('solver'):>
<:pr('preco_type'):> 
<:pr('maxits'):> 
# Number of subdomains
# <:pr('iisd_subpart'):>

#if $var_rain
print_some_file 
<: asave("aqui.some.tmp",[[1]]) :>
print_some_file "aqui.some.tmp"
save_file_some "var_rain.some_out.tmp"
nsome 1
#endif

# file containing the weight (speed) of processors
proc_weights weights.dat

#    Iterative parameters
tol_tet 1e-5
tol_newton 1e-10
atol 0
rtol 1e-6
dtol 1e3
nnwt 5

Krylov_dim <:=$maxits:>
print_internal_loop_conv 1
# print_linear_system_and_stop 1
# verify_jacobian_with_numerical_one 1

# print_nodal_partitioning 1
Dt <:=$Dt:>
steady <:=$steady:>
<:pr('alpha'):>

# activate_debug_print
activate_debug_memory_usage
__END_HASH__

# ndim nu ndof
nodes  2 3 1
__INCLUDE__ aqui.nod.tmp
_END_NODES__

elemset aquifer 4 
#if $var_eta
# props eta
#else 
<:pr('eta'):>
#endif
name malla

# report_consumed_time
geometry cartesian2d
ndim 2
npg 4
#
# Datos fisicos
#
<:pr('K'):> 
<:pr('S'):>
#if $var_rain
<:pr('T0'):>
<:pr('rain0'):>
temp_fun[rain] ./rain2.efn rain
#else
rain 0.
#endif
__END_HASH__
__INCLUDE__ aqui.con.tmp
__END_ELEMSET__

end_elemsets

#if !$var_rain
fixa
__INCLUDE__ aqui.fixa.tmp
__END_FIXA__
#endif

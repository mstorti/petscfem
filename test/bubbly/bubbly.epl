# -*- mode: shell-script -*-
# case: <:=$ENV{'case'}:>
<:                              # starts ePerl block
#__TRANSCRIPT__
require "$ENV{'PETSCFEM_DIR'}/test/eperlini.pl";# Initializes ePerl 
get_var_env('case',undef);
get_var_env('meas_perf',undef);
$save_file = ($case ? "bubbly.$case.tmp" : "bubbly.state.tmp");
## Test the 'G_body' feature. 
$g_body= 0;
if ($case eq 'g_body') {
    $case='lu';
    $g_body=1;
}
$U = 1;				# typical velocity scale
$L = 1;				# Side of the cavity
$N = 20;
$hratio = 5;			# refinement (h_center/h_wall)
$Re =1000;			# Reynolds number
$visco_l = $L/$Re;		# viscosity
$Dt = 1;			# time step
$solver = "petsc";
$preco_type = "lu";
$maxits = 1;
$nstep = 20;
$alpha_l = 1.;
$u_g=0;
$v_g=0;
$k = 0.1;
$eps = 0.1;
#
$cache_gdu = 0;
# `scalar' avoids returning the first match, which can be zero
# and then can be interpreted as `false' 
$solver = "petsc";
$preco_type = "lu";
#
#__END_TRANSCRIPT__
@vars = qw(U L N Re visco_l h Co Dt hratio 
		g_body alpha_l u_g v_g k eps);
transcript("", @vars);	# print variables on output
octave_export_vars(">data.m.tmp",@vars);
:>//                            # ends ePerl block

##================================================================
global_options

alpha 1.
nsave 1
<:pr('nstep'):> 
# initial_state "bubbly.ini.tmp"
initial_state "bubbly.state.Re400"
<:pr('save_file'):> 

# type of solver (may be "iisd", "petsc"...)
solver "petsc"
preco_type "lu"
<:pr('maxits'):> 
# Number of subdomains
# <:pr('iisd_subpart'):>

# file containing the weight (speed) of processors
proc_weights weights.dat

#    Iterative parameters
tol_tet 1e-5
tol_newton 1e-10
atol 0
rtol 0
dtol 1e3
nnwt 4

# omega_newton 0.2
Krylov_dim <:=$maxits:>
print_internal_loop_conv
#if 0
print_residual
print_linear_system_and_stop
# solve_system 0
verify_jacobian_with_numerical_one 1
inwt_stop 2
#endif

# print_nodal_partitioning 1
Dt <:=$Dt:>
# steady
weak_form 1
temporal_stability_factor 0
# tau_fac 10.

shock_capturing_factor 0
#if $cache_gdu
local_store
cache_grad_div_u
#endif

#if $g_body
G_body 0 -1.
#endif

ndim 2
<:pr('visco_l'):> 
visco_g <:=$visco_l/1000;:>
C_mu 0.
rho_l 1.
rho_g 1e-3
__END_HASH__

##================================================================
# ndim nu ndof
nodes  2  2  8
__INCLUDE__ bubbly.nod.tmp
_END_NODES__

##================================================================
elemset bubbly 4 
geometry cartesian2d
npg 4
__END_HASH__
__INCLUDE__ bubbly.con.tmp
__END_ELEMSET__

##================================================================
#if 1
elemset bubbly_bcconv 2
geometry cartesian1d
npg 2
__END_HASH__
__INCLUDE__ bubbly.bcconv.tmp
__END_ELEMSET__
#endif

end_elemsets

##================================================================
fixa
#if 1
# fijacion en la presion
1 1 0.
# fijaciones de velocidad en las paredes
__INCLUDE__ bubbly.fixa.tmp
#endif
__INCLUDE__ bubbly.fixa_all.tmp
__END_FIXA__

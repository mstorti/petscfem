# -*- mode: shell-script -*-
#
<:require '../eperlini.pl';	# Initializes ePerl 
$CASE=$ENV{'CASE'};
@read_var = readm_all_v("data.m");# read all variables in octave file
$T=.05;
$omega=2*$PI/$T;
$N_dt_per=128; # number of time steps per period
$Nper=1;
$diff = "0.$1" if $CASE=~/_d(.*)_/;
$diff = $1*10**$2 if $diff =~ /^(.*)e(\d*)$/;
$diff = $1*10**(-$2) if $diff =~ /^(.*)em(\d*)$/;
$weak_form =1 if $CASE=~/_wf/;
$weak_form =0 if $CASE=~/_nwf/;
$diff = 0.01 unless $diff;
$weak_form = 1 unless defined $weak_form;
:>//

# CASE = <:=$CASE:>

#===========================================================
global_options
ndim 2

chunk_size 10
save_file "save.state.tmp"
nsave 20

rtol 1e-2
maxits 100

save_file_pattern "burgers.rot%d.tmp"
nsaverot 1
nrec  100
nfile 2

nstep 20
#nstep <:=$Nper*$N_dt_per:>
nnwt 2
tol_newton 0
preco_type "lu"

local_time_step 0
consistent_supg_matrix 1
auto_time_step 0

Dt 0.5
alpha 1.0
diffusivity <:=$diff:>
flux_law_coefficient 1.
u0   1. 0.
#tau_fac 0.
weak_form <:=$weak_form:>

#solve_system 0
#print_linear_system_and_stop
initial_state "burgers.ini.tmp"
__END_HASH__

#===========================================================
# ndim nu ndof
nodes   2  2  1
__INCLUDE__ burgers.nod.tmp
__END_NODES__

#===========================================================
elemset newadvdif_burgers 4
#Datos del elemento
geometry cartesian2d
npg 4
__END_HASH__
__INCLUDE__ burgers.con.tmp
__END_ELEMSET__

#===========================================================
elemset newbcconv_burgers 2
npg 2
geometry cartesian1d
__END_HASH__
2 1 
<:=2*$N+1:> <:=2*$N+2:>
__END_ELEMSET__

end_elemsets

#===========================================================
fixa
1 1 1.
2 1 1.
<:=2*$N+1:> 1 -1.
<:=2*$N+2:> 1 -1.
__END_FIXA__

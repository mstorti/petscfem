//
// time: Tue Sep 23 16:32:12 2008
//
// version: 3.2.0 (format), 4.4.4 (DX)
//
//
// MODULE main
//
// comment: A general purpose visual program for gridded, two-dimensional data has been used. 
// comment: 
// comment: The 2-dimensional surface is colored using a data-driven colormap editor (choose Open All  Colormap Editors from the Windows menu of the Image window).
// comment: 
// comment: If the data are scalar, then the colored surface is deformed using RubberSheet. If the data are position-dependent, contour lines are added.
// comment: 
// comment: If the data are vector, then glyphs (arrows) are drawn at sampled points on the colored surface.
// comment: 
// comment: If you would like to modify or use this visual program in the future, choose Open Visual Program Editor from the Windows menu, and then Save As from the File menu of the VPE.
// page assignment: image	order=5, windowed=0, showing=0
// page assignment: import	order=2, windowed=0, showing=1
// page assignment: proc_u	order=3, windowed=0, showing=0
// page assignment: scalar	order=4, windowed=0, showing=0
// workspace: width = 567, height = 563
// layout: snap = 0, width = 50, height = 20, align = NN
//
macro main(
) -> (
) {
    // 
    // node Toggle[1]: x = 162, y = 553, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_1"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 2
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 2
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 1
    // output[1]: visible = 1, type = 29, value = 2
    // page group: scalar
    // toggle : 1
    //
    // 
    // node Selector[1]: x = 128, y = 118, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_1"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "altura hidr" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 2 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "none" "abs(u)" "altura hidr" "vorticity" "abs_vort" "log_abs_vort" "Froude" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 0 1 2 3 4 5 6 }
    // output[1]: visible = 1, type = 29, value = 2 
    // output[2]: visible = 1, type = 32, value = "altura hidr" 
    // page group: scalar
    //
    // 
    // node Sequencer[1]: x = 222, y = 37, inputs = 7, label = Sequencer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Sequencer_1"
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 0
    // input[5]: defaulting = 0, visible = 1, type = 1, value = 2000
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 16777217, value = { 0 2000 1 0 500 1 }
    // page group: import
    // vcr[1]: min = 0, max = 2000, beg = 0, end = 500, cur = 243, inc = 1, loop = off, step = off, pal = off
    // window: position = (0.0367,0.0550), size = 0.2734x0.1037, screen = 0
    //
    main_Sequencer_1_in_3 = @frame;
main_Sequencer_1_out_1[cache: 2] = 
    Sequencer(
    main_Sequencer_1_in_1,
    main_Sequencer_1_in_2,
    main_Sequencer_1_in_3,
    main_Sequencer_1_in_4,
    main_Sequencer_1_in_5,
    main_Sequencer_1_in_6,
    main_Sequencer_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Format[1]: x = 229, y = 129, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "/home/rodrigop/PETSC/petscfem/test/sw2d/dx/plano_%d.dx"
    // page group: import
    //
main_Format_1_out_1 = 
    Format(
    main_Format_1_in_1,
    main_Sequencer_1_out_1,
    main_Format_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Import[1]: x = 249, y = 210, inputs = 6, label = Import
    // input[1]: defaulting = 1, visible = 1, type = 32, value = "/usr/lpp/dx/samples/data/southeastern_topo.dx"
    // page group: import
    //
main_Import_1_out_1 = 
    Import(
    main_Format_1_out_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Select[1]: x = 121, y = 289, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "sw2d_state"
    // page group: import
    //
main_Select_1_out_1 = 
    Select(
    main_Import_1_out_1,
    main_Select_1_in_2,
    main_Select_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Compute[1]: x = 24, y = 388, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0,$0.1]"
    // page group: import
    // expression: value = [altura.0,altura.1]
    // name[2]: value = altura
    //
main_Compute_1_out_1 = 
    Compute(
    main_Compute_1_in_1,
    main_Select_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[55]: x = 45, y = 475, inputs = 1, label = u
    // page group: import
    //
u = main_Compute_1_out_1;
    // 
    // node Receiver[38]: x = 38, y = 22, inputs = 1, label = u
    // page group: scalar
    //
main_Receiver_38_out_1[cache: 0] = u;
    // 
    // node Compute[29]: x = 26, y = 119, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "mag($0)"
    // page group: scalar
    // expression: value = mag(u)
    // name[2]: value = u
    //
main_Compute_29_out_1 = 
    Compute(
    main_Compute_29_in_1,
    main_Receiver_38_out_1
    ) [instance: 29, cache: 1];
    // 
    // node Compute[2]: x = 106, y = 387, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.2"
    // page group: import
    // expression: value = altura.2
    // name[2]: value = altura
    //
main_Compute_2_out_1 = 
    Compute(
    main_Compute_2_in_1,
    main_Select_1_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[56]: x = 126, y = 475, inputs = 1, label = h
    // page group: import
    //
h = main_Compute_2_out_1;
    // 
    // node Receiver[37]: x = 74, y = 21, inputs = 1, label = h
    // page group: scalar
    //
main_Receiver_37_out_1[cache: 0] = h;
    // 
    // node Receiver[69]: x = 156, y = 16, inputs = 1, label = u
    // page group: proc_u
    //
main_Receiver_69_out_1[cache: 0] = u;
    // 
    // node Compute[36]: x = 270, y = 74, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.x"
    // page group: proc_u
    // expression: value = u.x
    // name[2]: value = u
    //
main_Compute_36_out_1 = 
    Compute(
    main_Compute_36_in_1,
    main_Receiver_69_out_1
    ) [instance: 36, cache: 1];
    // 
    // node Gradient[1]: x = 409, y = 176, inputs = 2, label = Gradient
    // page group: proc_u
    //
main_Gradient_1_out_1 = 
    Gradient(
    main_Compute_36_out_1,
    main_Gradient_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Compute[7]: x = 397, y = 76, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.y"
    // page group: proc_u
    // expression: value = u.y
    // name[2]: value = u
    //
main_Compute_7_out_1 = 
    Compute(
    main_Compute_7_in_1,
    main_Receiver_69_out_1
    ) [instance: 7, cache: 1];
    // 
    // node Gradient[2]: x = 495, y = 179, inputs = 2, label = Gradient
    // page group: proc_u
    //
main_Gradient_2_out_1 = 
    Gradient(
    main_Compute_7_out_1,
    main_Gradient_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Compute[37]: x = 366, y = 271, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.y-$1.x"
    // page group: proc_u
    // expression: value = gu.y-gv.x
    // name[2]: value = gu
    // name[3]: value = gv
    //
main_Compute_37_out_1 = 
    Compute(
    main_Compute_37_in_1,
    main_Gradient_1_out_1,
    main_Gradient_2_out_1
    ) [instance: 37, cache: 1];
    // 
    // node Transmitter[9]: x = 333, y = 372, inputs = 1, label = w
    // page group: proc_u
    //
w = main_Compute_37_out_1;
    // 
    // node Receiver[39]: x = 109, y = 29, inputs = 1, label = w
    // page group: scalar
    //
main_Receiver_39_out_1[cache: 0] = w;
    // 
    // node Compute[35]: x = 453, y = 372, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "abs($0)"
    // page group: proc_u
    // expression: value = abs(w)
    // name[2]: value = w
    //
main_Compute_35_out_1 = 
    Compute(
    main_Compute_35_in_1,
    main_Compute_37_out_1
    ) [instance: 35, cache: 1];
    // 
    // node Transmitter[34]: x = 461, y = 453, inputs = 1, label = abs_w
    // page group: proc_u
    //
abs_w = main_Compute_35_out_1;
    // 
    // node Receiver[44]: x = 144, y = 27, inputs = 1, label = abs_w
    // page group: scalar
    //
main_Receiver_44_out_1[cache: 0] = abs_w;
    // 
    // node Compute[10]: x = 377, y = 370, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "log10(max(abs($0),0.01))"
    // page group: proc_u
    // expression: value = log10(max(abs(w),0.01))
    // name[2]: value = w
    //
main_Compute_10_out_1 = 
    Compute(
    main_Compute_10_in_1,
    main_Compute_37_out_1
    ) [instance: 10, cache: 1];
    // 
    // node Transmitter[10]: x = 339, y = 452, inputs = 1, label = log_abs_w
    // page group: proc_u
    //
log_abs_w = main_Compute_10_out_1;
    // 
    // node Receiver[40]: x = 210, y = 26, inputs = 1, label = log_abs_w
    // page group: scalar
    //
main_Receiver_40_out_1[cache: 0] = log_abs_w;
    // 
    // node Compute[58]: x = 520, y = 162, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "9.81"
    // page group: scalar
    // expression: value = 9.81
    // name[2]: value = gravity
    //
main_Compute_58_out_1 = 
    Compute(
    main_Compute_58_in_1,
    main_Compute_58_in_2
    ) [instance: 58, cache: 1];
    // 
    // node Compute[60]: x = 323, y = 59, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "mag($0)/sqrt($2*$1)"
    // page group: scalar
    // expression: value = mag(u)/sqrt(c*b)
    // name[2]: value = u
    // name[3]: value = b
    // name[4]: value = c
    //
main_Compute_60_out_1 = 
    Compute(
    main_Compute_60_in_1,
    main_Receiver_38_out_1,
    main_Receiver_37_out_1,
    main_Compute_58_out_1
    ) [instance: 60, cache: 1];
    // 
    // node Switch[5]: x = 0, y = 274, inputs = 13, label = Switch
    // input[1]: defaulting = 1, visible = 1, type = 1, value = 1
    // page group: scalar
    //
main_Switch_5_out_1 = 
    Switch(
    main_Selector_1_out_1,
    main_Compute_29_out_1,
    main_Receiver_37_out_1,
    main_Receiver_39_out_1,
    main_Receiver_44_out_1,
    main_Receiver_40_out_1,
    main_Compute_60_out_1,
    main_Switch_5_in_8,
    main_Switch_5_in_9,
    main_Switch_5_in_10,
    main_Switch_5_in_11,
    main_Switch_5_in_12,
    main_Switch_5_in_13
    ) [instance: 5, cache: 1];
    // 
    // node Scalar[3]: x = 442, y = 34, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_3"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.4
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.4
    // page group: scalar
    //
    // 
    // node Scalar[4]: x = 519, y = 37, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_4"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 2.1
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 2.1
    // page group: scalar
    //
    // 
    // node Compute[44]: x = 362, y = 437, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "max(min($0,$2),$1)"
    // page group: scalar
    // expression: value = max(min(w,wmax),wmin)
    // name[2]: value = w
    // name[3]: value = wmin
    // name[4]: value = wmax
    //
main_Compute_44_out_1 = 
    Compute(
    main_Compute_44_in_1,
    main_Switch_5_out_1,
    main_Scalar_3_out_1,
    main_Scalar_4_out_1
    ) [instance: 44, cache: 1];
    // 
    // node Colormap[5]: x = 45, y = 554, inputs = 19, label = Colormap
    // input[1]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.666667] [1.0 0.0] }
    // input[2]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[4]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[5]: defaulting = 0, visible = 0, type = 32, value = "Colormap_5"
    // input[7]: defaulting = 1, visible = 1, type = 5, value = 1.0
    // input[8]: defaulting = 1, visible = 1, type = 5, value = 1.4683203
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 20
    // input[10]: visible = 0
    // input[11]: visible = 0
    // input[12]: defaulting = 0, visible = 0, type = 16777221, value = { 1.0 1.4683203 }
    // input[17]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[18]: defaulting = 0, visible = 0, type = 5, value = 1.4683203
    // output[2]: visible = 0
    // page group: scalar
    // window: position = (0.2586,0.2325), size = 0.6875x0.5000, screen = 0
    //
main_Colormap_5_out_1[cache: 2],
main_Colormap_5_out_2[cache: 2] = 
    Colormap(
    main_Colormap_5_in_1,
    main_Colormap_5_in_2,
    main_Colormap_5_in_3,
    main_Colormap_5_in_4,
    main_Colormap_5_in_5,
    main_Compute_44_out_1,
    main_Colormap_5_in_7,
    main_Colormap_5_in_8,
    main_Colormap_5_in_9,
    main_Colormap_5_in_10,
    main_Colormap_5_in_11,
    main_Colormap_5_in_12,
    main_Colormap_5_in_13,
    main_Colormap_5_in_14,
    main_Colormap_5_in_15,
    main_Colormap_5_in_16,
    main_Colormap_5_in_17,
    main_Colormap_5_in_18,
    main_Colormap_5_in_19
    ) [instance: 5, cache: 1];
    // 
    // node Colormap[2]: x = 265, y = 551, inputs = 19, label = Colormap
    // input[1]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.64893617] [0.48663102 0.32978723] [1.0 0.0] }
    // input[2]: defaulting = 0, visible = 0, type = 16777224, value = { [0.27272727 1.0] }
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[4]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[5]: defaulting = 0, visible = 0, type = 32, value = "Colormap_2"
    // input[7]: defaulting = 1, visible = 1, type = 5, value = 0.40000001
    // input[8]: defaulting = 1, visible = 1, type = 5, value = 2.0999999
    // input[9]: defaulting = 0, visible = 0, type = 1, value = 20
    // input[10]: visible = 0
    // input[11]: visible = 0
    // input[12]: defaulting = 0, visible = 0, type = 16777221, value = { 0.40000001 2.0999999 }
    // input[13]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[14]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[15]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[16]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[17]: defaulting = 0, visible = 0, type = 5, value = 0.40000001
    // input[18]: defaulting = 0, visible = 0, type = 5, value = 2.0999999
    // output[2]: visible = 0
    // page group: scalar
    // window: position = (0.2031,0.0350), size = 0.6297x0.3900, screen = 0
    //
main_Colormap_2_out_1[cache: 2],
main_Colormap_2_out_2[cache: 2] = 
    Colormap(
    main_Colormap_2_in_1,
    main_Colormap_2_in_2,
    main_Colormap_2_in_3,
    main_Colormap_2_in_4,
    main_Colormap_2_in_5,
    main_Compute_44_out_1,
    main_Scalar_3_out_1,
    main_Scalar_4_out_1,
    main_Colormap_2_in_9,
    main_Colormap_2_in_10,
    main_Colormap_2_in_11,
    main_Colormap_2_in_12,
    main_Colormap_2_in_13,
    main_Colormap_2_in_14,
    main_Colormap_2_in_15,
    main_Colormap_2_in_16,
    main_Colormap_2_in_17,
    main_Colormap_2_in_18,
    main_Colormap_2_in_19
    ) [instance: 2, cache: 1];
    // 
    // node Switch[6]: x = 178, y = 674, inputs = 3, label = Switch
    // page group: scalar
    //
main_Switch_6_out_1 = 
    Switch(
    main_Toggle_1_out_1,
    main_Colormap_5_out_1,
    main_Colormap_2_out_1
    ) [instance: 6, cache: 1];
    // 
    // node ColorBar[2]: x = 330, y = 882, inputs = 16, label = ColorBar
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [0.95 0.5]
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [250 25]
    // input[4]: defaulting = 1, visible = 1, type = 3, value = 1
    // input[15]: defaulting = 0, visible = 1, type = 3, value = 1
    // input[16]: defaulting = 0, visible = 1, type = 1, value = 18
    // page group: scalar
    //
main_ColorBar_2_out_1 = 
    ColorBar(
    main_Switch_6_out_1,
    main_ColorBar_2_in_2,
    main_ColorBar_2_in_3,
    main_ColorBar_2_in_4,
    main_ColorBar_2_in_5,
    main_ColorBar_2_in_6,
    main_ColorBar_2_in_7,
    main_ColorBar_2_in_8,
    main_ColorBar_2_in_9,
    main_ColorBar_2_in_10,
    main_ColorBar_2_in_11,
    main_ColorBar_2_in_12,
    main_ColorBar_2_in_13,
    main_ColorBar_2_in_14,
    main_ColorBar_2_in_15,
    main_ColorBar_2_in_16
    ) [instance: 2, cache: 1];
    // 
    // node Color[1]: x = 283, y = 746, inputs = 5, label = Color
    // input[1]: defaulting = 1, visible = 1, type = 2048, value = NULL
    // input[3]: defaulting = 0, visible = 1, type = 5, value = 1.0
    // page group: scalar
    //
main_Color_1_out_1 = 
    Color(
    main_Compute_44_out_1,
    main_Switch_6_out_1,
    main_Color_1_in_3,
    main_Color_1_in_4,
    main_Color_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Collect[8]: x = 211, y = 911, inputs = 3, label = Collect
    // page group: scalar
    //
main_Collect_8_out_1 = 
    Collect(
    main_Color_1_out_1,
    main_Collect_8_in_2,
    main_Collect_8_in_3
    ) [instance: 8, cache: 1];
    // 
    // node Scalar[5]: x = 15, y = 774, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_5"
    // input[2]: defaulting = 0, visible = 1, type = 67108863, value = NULL
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 1.0 
    // page group: scalar
    //
main_Scalar_5_out_1[cache: 2] = 
    Scalar(
    main_Scalar_5_in_1,
    main_Scalar_5_in_2,
    main_Scalar_5_in_3,
    main_Scalar_5_in_4,
    main_Scalar_5_in_5,
    main_Scalar_5_in_6,
    main_Scalar_5_in_7,
    main_Scalar_5_in_8,
    main_Scalar_5_in_9,
    main_Scalar_5_in_10,
    main_Scalar_5_in_11
    ) [instance: 5, cache: 1];
    // 
    // node RubberSheet[2]: x = 123, y = 1031, inputs = 4, label = RubberSheet
    // input[2]: defaulting = 1, visible = 1, type = 5, value = 0.5
    // page group: scalar
    //
main_RubberSheet_2_out_1 = 
    RubberSheet(
    main_Collect_8_out_1,
    main_Scalar_5_out_1,
    main_RubberSheet_2_in_3,
    main_RubberSheet_2_in_4
    ) [instance: 2, cache: 1];
    // 
    // node Toggle[3]: x = 413, y = 685, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_3"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: scalar
    // toggle : 0
    //
    // 
    // node Scalar[7]: x = 241, y = 269, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_7"
    // input[2]: defaulting = 0, visible = 1, type = 67108863, value = NULL
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.25
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.25
    // page group: proc_u
    //
main_Scalar_7_out_1[cache: 2] = 
    Scalar(
    main_Scalar_7_in_1,
    main_Scalar_7_in_2,
    main_Scalar_7_in_3,
    main_Scalar_7_in_4,
    main_Scalar_7_in_5,
    main_Scalar_7_in_6,
    main_Scalar_7_in_7,
    main_Scalar_7_in_8,
    main_Scalar_7_in_9,
    main_Scalar_7_in_10,
    main_Scalar_7_in_11
    ) [instance: 7, cache: 1];
    // 
    // node Glyph[1]: x = 80, y = 329, inputs = 7, label = Glyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "arrow2D"
    // input[3]: defaulting = 0, visible = 1, type = 5, value = 1.0
    // input[4]: defaulting = 1, visible = 1, type = 5, value = .010
    // input[5]: defaulting = 1, visible = 1, type = 5, value = NULL
    // page group: proc_u
    //
main_Glyph_1_out_1 = 
    Glyph(
    main_Receiver_69_out_1,
    main_Glyph_1_in_2,
    main_Glyph_1_in_3,
    main_Scalar_7_out_1,
    main_Glyph_1_in_5,
    main_Glyph_1_in_6,
    main_Glyph_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Color[7]: x = 101, y = 420, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "white"
    // page group: proc_u
    //
main_Color_7_out_1 = 
    Color(
    main_Glyph_1_out_1,
    main_Color_7_in_2,
    main_Color_7_in_3,
    main_Color_7_in_4,
    main_Color_7_in_5
    ) [instance: 7, cache: 1];
    // 
    // node Transmitter[40]: x = 118, y = 498, inputs = 1, label = vectors
    // page group: proc_u
    //
vectors = main_Color_7_out_1;
    // 
    // node Receiver[70]: x = 545, y = 673, inputs = 1, label = vectors
    // page group: scalar
    //
main_Receiver_70_out_1[cache: 0] = vectors;
    // 
    // node Switch[8]: x = 493, y = 791, inputs = 2, label = Switch
    // page group: scalar
    //
main_Switch_8_out_1 = 
    Switch(
    main_Toggle_3_out_1,
    main_Receiver_70_out_1
    ) [instance: 8, cache: 1];
    // 
    // node Collect[4]: x = 242, y = 1084, inputs = 4, label = Collect
    // page group: scalar
    //
main_Collect_4_out_1 = 
    Collect(
    main_Collect_4_in_1,
    main_ColorBar_2_out_1,
    main_RubberSheet_2_out_1,
    main_Switch_8_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Transmitter[5]: x = 205, y = 1181, inputs = 1, label = colored_scalar
    // page group: scalar
    //
colored_scalar = main_Collect_4_out_1;
    // 
    // node Receiver[6]: x = 14, y = 328, inputs = 1, label = colored_scalar
    // page group: image
    //
main_Receiver_6_out_1[cache: 0] = colored_scalar;
    // 
    // node Camera[1]: x = 325, y = 497, inputs = 9, label = Camera
    // page group: image
    //
main_Camera_1_out_1 = 
    Camera(
    main_Camera_1_in_1,
    main_Camera_1_in_2,
    main_Camera_1_in_3,
    main_Camera_1_in_4,
    main_Camera_1_in_5,
    main_Camera_1_in_6,
    main_Camera_1_in_7,
    main_Camera_1_in_8,
    main_Camera_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node AutoAxes[1]: x = 458, y = 580, inputs = 19, label = AutoAxes
    // input[2]: defaulting = 1, visible = 1, type = 64, value = NULL
    // input[3]: defaulting = 0, visible = 1, type = 16777248, value = {"{x}","{y}","{altura}"}
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 40
    // input[5]: defaulting = 0, visible = 0, type = 16777224, value = {[1 1 1.4],[0 0 0.4]}
    // input[6]: defaulting = 0, visible = 0, type = 3, value = NULL
    // input[7]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[8]: defaulting = 0, visible = 0, type = 8, value = NULL
    // input[9]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[10]: defaulting = 1, visible = 0, type = 16777224, value = NULL
    // input[11]: defaulting = 1, visible = 1, type = 16777248, value = {"all"}
    // input[12]: defaulting = 0, visible = 0, type = 5, value = 0.25
    // input[13]: defaulting = 0, visible = 0, type = 32, value = "script_s"
    // input[14]: defaulting = 0, visible = 0, type = 16777221, value = { 0.0 0.25 0.5 0.75 1.0 }
    // input[15]: defaulting = 0, visible = 0, type = 16777221, value = { 0.0 0.25 0.5 0.75 1.0 }
    // input[16]: defaulting = 0, visible = 0, type = 16777221, value = { 0.4 0.5 0.75 1.0 1.25 1.4 }
    // input[17]: defaulting = 0, visible = 0, type = 16777248, value = {"0.0" ,"0.25", "0.5", "0.75", "1.0"}
    // input[18]: defaulting = 0, visible = 0, type = 16777248, value = {"0.0", "0.25", "0.5" ,"0.75" ,"1.0"}
    // input[19]: defaulting = 0, visible = 0, type = 16777248, value = {"0.4","0.5","0.75","1.0","1.25","1.5"}
    // page group: image
    //
main_AutoAxes_1_out_1 = 
    AutoAxes(
    main_Receiver_6_out_1,
    main_Camera_1_out_1,
    main_AutoAxes_1_in_3,
    main_AutoAxes_1_in_4,
    main_AutoAxes_1_in_5,
    main_AutoAxes_1_in_6,
    main_AutoAxes_1_in_7,
    main_AutoAxes_1_in_8,
    main_AutoAxes_1_in_9,
    main_AutoAxes_1_in_10,
    main_AutoAxes_1_in_11,
    main_AutoAxes_1_in_12,
    main_AutoAxes_1_in_13,
    main_AutoAxes_1_in_14,
    main_AutoAxes_1_in_15,
    main_AutoAxes_1_in_16,
    main_AutoAxes_1_in_17,
    main_AutoAxes_1_in_18,
    main_AutoAxes_1_in_19
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[61]: x = 333, y = 128, inputs = 1, label = dx_step
    // page group: import
    //
dx_step = main_Sequencer_1_out_1;
    // 
    // node Receiver[36]: x = 21, y = 16, inputs = 1, label = dx_step
    // page group: image
    //
main_Receiver_36_out_1[cache: 0] = dx_step;
    // 
    // node Scalar[6]: x = 358, y = 46, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_6"
    // input[2]: defaulting = 0, visible = 1, type = 67108863, value = {0.005}
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.005 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0049999999
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 0.0049999999
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 1
    // output[1]: visible = 1, type = 5, value = 0.005 
    // page group: image
    //
main_Scalar_6_out_1[cache: 2] = 
    Scalar(
    main_Scalar_6_in_1,
    main_Scalar_6_in_2,
    main_Scalar_6_in_3,
    main_Scalar_6_in_4,
    main_Scalar_6_in_5,
    main_Scalar_6_in_6,
    main_Scalar_6_in_7,
    main_Scalar_6_in_8,
    main_Scalar_6_in_9,
    main_Scalar_6_in_10,
    main_Scalar_6_in_11
    ) [instance: 6, cache: 1];
    // 
    // node Compute[55]: x = 218, y = 136, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0*$1"
    // page group: image
    // expression: value = step*dt
    // name[2]: value = step
    // name[3]: value = dt
    //
main_Compute_55_out_1 = 
    Compute(
    main_Compute_55_in_1,
    main_Receiver_36_out_1,
    main_Scalar_6_out_1
    ) [instance: 55, cache: 1];
    // 
    // node Format[5]: x = 182, y = 219, inputs = 2, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "real time %f [secs]"
    // input[2]: defaulting = 1, visible = 1, type = 16777245, value = NULL
    // page group: image
    //
main_Format_5_out_1 = 
    Format(
    main_Format_5_in_1,
    main_Compute_55_out_1
    ) [instance: 5, cache: 1];
    // 
    // node Caption[2]: x = 284, y = 348, inputs = 9, label = Caption
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [.5 .98]
    // input[6]: defaulting = 0, visible = 0, type = 1, value = 25
    // input[7]: defaulting = 0, visible = 0, type = 32, value = "roman_tser"
    // page group: image
    //
main_Caption_2_out_1 = 
    Caption(
    main_Format_5_out_1,
    main_Caption_2_in_2,
    main_Caption_2_in_3,
    main_Caption_2_in_4,
    main_Caption_2_in_5,
    main_Caption_2_in_6,
    main_Caption_2_in_7,
    main_Caption_2_in_8,
    main_Caption_2_in_9
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[21]: x = 58, y = 436, inputs = 1, label = caption
    // page group: scalar
    //
caption = main_Selector_1_out_2;
    // 
    // node Receiver[30]: x = 137, y = 24, inputs = 1, label = caption
    // page group: image
    //
main_Receiver_30_out_1[cache: 0] = caption;
    // 
    // node Format[4]: x = 18, y = 140, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "Step = %d -- color=%s"
    // page group: image
    //
main_Format_4_out_1 = 
    Format(
    main_Format_4_in_1,
    main_Receiver_36_out_1,
    main_Receiver_30_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Caption[3]: x = 53, y = 251, inputs = 9, label = Caption
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [.5 .08]
    // input[4]: defaulting = 0, visible = 0, type = 8, value = [0.5 0.1]
    // input[6]: defaulting = 0, visible = 0, type = 1, value = 25
    // input[7]: defaulting = 0, visible = 0, type = 32, value = "roman_tser"
    // input[8]: defaulting = 0, visible = 0, type = 8, value = [1 0]
    // page group: image
    //
main_Caption_3_out_1 = 
    Caption(
    main_Format_4_out_1,
    main_Caption_3_in_2,
    main_Caption_3_in_3,
    main_Caption_3_in_4,
    main_Caption_3_in_5,
    main_Caption_3_in_6,
    main_Caption_3_in_7,
    main_Caption_3_in_8,
    main_Caption_3_in_9
    ) [instance: 3, cache: 1];
    // 
    // node Color[5]: x = 169, y = 346, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "white"
    // input[3]: defaulting = 0, visible = 1, type = 5, value = 1.0
    // page group: image
    //
main_Color_5_out_1 = 
    Color(
    main_Caption_3_out_1,
    main_Color_5_in_2,
    main_Color_5_in_3,
    main_Color_5_in_4,
    main_Color_5_in_5
    ) [instance: 5, cache: 1];
    // 
    // node Color[6]: x = 100, y = 427, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "white"
    // page group: image
    //
main_Color_6_out_1 = 
    Color(
    main_Caption_2_out_1,
    main_Color_6_in_2,
    main_Color_6_in_3,
    main_Color_6_in_4,
    main_Color_6_in_5
    ) [instance: 6, cache: 1];
    // 
    // node Toggle[4]: x = 381, y = 231, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_4"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // input[6]: defaulting = 0, visible = 0, type = 32, value = "show mesh?"
    // output[1]: visible = 1, type = 29, value = 0
    // page group: image
    // toggle : 0
    //
main_Toggle_4_out_1[cache: 2] = 
    Toggle(
    main_Toggle_4_in_1,
    main_Toggle_4_in_2,
    main_Toggle_4_in_3,
    main_Toggle_4_in_4,
    main_Toggle_4_in_5,
    main_Toggle_4_in_6
    ) [instance: 4, cache: 1];
    // 
    // node ShowConnections[1]: x = 462, y = 196, inputs = 1, label = ShowConnections
    // page group: image
    //
main_ShowConnections_1_out_1 = 
    ShowConnections(
    main_Receiver_6_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Color[9]: x = 499, y = 270, inputs = 5, label = Color
    // input[1]: defaulting = 1, visible = 1, type = 2048, value = NULL
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "orange"
    // input[3]: defaulting = 0, visible = 1, type = 5, value = 1.0
    // page group: image
    //
main_Color_9_out_1 = 
    Color(
    main_ShowConnections_1_out_1,
    main_Color_9_in_2,
    main_Color_9_in_3,
    main_Color_9_in_4,
    main_Color_9_in_5
    ) [instance: 9, cache: 1];
    // 
    // node Switch[9]: x = 427, y = 352, inputs = 2, label = Switch
    // page group: image
    //
main_Switch_9_out_1 = 
    Switch(
    main_Toggle_4_out_1,
    main_Color_9_out_1
    ) [instance: 9, cache: 1];
    // 
    // node Collect[2]: x = 55, y = 619, inputs = 6, label = Collect
    // page group: image
    //
main_Collect_2_out_1 = 
    Collect(
    main_Receiver_6_out_1,
    main_Color_5_out_1,
    main_Color_6_out_1,
    main_AutoAxes_1_out_1,
    main_Collect_2_in_5,
    main_Switch_9_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Isosurface[2]: x = 187, y = 774, inputs = 6, label = Isosurface
    // input[2]: defaulting = 0, visible = 1, type = 16777221, value = { 0.0 0.5 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 }
    // page group: scalar
    //
main_Isosurface_2_out_1 = 
    Isosurface(
    main_Compute_44_out_1,
    main_Isosurface_2_in_2,
    main_Isosurface_2_in_3,
    main_Isosurface_2_in_4,
    main_Isosurface_2_in_5,
    main_Isosurface_2_in_6
    ) [instance: 2, cache: 1];
    // 
    // node Color[3]: x = 100, y = 908, inputs = 5, label = Color
    // input[1]: defaulting = 1, visible = 1, type = 2048, value = NULL
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "black"
    // input[3]: defaulting = 0, visible = 1, type = 5, value = 1.0
    // page group: scalar
    //
main_Color_3_out_1 = 
    Color(
    main_Isosurface_2_out_1,
    main_Color_3_in_2,
    main_Color_3_in_3,
    main_Color_3_in_4,
    main_Color_3_in_5
    ) [instance: 3, cache: 1];
    // 
    // node Isosurface[3]: x = 90, y = 782, inputs = 6, label = Isosurface
    // input[2]: defaulting = 0, visible = 1, type = 16777221, value = { 0.1 0.2 0.3 0.4 0.6 0.7 0.8 0.9 1.1 1.2 1.3 1.4 1.6 1.7 1.8 1.9 2.1 2.2 2.3 2.4 2.6 2.7 2.8 2.9 3.1 3.2 3.3 3.4 3.6 3.7 3.8 3.9 4.1 4.2 4.3 4.4 }
    // page group: scalar
    //
main_Isosurface_3_out_1 = 
    Isosurface(
    main_Compute_44_out_1,
    main_Isosurface_3_in_2,
    main_Isosurface_3_in_3,
    main_Isosurface_3_in_4,
    main_Isosurface_3_in_5,
    main_Isosurface_3_in_6
    ) [instance: 3, cache: 1];
    // 
    // node Color[8]: x = 0, y = 907, inputs = 5, label = Color
    // input[1]: defaulting = 1, visible = 1, type = 2048, value = NULL
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [0,0.3,0.6]
    // input[3]: defaulting = 0, visible = 1, type = 5, value = 1.0
    // page group: scalar
    //
main_Color_8_out_1 = 
    Color(
    main_Isosurface_3_out_1,
    main_Color_8_in_2,
    main_Color_8_in_3,
    main_Color_8_in_4,
    main_Color_8_in_5
    ) [instance: 8, cache: 1];
    // 
    // node Select[2]: x = 474, y = 286, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "sw2d_state_ini"
    // page group: import
    //
main_Select_2_out_1 = 
    Select(
    main_Import_1_out_1,
    main_Select_2_in_2,
    main_Select_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Compute[5]: x = 395, y = 394, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0,$0.1]"
    // page group: import
    // expression: value = [ini.0,ini.1]
    // name[2]: value = ini
    //
main_Compute_5_out_1 = 
    Compute(
    main_Compute_5_in_1,
    main_Select_2_out_1
    ) [instance: 5, cache: 1];
    // 
    // node Compute[6]: x = 484, y = 384, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.2"
    // page group: import
    // expression: value = ini.2
    // name[2]: value = ini
    //
main_Compute_6_out_1 = 
    Compute(
    main_Compute_6_in_1,
    main_Select_2_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Compute[8]: x = 166, y = 107, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.y"
    // page group: proc_u
    // expression: value = u.y
    // name[2]: value = u
    //
main_Compute_8_out_1 = 
    Compute(
    main_Compute_8_in_1,
    main_Receiver_69_out_1
    ) [instance: 8, cache: 1];
    // 
    // node Compute[57]: x = 75, y = 109, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.x"
    // page group: proc_u
    // expression: value = u.x
    // name[2]: value = u
    //
main_Compute_57_out_1 = 
    Compute(
    main_Compute_57_in_1,
    main_Receiver_69_out_1
    ) [instance: 57, cache: 1];
    // 
    // node Format[2]: x = 247, y = 608, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "/home/rodrigop/PETSC/petscfem/test/sw2d/YUV/plano.%d"
    // input[3]: defaulting = 0, visible = 1, type = 16777245, value = {1}
    // page group: image
    //
main_Format_2_out_1 = 
    Format(
    main_Format_2_in_1,
    main_Receiver_36_out_1,
    main_Format_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Image[4]: x = 198, y = 693, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_4"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [0.359899 0.396985 1.17366]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [-4.80476 -16.6142 6.97972]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 2.97877
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 1210
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.604
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0.0627818 0.305252 0.9502]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 9.1066
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[20]: defaulting = 0, visible = 0, type = 64, value = NULL
    // input[21]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[22]: defaulting = 0, visible = 0, type = 32, value = "black"
    // input[25]: defaulting = 1, visible = 1, type = 32, value = "/home/rodrigop/PETSC/petscfem/test/sw2d/YUV/plano.242"
    // input[26]: defaulting = 0, visible = 0, type = 32, value = "tiff"
    // input[27]: defaulting = 0, visible = 0, type = 1, value = 1024
    // input[28]: defaulting = 0, visible = 0, type = 5, value = 0.75
    // input[29]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[30]: defaulting = 0, visible = 0, type = 16777248, value = {"X", "Y", "Z"}
    // input[31]: defaulting = 1, visible = 0, type = 1, value = 15
    // input[33]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[34]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[36]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[37]: defaulting = 0, visible = 0, type = 16777248, value = {"clear", "gray", "white", "white"}
    // input[38]: defaulting = 0, visible = 0, type = 16777248, value = {"background", "grid", "ticks", "labels"}
    // input[39]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "none"
    // output[1]: visible = 0
    // output[2]: visible = 0
    // output[3]: visible = 0
    // page group: image
    // depth: value = 16
    // window: position = (   inf,   nan), size =    infx   inf
    // internal caching: 1
    //
main_Image_4_out_1,
main_Image_4_out_2,
main_Image_4_out_3 = 
    Image(
    main_Image_4_in_1,
    main_Collect_2_out_1,
    main_Image_4_in_3,
    main_Image_4_in_4,
    main_Image_4_in_5,
    main_Image_4_in_6,
    main_Image_4_in_7,
    main_Image_4_in_8,
    main_Image_4_in_9,
    main_Image_4_in_10,
    main_Image_4_in_11,
    main_Image_4_in_12,
    main_Image_4_in_13,
    main_Image_4_in_14,
    main_Image_4_in_15,
    main_Image_4_in_16,
    main_Image_4_in_17,
    main_Image_4_in_18,
    main_Image_4_in_19,
    main_Image_4_in_20,
    main_Image_4_in_21,
    main_Image_4_in_22,
    main_Image_4_in_23,
    main_Image_4_in_24,
    main_Format_2_out_1,
    main_Image_4_in_26,
    main_Image_4_in_27,
    main_Image_4_in_28,
    main_Image_4_in_29,
    main_Image_4_in_30,
    main_Image_4_in_31,
    main_Image_4_in_32,
    main_Image_4_in_33,
    main_Image_4_in_34,
    main_Image_4_in_35,
    main_Image_4_in_36,
    main_Image_4_in_37,
    main_Image_4_in_38,
    main_Image_4_in_39,
    main_Image_4_in_40,
    main_Image_4_in_41,
    main_Image_4_in_42,
    main_Image_4_in_43,
    main_Image_4_in_44,
    main_Image_4_in_45,
    main_Image_4_in_46,
    main_Image_4_in_47,
    main_Image_4_in_48,
    main_Image_4_in_49
    ) [instance: 4, cache: 1];
    // 
    // node Receiver[55]: x = 237, y = 16, inputs = 1, label = u_ref
    // page group: image
    //
main_Receiver_55_out_1[cache: 0] = u_ref;
    // 
    // node Transmitter[11]: x = 173, y = 216, inputs = 1, label = uy
    // page group: proc_u
    //
uy = main_Compute_8_out_1;
    // 
    // node Transmitter[29]: x = 140, y = 436, inputs = 1, label = abs_u
    // page group: scalar
    //
abs_u = main_Compute_29_out_1;
    // 
    // node Transmitter[59]: x = 409, y = 501, inputs = 1, label = u_ini
    // page group: import
    //
u_ini = main_Compute_5_out_1;
    // 
    // node Transmitter[60]: x = 529, y = 494, inputs = 1, label = h_ini
    // page group: import
    //
h_ini = main_Compute_6_out_1;
    // 
    // node Transmitter[62]: x = 110, y = 216, inputs = 1, label = ux
    // page group: proc_u
    //
ux = main_Compute_57_out_1;
    // 
    // node Transmitter[64]: x = 528, y = 265, inputs = 1, label = gravity
    // page group: scalar
    //
gravity = main_Compute_58_out_1;
    // 
    // node Transmitter[65]: x = 302, y = 129, inputs = 1, label = froude
    // page group: scalar
    //
froude = main_Compute_60_out_1;
// network: end of macro body
CacheScene(main_Image_4_in_1, main_Image_4_out_1, main_Image_4_out_2);
}
main_Toggle_1_in_1 = "Toggle_1";
main_Toggle_1_in_2 = 2;
main_Toggle_1_in_3 = 1;
main_Toggle_1_in_4 = NULL;
main_Toggle_1_in_5 = NULL;
main_Toggle_1_in_6 = NULL;
main_Toggle_1_out_1 = 2;
main_Selector_1_in_1 = "Selector_1";
main_Selector_1_in_2 = "altura hidr" ;
main_Selector_1_in_3 = 2 ;
main_Selector_1_in_4 = NULL;
main_Selector_1_in_5 = NULL;
main_Selector_1_in_6 = NULL;
main_Selector_1_in_7 = NULL;
main_Selector_1_out_1 = 2 ;
main_Selector_1_out_2 = "altura hidr" ;
main_Sequencer_1_in_1 = "Sequencer_1";
main_Sequencer_1_in_2 = NULL;
main_Sequencer_1_in_3 = NULL;
main_Sequencer_1_in_4 = 0;
main_Sequencer_1_in_5 = 2000;
main_Sequencer_1_in_6 = NULL;
main_Sequencer_1_in_7 = { 0 2000 1 0 500 1 };
main_Sequencer_1_out_1 = NULL;

@startframe = 0;
@nextframe  = @startframe;
@endframe   = 500;
@deltaframe = 1;
main_Format_1_in_1 = "/home/rodrigop/PETSC/petscfem/test/sw2d/dx/plano_%d.dx";
main_Format_1_in_3 = NULL;
main_Format_1_out_1 = NULL;
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = NULL;
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Select_1_in_2 = "sw2d_state";
main_Select_1_in_3 = NULL;
main_Select_1_out_1 = NULL;
main_Compute_1_in_1 = "[$0.0,$0.1]";
main_Compute_1_out_1 = NULL;
main_Transmitter_55_out_1 = NULL;
main_Receiver_38_out_1 = NULL;
main_Compute_29_in_1 = "mag($0)";
main_Compute_29_out_1 = NULL;
main_Compute_2_in_1 = "$0.2";
main_Compute_2_out_1 = NULL;
main_Transmitter_56_out_1 = NULL;
main_Receiver_37_out_1 = NULL;
main_Receiver_69_out_1 = NULL;
main_Compute_36_in_1 = "$0.x";
main_Compute_36_out_1 = NULL;
main_Gradient_1_in_2 = NULL;
main_Gradient_1_out_1 = NULL;
main_Compute_7_in_1 = "$0.y";
main_Compute_7_out_1 = NULL;
main_Gradient_2_in_2 = NULL;
main_Gradient_2_out_1 = NULL;
main_Compute_37_in_1 = "$0.y-$1.x";
main_Compute_37_out_1 = NULL;
main_Transmitter_9_out_1 = NULL;
main_Receiver_39_out_1 = NULL;
main_Compute_35_in_1 = "abs($0)";
main_Compute_35_out_1 = NULL;
main_Transmitter_34_out_1 = NULL;
main_Receiver_44_out_1 = NULL;
main_Compute_10_in_1 = "log10(max(abs($0),0.01))";
main_Compute_10_out_1 = NULL;
main_Transmitter_10_out_1 = NULL;
main_Receiver_40_out_1 = NULL;
main_Compute_58_in_1 = "9.81";
main_Compute_58_in_2 = NULL;
main_Compute_58_out_1 = NULL;
main_Compute_60_in_1 = "mag($0)/sqrt($2*$1)";
main_Compute_60_out_1 = NULL;
main_Switch_5_in_8 = NULL;
main_Switch_5_in_9 = NULL;
main_Switch_5_in_10 = NULL;
main_Switch_5_in_11 = NULL;
main_Switch_5_in_12 = NULL;
main_Switch_5_in_13 = NULL;
main_Switch_5_out_1 = NULL;
main_Scalar_3_in_1 = "Scalar_3";
main_Scalar_3_in_2 = NULL;
main_Scalar_3_in_3 = 0.4;
main_Scalar_3_in_4 = NULL;
main_Scalar_3_in_5 = NULL;
main_Scalar_3_in_6 = NULL;
main_Scalar_3_in_7 = NULL;
main_Scalar_3_in_8 = NULL;
main_Scalar_3_in_9 = NULL;
main_Scalar_3_in_10 = NULL;
main_Scalar_3_in_11 = NULL;
main_Scalar_3_out_1 = 0.4;
main_Scalar_4_in_1 = "Scalar_4";
main_Scalar_4_in_2 = NULL;
main_Scalar_4_in_3 = 2.1;
main_Scalar_4_in_4 = NULL;
main_Scalar_4_in_5 = NULL;
main_Scalar_4_in_6 = NULL;
main_Scalar_4_in_7 = NULL;
main_Scalar_4_in_8 = NULL;
main_Scalar_4_in_9 = NULL;
main_Scalar_4_in_10 = NULL;
main_Scalar_4_in_11 = NULL;
main_Scalar_4_out_1 = 2.1;
main_Compute_44_in_1 = "max(min($0,$2),$1)";
main_Compute_44_out_1 = NULL;
main_Colormap_5_in_1 = { [0.0 0.666667] [1.0 0.0] };
main_Colormap_5_in_2 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_5_in_3 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_5_in_4 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_5_in_5 = "Colormap_5";
main_Colormap_5_in_7 = NULL;
main_Colormap_5_in_8 = NULL;
main_Colormap_5_in_9 = NULL;
main_Colormap_5_in_10 = NULL;
main_Colormap_5_in_11 = NULL;
main_Colormap_5_in_12 = { 1.0 1.4683203 };
main_Colormap_5_in_13 = NULL;
main_Colormap_5_in_14 = NULL;
main_Colormap_5_in_15 = NULL;
main_Colormap_5_in_16 = NULL;
main_Colormap_5_in_17 = 1.0;
main_Colormap_5_in_18 = 1.4683203;
main_Colormap_5_in_19 = NULL;
main_Colormap_5_out_1 = NULL;
main_Colormap_2_in_1 = { [0.0 0.64893617] [0.48663102 0.32978723] [1.0 0.0] };
main_Colormap_2_in_2 = { [0.27272727 1.0] };
main_Colormap_2_in_3 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_2_in_4 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_2_in_5 = "Colormap_2";
main_Colormap_2_in_9 = 20;
main_Colormap_2_in_10 = NULL;
main_Colormap_2_in_11 = NULL;
main_Colormap_2_in_12 = { 0.40000001 2.0999999 };
main_Colormap_2_in_13 = NULL;
main_Colormap_2_in_14 = NULL;
main_Colormap_2_in_15 = NULL;
main_Colormap_2_in_16 = NULL;
main_Colormap_2_in_17 = 0.40000001;
main_Colormap_2_in_18 = 2.0999999;
main_Colormap_2_in_19 = NULL;
main_Colormap_2_out_1 = NULL;
main_Switch_6_out_1 = NULL;
main_ColorBar_2_in_2 = [0.95 0.5];
main_ColorBar_2_in_3 = [250 25];
main_ColorBar_2_in_4 = NULL;
main_ColorBar_2_in_5 = NULL;
main_ColorBar_2_in_6 = NULL;
main_ColorBar_2_in_7 = NULL;
main_ColorBar_2_in_8 = NULL;
main_ColorBar_2_in_9 = NULL;
main_ColorBar_2_in_10 = NULL;
main_ColorBar_2_in_11 = NULL;
main_ColorBar_2_in_12 = NULL;
main_ColorBar_2_in_13 = NULL;
main_ColorBar_2_in_14 = NULL;
main_ColorBar_2_in_15 = 1;
main_ColorBar_2_in_16 = 18;
main_ColorBar_2_out_1 = NULL;
main_Color_1_in_3 = 1.0;
main_Color_1_in_4 = NULL;
main_Color_1_in_5 = NULL;
main_Color_1_out_1 = NULL;
main_Collect_8_in_2 = NULL;
main_Collect_8_in_3 = NULL;
main_Collect_8_out_1 = NULL;
main_Scalar_5_in_1 = "Scalar_5";
main_Scalar_5_in_2 = NULL;
main_Scalar_5_in_3 = 1.0 ;
main_Scalar_5_in_4 = NULL;
main_Scalar_5_in_5 = NULL;
main_Scalar_5_in_6 = NULL;
main_Scalar_5_in_7 = NULL;
main_Scalar_5_in_8 = NULL;
main_Scalar_5_in_9 = NULL;
main_Scalar_5_in_10 = NULL;
main_Scalar_5_in_11 = NULL;
main_Scalar_5_out_1 = 1.0 ;
main_RubberSheet_2_in_3 = NULL;
main_RubberSheet_2_in_4 = NULL;
main_RubberSheet_2_out_1 = NULL;
main_Toggle_3_in_1 = "Toggle_3";
main_Toggle_3_in_2 = 0;
main_Toggle_3_in_3 = 0;
main_Toggle_3_in_4 = NULL;
main_Toggle_3_in_5 = NULL;
main_Toggle_3_in_6 = NULL;
main_Toggle_3_out_1 = 0;
main_Scalar_7_in_1 = "Scalar_7";
main_Scalar_7_in_2 = NULL;
main_Scalar_7_in_3 = 0.25;
main_Scalar_7_in_4 = NULL;
main_Scalar_7_in_5 = NULL;
main_Scalar_7_in_6 = NULL;
main_Scalar_7_in_7 = NULL;
main_Scalar_7_in_8 = NULL;
main_Scalar_7_in_9 = NULL;
main_Scalar_7_in_10 = NULL;
main_Scalar_7_in_11 = NULL;
main_Scalar_7_out_1 = 0.25;
main_Glyph_1_in_2 = "arrow2D";
main_Glyph_1_in_3 = 1.0;
main_Glyph_1_in_5 = NULL;
main_Glyph_1_in_6 = NULL;
main_Glyph_1_in_7 = NULL;
main_Glyph_1_out_1 = NULL;
main_Color_7_in_2 = "white";
main_Color_7_in_3 = NULL;
main_Color_7_in_4 = NULL;
main_Color_7_in_5 = NULL;
main_Color_7_out_1 = NULL;
main_Transmitter_40_out_1 = NULL;
main_Receiver_70_out_1 = NULL;
main_Switch_8_out_1 = NULL;
main_Collect_4_in_1 = NULL;
main_Collect_4_out_1 = NULL;
main_Transmitter_5_out_1 = NULL;
main_Receiver_6_out_1 = NULL;
main_Camera_1_in_1 = NULL;
main_Camera_1_in_2 = NULL;
main_Camera_1_in_3 = NULL;
main_Camera_1_in_4 = NULL;
main_Camera_1_in_5 = NULL;
main_Camera_1_in_6 = NULL;
main_Camera_1_in_7 = NULL;
main_Camera_1_in_8 = NULL;
main_Camera_1_in_9 = NULL;
main_Camera_1_out_1 = NULL;
main_AutoAxes_1_in_3 = {"{x}","{y}","{altura}"};
main_AutoAxes_1_in_4 = 40;
main_AutoAxes_1_in_5 = {[1 1 1.4],[0 0 0.4]};
main_AutoAxes_1_in_6 = NULL;
main_AutoAxes_1_in_7 = 1;
main_AutoAxes_1_in_8 = NULL;
main_AutoAxes_1_in_9 = 1;
main_AutoAxes_1_in_10 = NULL;
main_AutoAxes_1_in_11 = NULL;
main_AutoAxes_1_in_12 = 0.25;
main_AutoAxes_1_in_13 = "script_s";
main_AutoAxes_1_in_14 = { 0.0 0.25 0.5 0.75 1.0 };
main_AutoAxes_1_in_15 = { 0.0 0.25 0.5 0.75 1.0 };
main_AutoAxes_1_in_16 = { 0.4 0.5 0.75 1.0 1.25 1.4 };
main_AutoAxes_1_in_17 = {"0.0" ,"0.25", "0.5", "0.75", "1.0"};
main_AutoAxes_1_in_18 = {"0.0", "0.25", "0.5" ,"0.75" ,"1.0"};
main_AutoAxes_1_in_19 = {"0.4","0.5","0.75","1.0","1.25","1.5"};
main_AutoAxes_1_out_1 = NULL;
main_Transmitter_61_out_1 = NULL;
main_Receiver_36_out_1 = NULL;
main_Scalar_6_in_1 = "Scalar_6";
main_Scalar_6_in_2 = {0.005};
main_Scalar_6_in_3 = 0.005 ;
main_Scalar_6_in_4 = NULL;
main_Scalar_6_in_5 = NULL;
main_Scalar_6_in_6 = NULL;
main_Scalar_6_in_7 = NULL;
main_Scalar_6_in_8 = NULL;
main_Scalar_6_in_9 = NULL;
main_Scalar_6_in_10 = NULL;
main_Scalar_6_in_11 = NULL;
main_Scalar_6_out_1 = 0.005 ;
main_Compute_55_in_1 = "$0*$1";
main_Compute_55_out_1 = NULL;
main_Format_5_in_1 = "real time %f [secs]";
main_Format_5_out_1 = NULL;
main_Caption_2_in_2 = [.5 .98];
main_Caption_2_in_3 = NULL;
main_Caption_2_in_4 = NULL;
main_Caption_2_in_5 = NULL;
main_Caption_2_in_6 = 25;
main_Caption_2_in_7 = "roman_tser";
main_Caption_2_in_8 = NULL;
main_Caption_2_in_9 = NULL;
main_Caption_2_out_1 = NULL;
main_Transmitter_21_out_1 = NULL;
main_Receiver_30_out_1 = NULL;
main_Format_4_in_1 = "Step = %d -- color=%s";
main_Format_4_out_1 = NULL;
main_Caption_3_in_2 = [.5 .08];
main_Caption_3_in_3 = NULL;
main_Caption_3_in_4 = [0.5 0.1];
main_Caption_3_in_5 = NULL;
main_Caption_3_in_6 = 25;
main_Caption_3_in_7 = "roman_tser";
main_Caption_3_in_8 = [1 0];
main_Caption_3_in_9 = NULL;
main_Caption_3_out_1 = NULL;
main_Color_5_in_2 = "white";
main_Color_5_in_3 = 1.0;
main_Color_5_in_4 = NULL;
main_Color_5_in_5 = NULL;
main_Color_5_out_1 = NULL;
main_Color_6_in_2 = "white";
main_Color_6_in_3 = NULL;
main_Color_6_in_4 = NULL;
main_Color_6_in_5 = NULL;
main_Color_6_out_1 = NULL;
main_Toggle_4_in_1 = "Toggle_4";
main_Toggle_4_in_2 = 0;
main_Toggle_4_in_3 = 0;
main_Toggle_4_in_4 = NULL;
main_Toggle_4_in_5 = NULL;
main_Toggle_4_in_6 = "show mesh?";
main_Toggle_4_out_1 = 0;
main_ShowConnections_1_out_1 = NULL;
main_Color_9_in_2 = "orange";
main_Color_9_in_3 = 1.0;
main_Color_9_in_4 = NULL;
main_Color_9_in_5 = NULL;
main_Color_9_out_1 = NULL;
main_Switch_9_out_1 = NULL;
main_Collect_2_in_5 = NULL;
main_Collect_2_out_1 = NULL;
main_Isosurface_2_in_2 = { 0.0 0.5 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 };
main_Isosurface_2_in_3 = NULL;
main_Isosurface_2_in_4 = NULL;
main_Isosurface_2_in_5 = NULL;
main_Isosurface_2_in_6 = NULL;
main_Isosurface_2_out_1 = NULL;
main_Color_3_in_2 = "black";
main_Color_3_in_3 = 1.0;
main_Color_3_in_4 = NULL;
main_Color_3_in_5 = NULL;
main_Isosurface_3_in_2 = { 0.1 0.2 0.3 0.4 0.6 0.7 0.8 0.9 1.1 1.2 1.3 1.4 1.6 1.7 1.8 1.9 2.1 2.2 2.3 2.4 2.6 2.7 2.8 2.9 3.1 3.2 3.3 3.4 3.6 3.7 3.8 3.9 4.1 4.2 4.3 4.4 };
main_Isosurface_3_in_3 = NULL;
main_Isosurface_3_in_4 = NULL;
main_Isosurface_3_in_5 = NULL;
main_Isosurface_3_in_6 = NULL;
main_Isosurface_3_out_1 = NULL;
main_Color_8_in_2 = [0,0.3,0.6];
main_Color_8_in_3 = 1.0;
main_Color_8_in_4 = NULL;
main_Color_8_in_5 = NULL;
main_Select_2_in_2 = "sw2d_state_ini";
main_Select_2_in_3 = NULL;
main_Select_2_out_1 = NULL;
main_Compute_5_in_1 = "[$0.0,$0.1]";
main_Compute_5_out_1 = NULL;
main_Compute_6_in_1 = "$0.2";
main_Compute_6_out_1 = NULL;
main_Compute_8_in_1 = "$0.y";
main_Compute_8_out_1 = NULL;
main_Compute_57_in_1 = "$0.x";
main_Compute_57_out_1 = NULL;
main_Format_2_in_1 = "/home/rodrigop/PETSC/petscfem/test/sw2d/YUV/plano.%d";
main_Format_2_in_3 = {1};
main_Format_2_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_4_in_1 = "Image_4";
main_Image_4_in_3 = "X16,,";
main_Image_4_in_4 = 1;
main_Image_4_in_5 = [0.359899 0.396985 1.17366];
main_Image_4_in_6 = [-4.80476 -16.6142 6.97972];
main_Image_4_in_7 = 2.97877;
main_Image_4_in_8 = 1210;
main_Image_4_in_9 = 0.604;
main_Image_4_in_10 = [0.0627818 0.305252 0.9502];
main_Image_4_in_11 = NULL;
main_Image_4_in_12 = 0;
main_Image_4_in_13 = NULL;
main_Image_4_in_14 = 1;
main_Image_4_in_15 = NULL;
main_Image_4_in_16 = NULL;
main_Image_4_in_17 = NULL;
main_Image_4_in_18 = NULL;
main_Image_4_in_19 = 0;
main_Image_4_in_20 = NULL;
main_Image_4_in_21 = 0;
main_Image_4_in_22 = "black";
main_Image_4_in_23 = NULL;
main_Image_4_in_26 = "tiff";
main_Image_4_in_27 = 1024;
main_Image_4_in_28 = 0.75;
main_Image_4_in_29 = 0;
main_Image_4_in_30 = {"X", "Y", "Z"};
main_Image_4_in_31 = NULL;
main_Image_4_in_32 = NULL;
main_Image_4_in_33 = 0;
main_Image_4_in_34 = 0;
main_Image_4_in_35 = NULL;
main_Image_4_in_36 = 1;
main_Image_4_in_37 = {"clear", "gray", "white", "white"};
main_Image_4_in_38 = {"background", "grid", "ticks", "labels"};
main_Image_4_in_39 = 0.0;
main_Image_4_in_40 = NULL;
main_Image_4_in_41 = "none";
main_Image_4_in_42 = NULL;
main_Image_4_in_43 = NULL;
main_Image_4_in_44 = NULL;
main_Image_4_in_45 = NULL;
main_Image_4_in_46 = NULL;
main_Image_4_in_47 = NULL;
main_Image_4_in_48 = NULL;
main_Image_4_in_49 = NULL;
main_Receiver_55_in_1 = NULL;
Executive("product version 4 4 4");
$sync

sequence main();
play;

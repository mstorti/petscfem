<:
require '../eperlini.pl';       # Initializes ePerl 
$case_name = "$ENV{'case_name'}";
$case_name = 'default' unless defined $case_name;
@vars = qw(case_name);
transcript("", @vars);	# print variables on output and transcript this block
octave_export_vars(">data.m.tmp",@vars);
:>//                            # ends ePerl block

#default definitions
#===========================================================
global_options
ndim 2

chunk_size 10
save_file "state.<:=$case_name:>.tmp"
nsave 20

rtol 1e-2
maxits 100

save_file_pattern "outvector%d.tmp"
#nsaverot 1000000

nnwt 1
tol_newton 0
preco_type "lu"

steady
nstep 1
print_dofmap_id
__END_HASH__

#===========================================================
# ndim nu ndof
nodes   2  2  2
__INCLUDE__ genload.nod
__END_NODES__

#===========================================================
elemset qharmm 4
#Datos del elemento
geometry cartesian2d
npg 4
#if $case_name eq 'scalar'
conductivity 2.
#elsif $case_name eq 'diag'
conductivity 2. 3.
#elsif $case_name eq 'full'
conductivity 2. 0.5 0.5 4.
#endif
rho_Cp 1.
__END_HASH__
1 3 4 2 
3 5 6 4 
5 7 8 6 
__END_ELEMSET__

end_elemsets

#===========================================================
fixa
1 1 1.
2 1 1.
7 1  0.
8 1  0.
7 2  1.
8 2  1.
__END_FIXA__

constraint
-1.  1 2  0.1  2 2
0.1  1 2 -1.0  2 2
__END_CONSTRAINT__

# Local Variables: $
# mode: shell-script $
# eval: (setq indent-tabs-mode nil) $
# End: $

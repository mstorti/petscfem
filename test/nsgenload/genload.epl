<:
require '../eperlini.pl';       # Initializes ePerl 
$case_name = "$ENV{'case_name'}";
$case_name = 'default' unless defined $case_name;
$qconst=0;
if ($case_name eq 'qconst') {
    $qconst = 1;
    $case_name = 'scalar';
}
$constraint = 0;
if ($case_name eq 'constraint') {
    $constraint = 1;
    $case_name = 'full';
}
if ($case_name =~ /^fstack/) {
    ${$case_name} = 1;
    $case_name = 'scalar';
}
@vars = qw(case_name);
transcript("", @vars);	# print variables on output and transcript this block
octave_export_vars(">data.m.tmp",@vars);
:>//                            # ends ePerl block

#default definitions
#===========================================================
global_options
ndim 2

chunk_size 10
save_file "state.<:=$case_name:>.tmp"
nsave 20

rtol 1e-2
maxits 100

save_file_pattern "outvector%d.tmp"
nnwt 1
tol_newton 0
preco_type "lu"
steady
nstep 1
print_dofmap_id
# print_linear_system_and_stop
# solve_system 0
#if $fstack_global
__INCLUDE__ "dummy_archive"
#endif
__END_HASH__

#===========================================================
# ndim nu ndof
#if $fstack_nodes
nodes   2  2  2
__INCLUDE__ "dummy_archive"
__END_NODES__
#elsif $fstack_nodes2
nodedata   2  2  2
data dummy_archive
__END_HASH__
#else
nodes   2  2  2
__INCLUDE__ "genload.nod"
#if ! $qconst
 1 0
 1 0.0625
#endif
__END_NODES__
#endif

#===========================================================
elemset qharmm 4
#Datos del elemento
geometry cartesian2d
npg 4
#if $case_name eq 'scalar'
conductivity 2.
#elsif $case_name eq 'diag'
conductivity 2. 3.
#elsif $case_name eq 'full'
conductivity 2. 0.5 0.5 4.
#endif
Cp 0.
C 0.
Dt 1.
__END_HASH__
1 3 4 2 
3 5 6 4 
5 7 8 6 
7 9 10 8 
9 11 12 10 
11 13 14 12 
13 15 16 14 
#<:$lin_gen_load_e=!$qconst:>
#if $lin_gen_load_e
15 17 18 16 
#else
15 19 20 16 
#endif
19 21 22 20 
21 23 24 22 
23 25 26 24 
25 27 28 26 
27 29 30 28 
29 31 32 30 
31 33 34 32 
33 35 36 34 
__END_ELEMSET__


#if !$qconst
elemset lin_gen_load 4
geometry cartesian1d
npg 2
double_layer
const_flux 0. 0.
#if $case_name eq 'scalar'
h_film 4.
#elsif $case_name eq 'diag'
h_film 3. 6.
#elsif $case_name eq 'full'
h_film 2. .1 .1 4.
#endif
__END_HASH__
17 18 19 20 
__END_ELEMSET__
#else
elemset lin_gen_load 2
geometry cartesian1d
npg 2
const_flux 1. 2.
h_film 1.
u_out 10. 10.
__END_HASH__
35 36
__END_ELEMSET__
#endif

end_elemsets

#===========================================================
fixa
1 1  1.
2 1  1.
#if !$constraint
1 2  0.
2 2  0.
#endif

#if !$qconst
35 1  0.
36 1  0.
35 2  1.
36 2  1.
#endif

__END_FIXA__

#if $constraint
constraint
-1.  1 2  0.1  2 2  0.1 35 1
0.1  1 2 -1.0  2 2  0.1 36 1
__END_CONSTRAINT__
#endif

# Local Variables: $
# mode: shell-script $
# eval: (setq indent-tabs-mode nil) $
# End: $

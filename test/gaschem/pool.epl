# -*- mode: shell-script -*-
<:                              # starts ePerl block
#__TRANSCRIPT__
require "$ENV{'PETSCFEM_DIR'}/test/eperlini.pl";# Initializes ePerl 
$Nx = 1;
$Ny = 40;
$Ly = 20;
$Lx = $Ly/$Ny*$Nx;
$rho_liq = 1000;
$gravity = 9.8;
$xO_in = 0.2;
$KO = 1.3516e-5;
$KN = 0.6788e-5;
$Rgas = 8.314;
$Tgas = 293.0;
$nu_t = 1e-1;

## At inlet ===============================================
$rb = 0.01;			# radius of bubble at inlet
$alpha = 0.1;			# gas fraction at inlet
#
$vb = 4/3*$PI*$rb**3.0;		# bubble volume
$Nb = $alpha/$vb;		# Nbr of bubbles 

$patm = 1e5;			# Atmosferic pressure
$pgas = $patm + 
     $rho_liq*$gravity*$Ly;	# hydrostatic pressure at bottom
$C = $patm*$alpha/($Rgas*$Tgas);# Total conc. of gas at bottom
$CO = $C*$xO_in;		# Conc. of O2 at bottom
$CN = $C-$CO;			# Conc. of N2 at bottom
$CdO = $KO*$patm*$xO_in;	# Conc. of O2 diss. at bottom
$CdN = $KN*$patm*(1.0-$xO_in);	# Conc. of O2 diss. at bottom
#
#__END_TRANSCRIPT__
@vars = qw(Nx Ny Lx Ly rho_liq gravity KO KN Nb alpha rb vb 
    CN CO CdO CdN nu_t patm);
transcript("", @vars);	# print variables on output
octave_export_vars(">data.m.tmp",@vars);
:>//                            # ends ePerl block
#================================================================
global_options

ndim 2
nsave 5
nstep 100
initial_state "pool.ini.tmp"

#if 1
solver "iisd"
iisd_subpart 1
#else
solver "petsc"
preco_type "lu"
#endif

atol 0
rtol 1e-6
dtol 1e3
nnwt 2
weak_form 1

Krylov_dim 100
print_internal_loop_conv 0

steady 0
Dt 10.0

<:pr('nu_t'):>
<:pr('KO'):>
<:pr('KN'):>
<:pr('gravity'):>
# print_linear_system_and_stop

__END_HASH__

# ndim nu ndof
nodes  2  5  5
__INCLUDE__ pool.nod.tmp
_END_NODES__

elemset gaschem 4
name fluid
dx
geometry cartesian2d
npg 4
__END_HASH__
__INCLUDE__ pool.con.tmp
__END_ELEMSET__

elemset gaschem_bcconv 2
geometry cartesian1d
npg 2
__END_HASH__
__INCLUDE__ pool.bcc-up.tmp
__END_ELEMSET__

end_elemsets

fixa
__INCLUDE__ pool.fixa.tmp
__END_FIXA__

constraint
__INCLUDE__ pool.peri.tmp
__END_CONSTRAINT__

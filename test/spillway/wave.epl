##__INSERT_LICENSE__
## $Id: wave.epl,v 1.1 2003/03/22 22:20:32 mstorti Exp $ 
<:                              # starts ePerl block
#__TRANSCRIPT__
require "$ENV{'PETSCFEM_DIR'}/test/eperlini.pl";       # Initializes ePerl 
require "$ENV{'PETSCFEM_DIR'}/tools/dx.pl";       # Initializes ePerl 
$case_name = $ENV{'case_name'};
$case_name = 'default' unless defined $case_name;
if (!$re_start && -f 'wave.axis_nodes.rslt.tmp') {
    unlink 'wave.axis_nodes.rslt.tmp';
}
$h = 4;                         # Mean water height

$ref = 2;                       # refinement parameter
$Ny = 10*$ref;                  # Number of elements along vert. direction
$Nx = 50*$ref;                  # Number of elements along horiz. direction

$gravity = 9.8;                 # gravity acceleration (magnitude)
$slope = 0.01;                  # simulated bottom slope. A term g_x = slope*g is added
$patm = 0;                      # Pressure at FS
$p_const_bc = 0;                # Impose = patm on the free surface
$fs_relax = 1;                  # relaxation factor for the 
                                # free surface evolution eq. 
$fs_relax = 0 if !$p_const_bc;
#__END_TRANSCRIPT__
@vars = qw(L h Ny Nx fs_relax Dt gravity p_const_bc patm slope);
transcript("", @vars);	# print variables on output and transcript this block
octave_export_vars(">data.m.tmp",@vars);
system "initia=1 octave -qH wave.m";
$nnod = count_lines("./wave.nod.tmp");
:>//                            # ends ePerl block

# <:pr('case_name'):>
#===========================================================
global_options
ndim 2

save_file "wave.state.tmp"
nsave 1

save_file_pattern "wave.state_%d.tmp"
nsaverot 10
nrec 1
nfile 100000000

# initial_state "wave.ini.tmp"
nstep 10000
# steady
solver "iisd"
iisd_subpart_auto 2000
preco_type "jacobi"
# print_internal_loop_conv 1
Krylov_dim 200
nnwt 3
alpha 1.0
weak_form 0
<:pr('Dt'):>
rtol 1e-4
atol 1e-10
iisdmat_print_statistics
print_partitioning_statistics
# print_linear_system_and_stop
# verify_jacobian_with_numerical_one 1
# solve_system 0
# report_consumed_time

hook_list ns_dx_hook my_dx_hook \
          dl_generic_hook my_ale_hook

my_ale_hook.filename ./alehook.efn
my_ale_hook.prefix   ale_hook_w

viscosity 1e-2
G_body  <:=$slope*$gravity:> <:=-$gravity:>

# For DX
dx_split_state "1 2 0 1 u 1 1 2 p"
dx_auto_combine
dx_state_all_fields 0
dx_steps 0
# dx_read_state_from_file 1
__END_HASH__

#===========================================================
# ndim nu ndof
nodedata   2  2  3
data wave.nod.tmp
__END_HASH__

#===========================================================
elemset nsi_tet_les_fm2 4
name viscous_fluid_elemset
geometry cartesian2d
npg 4
data wave.con.tmp
rho 1.
dx 
__END_HASH__

end_elemsets

#===========================================================
fixa
__INCLUDE__ "wave.fixa_in.tmp"
__INCLUDE__ "wave.fixa_out.tmp"
__INCLUDE__ "wave.fixa_bot.tmp"
#if $p_const_bc
__INCLUDE__ "wave.patm.tmp"
#endif
__END_FIXA__

#===========================================================
#if !$p_const_bc
constraint
__INCLUDE__ "wave.slip.tmp"
__INCLUDE__ "wave.peri.tmp"
__END_CONSTRAINT__
#endif


# Local Variables: $
# mode: shell-script $
# eval: (setq indent-tabs-mode nil) $
# End: $

##__INSERT_LICENSE__
## $Id: spillway.epl,v 1.12 2003/03/31 17:07:10 mstorti Exp $ 
<:                              # starts ePerl block
#__TRANSCRIPT__
require "$ENV{'PETSCFEM_DIR'}/test/eperlini.pl";       # Initializes ePerl 
require "$ENV{'PETSCFEM_DIR'}/tools/dx.pl";       # Initializes ePerl 
require 'data.pl';
#__END_TRANSCRIPT__
@vars = qw(C E H1 L1 L2 h1 y2 Ny Nx uin fs_relax Dt gravity p_const_bc patm
    steady_state_file x_damp initia);
transcript("", @vars);	# print variables on output and transcript this block
octave_export_vars(">data.m.tmp",@vars);
system "initia=1 octave -qH spillway.m";
$nnod = count_lines("./spillway.nod.tmp");
:>//                            # ends ePerl block

# <:pr('case_name'):>
#===========================================================
global_options
ndim 2

save_file "spillway.state.tmp"
nsave 1

save_file_pattern "spillway.state_%d.tmp"
nsaverot 10
nrec 1
nfile 100000000

#if $initia
initial_state "spillway.ini.tmp"
#else
initial_state "spillway.steady_state"
#endif
nstep 10000
# steady <:=$initia:>
solver "iisd"
iisd_subpart_auto 2000
preco_type "jacobi"
# print_internal_loop_conv 1
Krylov_dim 200
nnwt 3
alpha 1.0
weak_form 1
<:pr('Dt'):>
rtol 1e-4
atol 1e-10
iisdmat_print_statistics
print_partitioning_statistics
# print_linear_system_and_stop
# verify_jacobian_with_numerical_one 1
# solve_system 0
# report_consumed_time
#if !$initia
launch_mesh_move

hook_list ns_dx_hook my_dx_hook \
          dl_generic_hook my_ale_hook

my_ale_hook.filename ./alehook.efn
my_ale_hook.prefix   ale_hook2
#else
hook_list ns_dx_hook my_dx_hook
#endif

viscosity 1e-2
G_body <:=$slope*$gravity:> <:=-$gravity:>

# For DX
dx_split_state "1 2 0 1 u 1 1 2 p"
dx_auto_combine
dx_state_all_fields 0
dx_steps 1
# dx_read_state_from_file 1
__END_HASH__

#===========================================================
# ndim nu ndof
nodedata   2  2  3
data spillway.nod.tmp
__END_HASH__

#===========================================================
elemset nsi_tet_les_fm2 4
name viscous_fluid_elemset
geometry cartesian2d
npg 4
data spillway.con.tmp
rho 1.
dx 
__END_HASH__

#===========================================================
#if 0
elemset qharmm 4
name qharmm
geometry cartesian2d
npg 4
data spillway.damp_con.tmp
conductivity 0.
C 0. 1. 0.
# state_ref <:=$uin:> 0. 0.
dx 0
__END_HASH__
#endif

elemset bcconv_ns_fm2 2
name bcconv
geometry cartesian1d
npg 2
data spillway.bcconv_out.tmp
__END_HASH__

end_elemsets

#===========================================================
fixa
__INCLUDE__ "spillway.fixa_in.tmp"
__INCLUDE__ "spillway.fixa_out.tmp"
__INCLUDE__ "spillway.fixa_bot.tmp"
#if $p_const_bc
__INCLUDE__ "spillway.patm.tmp"
#endif
__END_FIXA__

#===========================================================
#if !$p_const_bc
constraint
__INCLUDE__ "spillway.slip.tmp"
__END_CONSTRAINT__
#endif

# Local Variables: $
# mode: shell-script $
# eval: (setq indent-tabs-mode nil) $
# End: $

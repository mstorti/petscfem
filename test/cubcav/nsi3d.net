//
// time: Tue Aug 26 20:29:17 2003
//
// version: 3.1.2 (format), 4.2.0 (DX)
//
//
// MODULE main
//
// comment: A general purpose visual program for gridded, two-dimensional, multivariate data has been used. 
// comment: 
// comment: The control panels allow you to choose which variable to visualize as a deformed surface, which variable to visualize as colors on the surface, and which variable to visualize as contour lines (for scalar data) or glyphs (for vector or connection-dependent data). You can also set the contour line values.
// comment: 
// comment: If you would like to modify or use this visual program in the future, choose Open Visual Program Editor from the Windows menu, and then choose Save As from the File menu of the VPE.
// page assignment: ProcScalar	order=5, windowed=0, showing=1
// page assignment: ProcVelocity	order=6, windowed=0, showing=0
// page assignment: RotBalls	order=9, windowed=0, showing=0
// page assignment: ScalarGrad	order=4, windowed=0, showing=0
// page assignment: Selectscalar	order=3, windowed=0, showing=0
// page assignment: Streamlines	order=8, windowed=0, showing=0
// page assignment: Vectors	order=7, windowed=0, showing=0
// page assignment: image	order=10, windowed=0, showing=0
// page assignment: import	order=2, windowed=0, showing=0
// workspace: width = 1008, height = 662
// layout: snap = 1, width = 20, height = 20, align = UL
//
macro main(
) -> (
) {
    // 
    // node AmbientLight[1]: x = 180, y = 80, inputs = 1, label = AmbientLight
    // input[1]: defaulting = 0, visible = 1, type = 8, value = [0.01 0.01 0.01]
    // page group: image
    //
main_AmbientLight_1_out_1 = 
    AmbientLight(
    main_AmbientLight_1_in_1
    ) [instance: 1, cache: 1];
    // 
    // node Toggle[4]: x = 80, y = 340, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_4"
    // input[2]: defaulting = 0, visible = 0, type = 29, value =  2  
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 0, visible = 1, type = 29, value =  1  
    // input[5]: defaulting = 0, visible = 1, type = 29, value =  2  
    // output[1]: visible = 1, type = 29, value =  2  
    // page group: Selectscalar
    // toggle : 0
    //
main_Toggle_4_out_1[cache: 2] = 
    Toggle(
    main_Toggle_4_in_1,
    main_Toggle_4_in_2,
    main_Toggle_4_in_3,
    main_Toggle_4_in_4,
    main_Toggle_4_in_5,
    main_Toggle_4_in_6
    ) [instance: 4, cache: 1];
    // 
    // node Selector[1]: x = 20, y = 80, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_1"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "log(abs(vort))" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 4 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "none" "abs(u)" "pressure" "vorticity" "log(abs(vort))" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 0 1 2 3 4 }
    // output[1]: visible = 1, type = 29, value = 4 
    // output[2]: visible = 1, type = 32, value = "log(abs(vort))" 
    // page group: Selectscalar
    //
    // 
    // node ExtProgImport[1]: x = 120, y = 120, inputs = 7, label = ExtProgImport
    // input[1]: defaulting = 0, visible = 1, type = 1, value = 1
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "@geronimo"
    // input[3]: defaulting = 0, visible = 1, type = 1, value = 5314
    // input[5]: defaulting = 0, visible = 1, type = 1, value = 0
    // input[6]: defaulting = 0, visible = 1, type = 32, value = "cubcav.state"
    // page group: import
    //
main_ExtProgImport_1_out_1,
main_ExtProgImport_1_out_2,
main_ExtProgImport_1_out_3 = 
    ExtProgImport(
    main_ExtProgImport_1_in_1,
    main_ExtProgImport_1_in_2,
    main_ExtProgImport_1_in_3,
    main_ExtProgImport_1_in_4,
    main_ExtProgImport_1_in_5,
    main_ExtProgImport_1_in_6,
    main_ExtProgImport_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Select[7]: x = 120, y = 260, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "fluid_u"
    // page group: import
    //
main_Select_7_out_1 = 
    Select(
    main_ExtProgImport_1_out_2,
    main_Select_7_in_2,
    main_Select_7_in_3
    ) [instance: 7, cache: 1];
    // 
    // node Transmitter[27]: x = 140, y = 380, inputs = 1, label = u
    // page group: import
    //
u = main_Select_7_out_1;
    // 
    // node Receiver[38]: x = 180, y = 0, inputs = 1, label = u
    // page group: Selectscalar
    //
main_Receiver_38_out_1[cache: 0] = u;
    // 
    // node Compute[29]: x = 160, y = 80, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "mag($0)"
    // page group: Selectscalar
    // expression: value = mag(u)
    // name[2]: value = u
    //
main_Compute_29_out_1 = 
    Compute(
    main_Compute_29_in_1,
    main_Receiver_38_out_1
    ) [instance: 29, cache: 1];
    // 
    // node Select[9]: x = 180, y = 260, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "fluid_p"
    // page group: import
    //
main_Select_9_out_1 = 
    Select(
    main_ExtProgImport_1_out_2,
    main_Select_9_in_2,
    main_Select_9_in_3
    ) [instance: 9, cache: 1];
    // 
    // node Transmitter[26]: x = 200, y = 380, inputs = 1, label = p
    // page group: import
    //
p = main_Select_9_out_1;
    // 
    // node Receiver[37]: x = 320, y = 180, inputs = 1, label = p
    // page group: Selectscalar
    //
main_Receiver_37_out_1[cache: 0] = p;
    // 
    // node Receiver[35]: x = 80, y = 0, inputs = 1, label = u
    // page group: ProcVelocity
    //
main_Receiver_35_out_1[cache: 0] = u;
    // 
    // node DivCurl[1]: x = 60, y = 100, inputs = 2, label = DivCurl
    // page group: ProcVelocity
    //
main_DivCurl_1_out_1,
main_DivCurl_1_out_2 = 
    DivCurl(
    main_Receiver_35_out_1,
    main_DivCurl_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Compute[30]: x = 140, y = 180, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "mag($0)"
    // page group: ProcVelocity
    // expression: value = mag(w)
    // name[2]: value = w
    //
main_Compute_30_out_1 = 
    Compute(
    main_Compute_30_in_1,
    main_DivCurl_1_out_2
    ) [instance: 30, cache: 1];
    // 
    // node Transmitter[9]: x = 160, y = 260, inputs = 1, label = w
    // page group: ProcVelocity
    //
w = main_Compute_30_out_1;
    // 
    // node Receiver[39]: x = 360, y = 140, inputs = 1, label = w
    // page group: Selectscalar
    //
main_Receiver_39_out_1[cache: 0] = w;
    // 
    // node Compute[10]: x = 40, y = 240, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "log10(max(mag($0),0.01))"
    // page group: ProcVelocity
    // expression: value = log10(max(mag(w),0.01))
    // name[2]: value = w
    //
main_Compute_10_out_1 = 
    Compute(
    main_Compute_10_in_1,
    main_DivCurl_1_out_2
    ) [instance: 10, cache: 1];
    // 
    // node Transmitter[10]: x = 40, y = 320, inputs = 1, label = log_abs_w
    // page group: ProcVelocity
    //
log_abs_w = main_Compute_10_out_1;
    // 
    // node Receiver[40]: x = 500, y = 180, inputs = 1, label = log_abs_w
    // page group: Selectscalar
    //
main_Receiver_40_out_1[cache: 0] = log_abs_w;
    // 
    // node Switch[5]: x = 160, y = 260, inputs = 5, label = Switch
    // input[1]: defaulting = 1, visible = 1, type = 1, value = 1
    // page group: Selectscalar
    //
main_Switch_5_out_1 = 
    Switch(
    main_Selector_1_out_1,
    main_Compute_29_out_1,
    main_Receiver_37_out_1,
    main_Receiver_39_out_1,
    main_Receiver_40_out_1
    ) [instance: 5, cache: 1];
    // 
    // node Scalar[15]: x = 300, y = 300, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_15"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.8
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.8
    // page group: Selectscalar
    //
    // 
    // node Isolate[1]: x = 180, y = 360, inputs = 2, label = Isolate
    // input[2]: defaulting = 1, visible = 1, type = 5, value = 0.95
    // page group: Selectscalar
    //
main_Isolate_1_out_1 = 
    Isolate(
    main_Switch_5_out_1,
    main_Scalar_15_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Switch[11]: x = 180, y = 440, inputs = 3, label = Switch
    // page group: Selectscalar
    //
main_Switch_11_out_1 = 
    Switch(
    main_Toggle_4_out_1,
    main_Isolate_1_out_1,
    main_Switch_5_out_1
    ) [instance: 11, cache: 1];
    // 
    // node Transmitter[32]: x = 180, y = 520, inputs = 1, label = scalar_field
    // page group: Selectscalar
    //
scalar_field = main_Switch_11_out_1;
    // 
    // node Receiver[45]: x = 60, y = 20, inputs = 1, label = scalar_field
    // page group: ScalarGrad
    //
main_Receiver_45_out_1[cache: 0] = scalar_field;
    // 
    // node Gradient[3]: x = 100, y = 100, inputs = 2, label = Gradient
    // page group: ScalarGrad
    //
main_Gradient_3_out_1 = 
    Gradient(
    main_Receiver_45_out_1,
    main_Gradient_3_in_2
    ) [instance: 3, cache: 1];
    // 
    // node AutoGlyph[3]: x = 80, y = 180, inputs = 7, label = AutoGlyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "rocket"
    // input[3]: defaulting = 0, visible = 1, type = 5, value = 0.1
    // input[4]: defaulting = 0, visible = 1, type = 5, value = 10.0
    // input[6]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 0.2
    // page group: ScalarGrad
    //
main_AutoGlyph_3_out_1 = 
    AutoGlyph(
    main_Gradient_3_out_1,
    main_AutoGlyph_3_in_2,
    main_AutoGlyph_3_in_3,
    main_AutoGlyph_3_in_4,
    main_AutoGlyph_3_in_5,
    main_AutoGlyph_3_in_6,
    main_AutoGlyph_3_in_7
    ) [instance: 3, cache: 1];
    // 
    // node Sequencer[1]: x = 120, y = 20, inputs = 7, label = Sequencer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Sequencer_1"
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 0
    // input[5]: defaulting = 0, visible = 1, type = 1, value = 3100
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 16777217, value = { 0 3100 1 0 100 1 }
    // page group: import
    // vcr[1]: min = 0, max = 3100, beg = 0, end = 100, cur = 65, inc = 1, loop = off, step = off, pal = off
    // window: position = (0.5430,0.0560), size = 0.3496x0.1055
    //
    main_Sequencer_1_in_3 = @frame;
main_Sequencer_1_out_1[cache: 2] = 
    Sequencer(
    main_Sequencer_1_in_1,
    main_Sequencer_1_in_2,
    main_Sequencer_1_in_3,
    main_Sequencer_1_in_4,
    main_Sequencer_1_in_5,
    main_Sequencer_1_in_6,
    main_Sequencer_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[30]: x = 20, y = 100, inputs = 1, label = seq_step
    // page group: import
    //
seq_step = main_Sequencer_1_out_1;
    // 
    // node Receiver[36]: x = 300, y = 80, inputs = 1, label = seq_step
    // page group: image
    //
main_Receiver_36_out_1[cache: 0] = seq_step;
    // 
    // node Transmitter[21]: x = 80, y = 180, inputs = 1, label = caption
    // page group: Selectscalar
    //
caption = main_Selector_1_out_2;
    // 
    // node Receiver[30]: x = 380, y = 80, inputs = 1, label = caption
    // page group: image
    //
main_Receiver_30_out_1[cache: 0] = caption;
    // 
    // node Format[1]: x = 320, y = 160, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "Step %d, Color=%s"
    // page group: image
    //
main_Format_1_out_1 = 
    Format(
    main_Format_1_in_1,
    main_Receiver_36_out_1,
    main_Receiver_30_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Caption[2]: x = 320, y = 240, inputs = 9, label = Caption
    // page group: image
    //
main_Caption_2_out_1 = 
    Caption(
    main_Format_1_out_1,
    main_Caption_2_in_2,
    main_Caption_2_in_3,
    main_Caption_2_in_4,
    main_Caption_2_in_5,
    main_Caption_2_in_6,
    main_Caption_2_in_7,
    main_Caption_2_in_8,
    main_Caption_2_in_9
    ) [instance: 2, cache: 1];
    // 
    // node Receiver[11]: x = 60, y = 80, inputs = 1, label = u
    // page group: Vectors
    //
main_Receiver_11_out_1[cache: 0] = u;
    // 
    // node Scalar[2]: x = 140, y = 20, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_2"
    // input[2]: defaulting = 1, visible = 1, type = 67108863, value = NULL
    // input[3]: defaulting = 0, visible = 0, type = 5, value = -0.9 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -3.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 3.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = -0.9 
    // page group: Vectors
    //
    // 
    // node Compute[16]: x = 140, y = 100, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "10**$0"
    // page group: Vectors
    // expression: value = 10**d
    // name[2]: value = d
    //
main_Compute_16_out_1 = 
    Compute(
    main_Compute_16_in_1,
    main_Scalar_2_out_1
    ) [instance: 16, cache: 1];
    // 
    // node Glyph[1]: x = 60, y = 180, inputs = 7, label = Glyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "needle2D"
    // page group: Vectors
    //
main_Glyph_1_out_1 = 
    Glyph(
    main_Receiver_11_out_1,
    main_Glyph_1_in_2,
    main_Glyph_1_in_3,
    main_Compute_16_out_1,
    main_Glyph_1_in_5,
    main_Glyph_1_in_6,
    main_Glyph_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node ClipBox[1]: x = 260, y = 260, inputs = 2, label = ClipBox
    // input[2]: defaulting = 0, visible = 1, type = 16777224, value = {[-2,-2,0.45],[2,2,0.55]}
    // page group: Vectors
    //
main_ClipBox_1_out_1 = 
    ClipBox(
    main_Glyph_1_out_1,
    main_ClipBox_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Toggle[6]: x = 20, y = 340, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_6"
    // input[2]: defaulting = 0, visible = 0, type = 29, value =  0  
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 0, visible = 1, type = 29, value =  1  
    // input[5]: defaulting = 0, visible = 1, type = 29, value =  0  
    // output[1]: visible = 1, type = 29, value =  0  
    // page group: ProcScalar
    // toggle : 0
    //
main_Toggle_6_out_1[cache: 2] = 
    Toggle(
    main_Toggle_6_in_1,
    main_Toggle_6_in_2,
    main_Toggle_6_in_3,
    main_Toggle_6_in_4,
    main_Toggle_6_in_5,
    main_Toggle_6_in_6
    ) [instance: 6, cache: 1];
    // 
    // node Receiver[44]: x = 320, y = 40, inputs = 1, label = scalar_field
    // page group: ProcScalar
    //
main_Receiver_44_out_1[cache: 0] = scalar_field;
    // 
    // node Scalar[3]: x = 460, y = 80, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_3"
    // input[2]: defaulting = 1, visible = 1, type = 67108863, value = NULL
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 1.0
    // page group: ProcScalar
    //
    // 
    // node Scalar[6]: x = 760, y = 140, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_6"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.0
    // page group: ProcScalar
    //
    // 
    // node Compute[19]: x = 240, y = 120, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "max(min($0,$1),$2)"
    // page group: ProcScalar
    // expression: value = max(min(w,w_max),w_min)
    // name[2]: value = w
    // name[3]: value = w_max
    // name[4]: value = w_min
    //
main_Compute_19_out_1 = 
    Compute(
    main_Compute_19_in_1,
    main_Receiver_44_out_1,
    main_Scalar_3_out_1,
    main_Scalar_6_out_1
    ) [instance: 19, cache: 1];
    // 
    // node ShowConnections[1]: x = 20, y = 220, inputs = 1, label = ShowConnections
    // page group: ProcScalar
    //
main_ShowConnections_1_out_1 = 
    ShowConnections(
    main_Compute_19_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Switch[13]: x = 100, y = 380, inputs = 2, label = Switch
    // page group: ProcScalar
    //
main_Switch_13_out_1 = 
    Switch(
    main_Toggle_6_out_1,
    main_ShowConnections_1_out_1
    ) [instance: 13, cache: 1];
    // 
    // node Receiver[51]: x = 580, y = 20, inputs = 1, label = seq_step
    // page group: ProcScalar
    //
main_Receiver_51_out_1[cache: 0] = seq_step;
    // 
    // node Compute[37]: x = 580, y = 120, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[0, 0, float($0)/100.0]"
    // page group: ProcScalar
    // expression: value = [0, 0, float(n)/100.0]
    // name[2]: value = n
    //
main_Compute_37_out_1 = 
    Compute(
    main_Compute_37_in_1,
    main_Receiver_51_out_1
    ) [instance: 37, cache: 1];
    // 
    // node MapToPlane[3]: x = 440, y = 260, inputs = 3, label = MapToPlane
    // input[2]: defaulting = 1, visible = 1, type = 8, value = [0  0 0.5]
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [0,0,1]
    // page group: ProcScalar
    //
main_MapToPlane_3_out_1 = 
    MapToPlane(
    main_Compute_19_out_1,
    main_Compute_37_out_1,
    main_MapToPlane_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Collect[4]: x = 440, y = 360, inputs = 4, label = Collect
    // page group: ProcScalar
    //
main_Collect_4_out_1 = 
    Collect(
    main_Collect_4_in_1,
    main_MapToPlane_3_out_1,
    main_Collect_4_in_3,
    main_Collect_4_in_4
    ) [instance: 4, cache: 1];
    // 
    // node Colormap[1]: x = 840, y = 380, inputs = 19, label = Colormap
    // input[1]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.666667] [1.0 0.0] }
    // input[2]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[4]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[5]: defaulting = 0, visible = 0, type = 32, value = "Colormap_1"
    // input[7]: defaulting = 1, visible = 1, type = 5, value = 0.0
    // input[8]: defaulting = 1, visible = 1, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 1, type = 1, value = 20
    // input[12]: defaulting = 0, visible = 0, type = 16777221, value = { 0.0 1.0 }
    // input[13]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[14]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[15]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[16]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[17]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // input[18]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[19]: visible = 1
    // page group: ProcScalar
    // window: position = (0.0771,0.2070), size = 0.6348x0.5859
    //
main_Colormap_1_out_1[cache: 2],
main_Colormap_1_out_2[cache: 2] = 
    Colormap(
    main_Colormap_1_in_1,
    main_Colormap_1_in_2,
    main_Colormap_1_in_3,
    main_Colormap_1_in_4,
    main_Colormap_1_in_5,
    main_Colormap_1_in_6,
    main_Scalar_6_out_1,
    main_Scalar_3_out_1,
    main_Colormap_1_in_9,
    main_Colormap_1_in_10,
    main_Colormap_1_in_11,
    main_Colormap_1_in_12,
    main_Colormap_1_in_13,
    main_Colormap_1_in_14,
    main_Colormap_1_in_15,
    main_Colormap_1_in_16,
    main_Colormap_1_in_17,
    main_Colormap_1_in_18,
    main_Colormap_1_in_19
    ) [instance: 1, cache: 1];
    // 
    // node Color[2]: x = 460, y = 440, inputs = 5, label = Color
    // input[2]: defaulting = 1, visible = 1, type = 32, value = "green"
    // input[3]: defaulting = 0, visible = 1, type = 5, value = 0.7
    // page group: ProcScalar
    //
main_Color_2_out_1 = 
    Color(
    main_Collect_4_out_1,
    main_Colormap_1_out_1,
    main_Color_2_in_3,
    main_Color_2_in_4,
    main_Color_2_in_5
    ) [instance: 2, cache: 1];
    // 
    // node ColorBar[2]: x = 580, y = 440, inputs = 16, label = ColorBar
    // input[1]: defaulting = 1, visible = 1, type = 2048, value = NULL
    // page group: ProcScalar
    //
main_ColorBar_2_out_1 = 
    ColorBar(
    main_Colormap_1_out_1,
    main_ColorBar_2_in_2,
    main_ColorBar_2_in_3,
    main_ColorBar_2_in_4,
    main_ColorBar_2_in_5,
    main_ColorBar_2_in_6,
    main_ColorBar_2_in_7,
    main_ColorBar_2_in_8,
    main_ColorBar_2_in_9,
    main_ColorBar_2_in_10,
    main_ColorBar_2_in_11,
    main_ColorBar_2_in_12,
    main_ColorBar_2_in_13,
    main_ColorBar_2_in_14,
    main_ColorBar_2_in_15,
    main_ColorBar_2_in_16
    ) [instance: 2, cache: 1];
    // 
    // node ShowBoundary[1]: x = 200, y = 220, inputs = 2, label = ShowBoundary
    // page group: ProcScalar
    //
main_ShowBoundary_1_out_1 = 
    ShowBoundary(
    main_Compute_19_out_1,
    main_ShowBoundary_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Color[3]: x = 220, y = 300, inputs = 5, label = Color
    // input[2]: defaulting = 1, visible = 1, type = 32, value = "green"
    // input[3]: defaulting = 0, visible = 1, type = 5, value = 0.2
    // page group: ProcScalar
    //
main_Color_3_out_1 = 
    Color(
    main_ShowBoundary_1_out_1,
    main_Color_3_in_2,
    main_Color_3_in_3,
    main_Color_3_in_4,
    main_Color_3_in_5
    ) [instance: 3, cache: 1];
    // 
    // node Collect[5]: x = 320, y = 440, inputs = 4, label = Collect
    // page group: ProcScalar
    //
main_Collect_5_out_1 = 
    Collect(
    main_Switch_13_out_1,
    main_Color_2_out_1,
    main_ColorBar_2_out_1,
    main_Color_3_out_1
    ) [instance: 5, cache: 1];
    // 
    // node ClipPlane[1]: x = 180, y = 520, inputs = 3, label = ClipPlane
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [0. -1 0.]
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [0 -1 0]
    // page group: ProcScalar
    //
main_ClipPlane_1_out_1 = 
    ClipPlane(
    main_Collect_5_out_1,
    main_ClipPlane_1_in_2,
    main_ClipPlane_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[16]: x = 400, y = 520, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_16"
    // input[2]: defaulting = 1, visible = 1, type = 67108863, value = NULL
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.0001
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.0001
    // page group: ProcScalar
    //
    // 
    // node Transmitter[35]: x = 400, y = 600, inputs = 1, label = y_cut_plane
    // page group: ProcScalar
    //
y_cut_plane = main_Scalar_16_out_1;
    // 
    // node Receiver[48]: x = 460, y = 60, inputs = 1, label = y_cut_plane
    // page group: Vectors
    //
main_Receiver_48_out_1[cache: 0] = y_cut_plane;
    // 
    // node Compute[35]: x = 460, y = 160, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[0, $0, 0]"
    // page group: Vectors
    // expression: value = [0, y, 0]
    // name[2]: value = y
    //
main_Compute_35_out_1 = 
    Compute(
    main_Compute_35_in_1,
    main_Receiver_48_out_1
    ) [instance: 35, cache: 1];
    // 
    // node ClipPlane[2]: x = 420, y = 280, inputs = 3, label = ClipPlane
    // input[2]: defaulting = 1, visible = 1, type = 8, value = [0. 0.09 0.]
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [0 -1 0]
    // page group: Vectors
    //
main_ClipPlane_2_out_1 = 
    ClipPlane(
    main_Glyph_1_out_1,
    main_Compute_35_out_1,
    main_ClipPlane_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[5]: x = 140, y = 600, inputs = 1, label = colored_scalar
    // page group: ProcScalar
    //
colored_scalar = main_Collect_5_out_1;
    // 
    // node Receiver[6]: x = 40, y = 160, inputs = 1, label = colored_scalar
    // page group: image
    //
main_Receiver_6_out_1[cache: 0] = colored_scalar;
    // 
    // node Toggle[1]: x = 40, y = 260, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_1"
    // input[2]: defaulting = 0, visible = 0, type = 29, value =  0  
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 0, visible = 1, type = 29, value =  1  
    // input[5]: defaulting = 0, visible = 1, type = 29, value =  0  
    // output[1]: visible = 1, type = 29, value =  0  
    // page group: Vectors
    // toggle : 0
    //
main_Toggle_1_out_1[cache: 2] = 
    Toggle(
    main_Toggle_1_in_1,
    main_Toggle_1_in_2,
    main_Toggle_1_in_3,
    main_Toggle_1_in_4,
    main_Toggle_1_in_5,
    main_Toggle_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Switch[7]: x = 100, y = 340, inputs = 2, label = Switch
    // page group: Vectors
    //
main_Switch_7_out_1 = 
    Switch(
    main_Toggle_1_out_1,
    main_ClipBox_1_out_1
    ) [instance: 7, cache: 1];
    // 
    // node Transmitter[34]: x = 100, y = 420, inputs = 1, label = vectors
    // page group: Vectors
    //
vectors = main_Switch_7_out_1;
    // 
    // node Receiver[47]: x = 160, y = 160, inputs = 1, label = vectors
    // page group: image
    //
main_Receiver_47_out_1[cache: 0] = vectors;
    // 
    // node Collect[2]: x = 160, y = 320, inputs = 5, label = Collect
    // page group: image
    //
main_Collect_2_out_1 = 
    Collect(
    main_Receiver_6_out_1,
    main_Receiver_47_out_1,
    main_Caption_2_out_1,
    main_Collect_2_in_4,
    main_Collect_2_in_5
    ) [instance: 2, cache: 1];
    // 
    // node Grid[1]: x = 80, y = 40, inputs = 4, label = Grid
    // input[1]: defaulting = 0, visible = 1, type = 8, value = [0.0475 0.0235]
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "rectangle"
    // input[3]: defaulting = 0, visible = 1, type = 16777224, value = {[0.09 0.] [0 0.02]}
    // input[4]: defaulting = 0, visible = 1, type = 16777217, value = {5 11}
    // page group: Streamlines
    //
main_Grid_1_out_1 = 
    Grid(
    main_Grid_1_in_1,
    main_Grid_1_in_2,
    main_Grid_1_in_3,
    main_Grid_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Grid[2]: x = 200, y = 20, inputs = 4, label = Grid
    // input[1]: defaulting = 0, visible = 1, type = 8, value = [0.012 0.043]
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "rectangle"
    // input[3]: defaulting = 0, visible = 1, type = 16777224, value = {[0.01 0.] [0 0.003]}
    // input[4]: defaulting = 0, visible = 1, type = 16777217, value = {3 5}
    // page group: Streamlines
    //
main_Grid_2_out_1 = 
    Grid(
    main_Grid_2_in_1,
    main_Grid_2_in_2,
    main_Grid_2_in_3,
    main_Grid_2_in_4
    ) [instance: 2, cache: 1];
    // 
    // node Collect[3]: x = 220, y = 120, inputs = 2, label = Collect
    // page group: Streamlines
    //
main_Collect_3_out_1 = 
    Collect(
    main_Grid_1_out_1,
    main_Grid_2_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Compute[8]: x = 200, y = 60, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.y"
    // page group: ProcVelocity
    // expression: value = u.y
    // name[2]: value = u
    //
main_Compute_8_out_1 = 
    Compute(
    main_Compute_8_in_1,
    main_Receiver_35_out_1
    ) [instance: 8, cache: 1];
    // 
    // node Receiver[14]: x = 20, y = 40, inputs = 1, label = u
    // page group: Streamlines
    //
main_Receiver_14_out_1[cache: 0] = u;
    // 
    // node Compute[9]: x = 40, y = 120, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.x-1,$0.y]"
    // page group: Streamlines
    // expression: value = [u.x-1,u.y]
    // name[2]: value = u
    //
main_Compute_9_out_1 = 
    Compute(
    main_Compute_9_in_1,
    main_Receiver_14_out_1
    ) [instance: 9, cache: 1];
    // 
    // node Scalar[1]: x = 320, y = 220, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_1"
    // input[2]: defaulting = 1, visible = 1, type = 67108863, value = NULL
    // input[3]: defaulting = 0, visible = 0, type = 5, value = -3.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -3.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 3.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = -3.0 
    // page group: Streamlines
    //
    // 
    // node Compute[15]: x = 280, y = 300, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "10**$0"
    // page group: Streamlines
    // expression: value = 10**d
    // name[2]: value = d
    //
main_Compute_15_out_1 = 
    Compute(
    main_Compute_15_in_1,
    main_Scalar_1_out_1
    ) [instance: 15, cache: 1];
    // 
    // node Scalar[5]: x = 340, y = 40, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_5"
    // input[2]: defaulting = 1, visible = 1, type = 67108863, value = NULL
    // input[3]: defaulting = 0, visible = 0, type = 5, value = -0.8 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -3.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 3.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = -0.8 
    // page group: Streamlines
    //
    // 
    // node Compute[23]: x = 320, y = 120, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "10**$0"
    // page group: Streamlines
    // expression: value = 10**d
    // name[2]: value = d
    //
main_Compute_23_out_1 = 
    Compute(
    main_Compute_23_in_1,
    main_Scalar_5_out_1
    ) [instance: 23, cache: 1];
    // 
    // node Integer[1]: x = 40, y = 20, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_1"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 40
    // input[5]: defaulting = 1, visible = 0, type = 1, value = -1000000
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1000000
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 40
    // page group: RotBalls
    //
    // 
    // node Compute[33]: x = 40, y = 100, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[1.0/float($0)]"
    // page group: RotBalls
    // expression: value = [1.0/float(n)]
    // name[2]: value = n
    //
main_Compute_33_out_1 = 
    Compute(
    main_Compute_33_in_1,
    main_Integer_1_out_1
    ) [instance: 33, cache: 1];
    // 
    // node List[1]: x = 140, y = 140, inputs = 2, label = List
    // page group: RotBalls
    //
main_List_1_out_1 = 
    List(
    main_Compute_33_out_1,
    main_List_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Construct[1]: x = 60, y = 220, inputs = 4, label = Construct
    // input[1]: defaulting = 0, visible = 1, type = 16777224, value = {[0.]}
    // input[2]: defaulting = 1, visible = 1, type = 16777224, value = {[0.05]}
    // input[3]: defaulting = 1, visible = 1, type = 1, value = 20
    // input[4]: defaulting = 0, visible = 1, type = 16777245, value = {0.0015}
    // page group: RotBalls
    //
main_Construct_1_out_1 = 
    Construct(
    main_Construct_1_in_1,
    main_List_1_out_1,
    main_Integer_1_out_1,
    main_Construct_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Extract[1]: x = 200, y = 280, inputs = 2, label = Extract
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: RotBalls
    //
main_Extract_1_out_1 = 
    Extract(
    main_Construct_1_out_1,
    main_Extract_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Receiver[43]: x = 300, y = 220, inputs = 1, label = seq_step
    // page group: RotBalls
    //
main_Receiver_43_out_1[cache: 0] = seq_step;
    // 
    // node Scalar[10]: x = 380, y = 160, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_10"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 40.0
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 40.0
    // page group: RotBalls
    //
    // 
    // node Scalar[11]: x = 380, y = 280, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_11"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 49.087
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 49.087
    // page group: RotBalls
    //
    // 
    // node Scalar[12]: x = 380, y = 360, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_12"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.001
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.001
    // page group: RotBalls
    //
    // 
    // node Compute[31]: x = 240, y = 380, inputs = 6, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "2*3.14159*$0+$2/$3*cos($3*$1*$4)"
    // page group: RotBalls
    // expression: value = 2*3.14159*xi+w0/w*cos(w*n*dt)
    // name[2]: value = xi
    // name[3]: value = n
    // name[4]: value = w0
    // name[5]: value = w
    // name[6]: value = dt
    //
main_Compute_31_out_1 = 
    Compute(
    main_Compute_31_in_1,
    main_Extract_1_out_1,
    main_Receiver_43_out_1,
    main_Scalar_10_out_1,
    main_Scalar_11_out_1,
    main_Scalar_12_out_1
    ) [instance: 31, cache: 1];
    // 
    // node Scalar[13]: x = 380, y = 440, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_13"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.08
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.08
    // page group: RotBalls
    //
    // 
    // node Compute[32]: x = 220, y = 500, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$1*cos($0), $1*sin($0),0.]"
    // page group: RotBalls
    // expression: value = [R*cos(phi), R*sin(phi),0.]
    // name[2]: value = phi
    // name[3]: value = R
    //
main_Compute_32_out_1 = 
    Compute(
    main_Compute_32_in_1,
    main_Compute_31_out_1,
    main_Scalar_13_out_1
    ) [instance: 32, cache: 1];
    // 
    // node Compute[34]: x = 320, y = 600, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[0, $0, 0]"
    // page group: ProcScalar
    // expression: value = [0, y, 0]
    // name[2]: value = y
    //
main_Compute_34_out_1 = 
    Compute(
    main_Compute_34_in_1,
    main_Scalar_16_out_1
    ) [instance: 34, cache: 1];
    // 
    // node Receiver[49]: x = 100, y = 20, inputs = 1, label = y_cut_plane
    // page group: ProcScalar
    //
main_Receiver_49_out_1[cache: 0] = y_cut_plane;
    // 
    // node Compute[36]: x = 120, y = 100, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[0, $0-0.0001, 0]"
    // page group: ProcScalar
    // expression: value = [0, y-0.0001, 0]
    // name[2]: value = y
    //
main_Compute_36_out_1 = 
    Compute(
    main_Compute_36_in_1,
    main_Receiver_49_out_1
    ) [instance: 36, cache: 1];
    // 
    // node Replace[1]: x = 40, y = 640, inputs = 4, label = Replace
    // input[3]: defaulting = 0, visible = 1, type = 32, value = NULL
    // input[4]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: RotBalls
    //
main_Replace_1_out_1 = 
    Replace(
    main_Compute_32_out_1,
    main_Construct_1_out_1,
    main_Replace_1_in_3,
    main_Replace_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Glyph[2]: x = 60, y = 740, inputs = 7, label = Glyph
    // input[1]: defaulting = 1, visible = 1, type = 67584, value = NULL
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "sphere"
    // input[4]: defaulting = 0, visible = 1, type = 5, value = 1.0
    // input[5]: defaulting = 0, visible = 1, type = 5, value = 1.0
    // page group: RotBalls
    //
main_Glyph_2_out_1 = 
    Glyph(
    main_Replace_1_out_1,
    main_Glyph_2_in_2,
    main_Glyph_2_in_3,
    main_Glyph_2_in_4,
    main_Glyph_2_in_5,
    main_Glyph_2_in_6,
    main_Glyph_2_in_7
    ) [instance: 2, cache: 1];
    // 
    // node Image[6]: x = 180, y = 440, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_6"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [0.510455 0.487101 0.492487]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [3.08541 2.64132 4.15586]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 2.18441
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 1000
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.697
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [-0.262904 0.901015 -0.34504]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 24.7932
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[20]: defaulting = 0, visible = 1, type = 64, value = NULL
    // input[21]: defaulting = 1, visible = 0, type = 3, value = 1
    // input[25]: defaulting = 0, visible = 0, type = 32, value = "tank"
    // input[26]: defaulting = 0, visible = 0, type = 32, value = "yuv"
    // input[27]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[28]: defaulting = 0, visible = 0, type = 5, value = 0.75
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "none"
    // page group: image
    // depth: value = 16
    // window: position = (0.0000,0.0000), size = 0.9902x0.9648
    // internal caching: 1
    //
main_Image_6_out_1,
main_Image_6_out_2,
main_Image_6_out_3 = 
    Image(
    main_Image_6_in_1,
    main_Collect_2_out_1,
    main_Image_6_in_3,
    main_Image_6_in_4,
    main_Image_6_in_5,
    main_Image_6_in_6,
    main_Image_6_in_7,
    main_Image_6_in_8,
    main_Image_6_in_9,
    main_Image_6_in_10,
    main_Image_6_in_11,
    main_Image_6_in_12,
    main_Image_6_in_13,
    main_Image_6_in_14,
    main_Image_6_in_15,
    main_Image_6_in_16,
    main_Image_6_in_17,
    main_Image_6_in_18,
    main_Image_6_in_19,
    main_Image_6_in_20,
    main_Image_6_in_21,
    main_Image_6_in_22,
    main_Image_6_in_23,
    main_Image_6_in_24,
    main_Image_6_in_25,
    main_Image_6_in_26,
    main_Image_6_in_27,
    main_Image_6_in_28,
    main_Image_6_in_29,
    main_Image_6_in_30,
    main_Image_6_in_31,
    main_Image_6_in_32,
    main_Image_6_in_33,
    main_Image_6_in_34,
    main_Image_6_in_35,
    main_Image_6_in_36,
    main_Image_6_in_37,
    main_Image_6_in_38,
    main_Image_6_in_39,
    main_Image_6_in_40,
    main_Image_6_in_41,
    main_Image_6_in_42,
    main_Image_6_in_43,
    main_Image_6_in_44,
    main_Image_6_in_45,
    main_Image_6_in_46,
    main_Image_6_in_47,
    main_Image_6_in_48,
    main_Image_6_in_49
    ) [instance: 6, cache: 1];
    // 
    // node Light[1]: x = 260, y = 0, inputs = 3, label = Light
    // input[1]: defaulting = 0, visible = 1, type = 8, value = [0 10 5]
    // input[2]: defaulting = 1, visible = 1, type = 8, value = NULL
    // input[3]: defaulting = 0, visible = 1, type = 3, value = 0
    // page group: image
    //
main_Light_1_out_1 = 
    Light(
    main_Light_1_in_1,
    main_Light_1_in_2,
    main_Light_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Print[3]: x = 420, y = 600, inputs = 3, label = Print
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "rd"
    // page group: RotBalls
    //
    Print(
    main_Extract_1_out_1,
    main_Print_3_in_2,
    main_Print_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Toggle[3]: x = 40, y = 260, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_3"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 1
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 1
    // page group: ScalarGrad
    // toggle : 1
    //
    // 
    // node Switch[10]: x = 160, y = 300, inputs = 2, label = Switch
    // page group: ScalarGrad
    //
main_Switch_10_out_1 = 
    Switch(
    main_Toggle_3_out_1,
    main_AutoGlyph_3_out_1
    ) [instance: 10, cache: 1];
    // 
    // node Transmitter[22]: x = 60, y = 360, inputs = 1, label = scalar_grad
    // page group: ScalarGrad
    //
scalar_grad = main_Switch_10_out_1;
    // 
    // node Receiver[32]: x = 80, y = 80, inputs = 1, label = scalar_grad
    // page group: image
    //
main_Receiver_32_out_1[cache: 0] = scalar_grad;
    // 
    // node Transmitter[31]: x = 100, y = 820, inputs = 1, label = ball
    // page group: RotBalls
    //
ball = main_Glyph_2_out_1;
    // 
    // node Receiver[42]: x = 40, y = 240, inputs = 1, label = ball
    // page group: image
    //
main_Receiver_42_out_1[cache: 0] = ball;
    // 
    // node Toggle[2]: x = 60, y = 280, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_2"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 0, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 0, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Streamlines
    // toggle : 0
    //
main_Toggle_2_out_1[cache: 2] = 
    Toggle(
    main_Toggle_2_in_1,
    main_Toggle_2_in_2,
    main_Toggle_2_in_3,
    main_Toggle_2_in_4,
    main_Toggle_2_in_5,
    main_Toggle_2_in_6
    ) [instance: 2, cache: 1];
    // 
    // node Streamline[1]: x = 100, y = 200, inputs = 7, label = Streamline
    // input[2]: defaulting = 1, visible = 1, type = 16777224, value = {[2 0]}
    // input[4]: defaulting = 1, visible = 1, type = 5, value = 0.0001
    // input[7]: defaulting = 1, visible = 1, type = 29, value = 1
    // page group: Streamlines
    //
main_Streamline_1_out_1 = 
    Streamline(
    main_Compute_9_out_1,
    main_Collect_3_out_1,
    main_Streamline_1_in_3,
    main_Streamline_1_in_4,
    main_Streamline_1_in_5,
    main_Streamline_1_in_6,
    main_Compute_23_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Translate[1]: x = 160, y = 280, inputs = 2, label = Translate
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [0 0 1]
    // page group: Streamlines
    //
main_Translate_1_out_1 = 
    Translate(
    main_Streamline_1_out_1,
    main_Translate_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Tube[1]: x = 180, y = 360, inputs = 4, label = Tube
    // input[2]: defaulting = 1, visible = 1, type = 5, value = 0.0005
    // page group: Streamlines
    //
main_Tube_1_out_1 = 
    Tube(
    main_Translate_1_out_1,
    main_Compute_15_out_1,
    main_Tube_1_in_3,
    main_Tube_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Switch[6]: x = 80, y = 400, inputs = 2, label = Switch
    // page group: Streamlines
    //
main_Switch_6_out_1 = 
    Switch(
    main_Toggle_2_out_1,
    main_Tube_1_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Transmitter[33]: x = 140, y = 500, inputs = 1, label = streamlines
    // page group: Streamlines
    //
streamlines = main_Switch_6_out_1;
    // 
    // node Receiver[46]: x = 20, y = 320, inputs = 1, label = streamlines
    // page group: image
    //
main_Receiver_46_out_1[cache: 0] = streamlines;
    // 
    // node RubberSheet[1]: x = 700, y = 340, inputs = 4, label = RubberSheet
    // input[2]: defaulting = 0, visible = 1, type = 5, value = 0.01
    // page group: ProcScalar
    //
main_RubberSheet_1_out_1 = 
    RubberSheet(
    main_MapToPlane_3_out_1,
    main_RubberSheet_1_in_2,
    main_RubberSheet_1_in_3,
    main_RubberSheet_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[11]: x = 240, y = 180, inputs = 1, label = v
    // page group: ProcVelocity
    //
v = main_Compute_8_out_1;
    // 
    // node Transmitter[28]: x = 320, y = 200, inputs = 1, label = pf_step
    // page group: import
    //
pf_step = main_ExtProgImport_1_out_3;
    // 
    // node Transmitter[29]: x = 220, y = 160, inputs = 1, label = abs_u
    // page group: Selectscalar
    //
abs_u = main_Compute_29_out_1;
// network: end of macro body
CacheScene(main_Image_6_in_1, main_Image_6_out_1, main_Image_6_out_2);
}
main_AmbientLight_1_in_1 = [0.01 0.01 0.01];
main_Toggle_4_in_1 = "Toggle_4";
main_Toggle_4_in_2 =  2  ;
main_Toggle_4_in_3 = 0;
main_Toggle_4_in_4 =  1  ;
main_Toggle_4_in_5 =  2  ;
main_Toggle_4_in_6 = NULL;
main_Toggle_4_out_1 =  2  ;
main_Selector_1_in_1 = "Selector_1";
main_Selector_1_in_2 = "log(abs(vort))" ;
main_Selector_1_in_3 = 4 ;
main_Selector_1_in_4 = NULL;
main_Selector_1_in_5 = NULL;
main_Selector_1_in_6 = NULL;
main_Selector_1_in_7 = NULL;
main_Selector_1_out_1 = 4 ;
main_Selector_1_out_2 = "log(abs(vort))" ;
main_ExtProgImport_1_in_1 = 1;
main_ExtProgImport_1_in_2 = "@geronimo";
main_ExtProgImport_1_in_3 = 5314;
main_ExtProgImport_1_in_4 = NULL;
main_ExtProgImport_1_in_5 = 0;
main_ExtProgImport_1_in_6 = "cubcav.state";
main_ExtProgImport_1_in_7 = NULL;
main_ExtProgImport_1_out_2 = NULL;
main_ExtProgImport_1_out_3 = NULL;
main_Select_7_in_2 = "fluid_u";
main_Select_7_in_3 = NULL;
main_Select_7_out_1 = NULL;
main_Transmitter_27_out_1 = NULL;
main_Receiver_38_out_1 = NULL;
main_Compute_29_in_1 = "mag($0)";
main_Compute_29_out_1 = NULL;
main_Select_9_in_2 = "fluid_p";
main_Select_9_in_3 = NULL;
main_Select_9_out_1 = NULL;
main_Transmitter_26_out_1 = NULL;
main_Receiver_37_out_1 = NULL;
main_Receiver_35_out_1 = NULL;
main_DivCurl_1_in_2 = NULL;
main_DivCurl_1_out_2 = NULL;
main_Compute_30_in_1 = "mag($0)";
main_Compute_30_out_1 = NULL;
main_Transmitter_9_out_1 = NULL;
main_Receiver_39_out_1 = NULL;
main_Compute_10_in_1 = "log10(max(mag($0),0.01))";
main_Compute_10_out_1 = NULL;
main_Transmitter_10_out_1 = NULL;
main_Receiver_40_out_1 = NULL;
main_Switch_5_out_1 = NULL;
main_Scalar_15_in_1 = "Scalar_15";
main_Scalar_15_in_2 = NULL;
main_Scalar_15_in_3 = 0.8;
main_Scalar_15_in_4 = NULL;
main_Scalar_15_in_5 = NULL;
main_Scalar_15_in_6 = NULL;
main_Scalar_15_in_7 = NULL;
main_Scalar_15_in_8 = NULL;
main_Scalar_15_in_9 = NULL;
main_Scalar_15_in_10 = NULL;
main_Scalar_15_in_11 = NULL;
main_Scalar_15_out_1 = 0.8;
main_Isolate_1_out_1 = NULL;
main_Switch_11_out_1 = NULL;
main_Transmitter_32_out_1 = NULL;
main_Receiver_45_out_1 = NULL;
main_Gradient_3_in_2 = NULL;
main_Gradient_3_out_1 = NULL;
main_AutoGlyph_3_in_2 = "rocket";
main_AutoGlyph_3_in_3 = 0.1;
main_AutoGlyph_3_in_4 = 10.0;
main_AutoGlyph_3_in_5 = NULL;
main_AutoGlyph_3_in_6 = 0.0;
main_AutoGlyph_3_in_7 = 0.2;
main_AutoGlyph_3_out_1 = NULL;
main_Sequencer_1_in_1 = "Sequencer_1";
main_Sequencer_1_in_2 = NULL;
main_Sequencer_1_in_3 = NULL;
main_Sequencer_1_in_4 = 0;
main_Sequencer_1_in_5 = 3100;
main_Sequencer_1_in_6 = NULL;
main_Sequencer_1_in_7 = { 0 3100 1 0 100 1 };
main_Sequencer_1_out_1 = NULL;

@startframe = 0;
@nextframe  = @startframe;
@endframe   = 100;
@deltaframe = 1;
main_Transmitter_30_out_1 = NULL;
main_Receiver_36_out_1 = NULL;
main_Transmitter_21_out_1 = NULL;
main_Receiver_30_out_1 = NULL;
main_Format_1_in_1 = "Step %d, Color=%s";
main_Format_1_out_1 = NULL;
main_Caption_2_in_2 = NULL;
main_Caption_2_in_3 = NULL;
main_Caption_2_in_4 = NULL;
main_Caption_2_in_5 = NULL;
main_Caption_2_in_6 = NULL;
main_Caption_2_in_7 = NULL;
main_Caption_2_in_8 = NULL;
main_Caption_2_in_9 = NULL;
main_Caption_2_out_1 = NULL;
main_Receiver_11_out_1 = NULL;
main_Scalar_2_in_1 = "Scalar_2";
main_Scalar_2_in_2 = NULL;
main_Scalar_2_in_3 = -0.9 ;
main_Scalar_2_in_4 = NULL;
main_Scalar_2_in_5 = NULL;
main_Scalar_2_in_6 = NULL;
main_Scalar_2_in_7 = NULL;
main_Scalar_2_in_8 = NULL;
main_Scalar_2_in_9 = NULL;
main_Scalar_2_in_10 = NULL;
main_Scalar_2_in_11 = NULL;
main_Scalar_2_out_1 = -0.9 ;
main_Compute_16_in_1 = "10**$0";
main_Compute_16_out_1 = NULL;
main_Glyph_1_in_2 = "needle2D";
main_Glyph_1_in_3 = NULL;
main_Glyph_1_in_5 = NULL;
main_Glyph_1_in_6 = NULL;
main_Glyph_1_in_7 = NULL;
main_Glyph_1_out_1 = NULL;
main_ClipBox_1_in_2 = {[-2,-2,0.45],[2,2,0.55]};
main_ClipBox_1_out_1 = NULL;
main_Toggle_6_in_1 = "Toggle_6";
main_Toggle_6_in_2 =  0  ;
main_Toggle_6_in_3 = 0;
main_Toggle_6_in_4 =  1  ;
main_Toggle_6_in_5 =  0  ;
main_Toggle_6_in_6 = NULL;
main_Toggle_6_out_1 =  0  ;
main_Receiver_44_out_1 = NULL;
main_Scalar_3_in_1 = "Scalar_3";
main_Scalar_3_in_2 = NULL;
main_Scalar_3_in_3 = 1.0;
main_Scalar_3_in_4 = NULL;
main_Scalar_3_in_5 = NULL;
main_Scalar_3_in_6 = NULL;
main_Scalar_3_in_7 = NULL;
main_Scalar_3_in_8 = NULL;
main_Scalar_3_in_9 = NULL;
main_Scalar_3_in_10 = NULL;
main_Scalar_3_in_11 = NULL;
main_Scalar_3_out_1 = 1.0;
main_Scalar_6_in_1 = "Scalar_6";
main_Scalar_6_in_2 = NULL;
main_Scalar_6_in_3 = 0.0;
main_Scalar_6_in_4 = NULL;
main_Scalar_6_in_5 = NULL;
main_Scalar_6_in_6 = NULL;
main_Scalar_6_in_7 = NULL;
main_Scalar_6_in_8 = NULL;
main_Scalar_6_in_9 = NULL;
main_Scalar_6_in_10 = NULL;
main_Scalar_6_in_11 = NULL;
main_Scalar_6_out_1 = 0.0;
main_Compute_19_in_1 = "max(min($0,$1),$2)";
main_Compute_19_out_1 = NULL;
main_ShowConnections_1_out_1 = NULL;
main_Switch_13_out_1 = NULL;
main_Receiver_51_out_1 = NULL;
main_Compute_37_in_1 = "[0, 0, float($0)/100.0]";
main_Compute_37_out_1 = NULL;
main_MapToPlane_3_in_3 = [0,0,1];
main_MapToPlane_3_out_1 = NULL;
main_Collect_4_in_1 = NULL;
main_Collect_4_in_3 = NULL;
main_Collect_4_in_4 = NULL;
main_Collect_4_out_1 = NULL;
main_Colormap_1_in_1 = { [0.0 0.666667] [1.0 0.0] };
main_Colormap_1_in_2 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_1_in_3 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_1_in_4 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_1_in_5 = "Colormap_1";
main_Colormap_1_in_6 = NULL;
main_Colormap_1_in_9 = NULL;
main_Colormap_1_in_10 = NULL;
main_Colormap_1_in_11 = NULL;
main_Colormap_1_in_12 = { 0.0 1.0 };
main_Colormap_1_in_13 = NULL;
main_Colormap_1_in_14 = NULL;
main_Colormap_1_in_15 = NULL;
main_Colormap_1_in_16 = NULL;
main_Colormap_1_in_17 = 0.0;
main_Colormap_1_in_18 = 1.0;
main_Colormap_1_in_19 = NULL;
main_Colormap_1_out_1 = NULL;
main_Color_2_in_3 = 0.7;
main_Color_2_in_4 = NULL;
main_Color_2_in_5 = NULL;
main_Color_2_out_1 = NULL;
main_ColorBar_2_in_2 = NULL;
main_ColorBar_2_in_3 = NULL;
main_ColorBar_2_in_4 = NULL;
main_ColorBar_2_in_5 = NULL;
main_ColorBar_2_in_6 = NULL;
main_ColorBar_2_in_7 = NULL;
main_ColorBar_2_in_8 = NULL;
main_ColorBar_2_in_9 = NULL;
main_ColorBar_2_in_10 = NULL;
main_ColorBar_2_in_11 = NULL;
main_ColorBar_2_in_12 = NULL;
main_ColorBar_2_in_13 = NULL;
main_ColorBar_2_in_14 = NULL;
main_ColorBar_2_in_15 = NULL;
main_ColorBar_2_in_16 = NULL;
main_ColorBar_2_out_1 = NULL;
main_ShowBoundary_1_in_2 = NULL;
main_ShowBoundary_1_out_1 = NULL;
main_Color_3_in_2 = NULL;
main_Color_3_in_3 = 0.2;
main_Color_3_in_4 = NULL;
main_Color_3_in_5 = NULL;
main_Color_3_out_1 = NULL;
main_Collect_5_out_1 = NULL;
main_ClipPlane_1_in_2 = [0. -1 0.];
main_ClipPlane_1_in_3 = [0 -1 0];
main_Scalar_16_in_1 = "Scalar_16";
main_Scalar_16_in_2 = NULL;
main_Scalar_16_in_3 = 0.0001;
main_Scalar_16_in_4 = NULL;
main_Scalar_16_in_5 = NULL;
main_Scalar_16_in_6 = NULL;
main_Scalar_16_in_7 = NULL;
main_Scalar_16_in_8 = NULL;
main_Scalar_16_in_9 = NULL;
main_Scalar_16_in_10 = NULL;
main_Scalar_16_in_11 = NULL;
main_Scalar_16_out_1 = 0.0001;
main_Transmitter_35_out_1 = NULL;
main_Receiver_48_out_1 = NULL;
main_Compute_35_in_1 = "[0, $0, 0]";
main_Compute_35_out_1 = NULL;
main_ClipPlane_2_in_3 = [0 -1 0];
main_Transmitter_5_out_1 = NULL;
main_Receiver_6_out_1 = NULL;
main_Toggle_1_in_1 = "Toggle_1";
main_Toggle_1_in_2 =  0  ;
main_Toggle_1_in_3 = 0;
main_Toggle_1_in_4 =  1  ;
main_Toggle_1_in_5 =  0  ;
main_Toggle_1_in_6 = NULL;
main_Toggle_1_out_1 =  0  ;
main_Switch_7_out_1 = NULL;
main_Transmitter_34_out_1 = NULL;
main_Receiver_47_out_1 = NULL;
main_Collect_2_in_4 = NULL;
main_Collect_2_in_5 = NULL;
main_Collect_2_out_1 = NULL;
main_Grid_1_in_1 = [0.0475 0.0235];
main_Grid_1_in_2 = "rectangle";
main_Grid_1_in_3 = {[0.09 0.] [0 0.02]};
main_Grid_1_in_4 = {5 11};
main_Grid_1_out_1 = NULL;
main_Grid_2_in_1 = [0.012 0.043];
main_Grid_2_in_2 = "rectangle";
main_Grid_2_in_3 = {[0.01 0.] [0 0.003]};
main_Grid_2_in_4 = {3 5};
main_Grid_2_out_1 = NULL;
main_Collect_3_out_1 = NULL;
main_Compute_8_in_1 = "$0.y";
main_Compute_8_out_1 = NULL;
main_Receiver_14_out_1 = NULL;
main_Compute_9_in_1 = "[$0.x-1,$0.y]";
main_Compute_9_out_1 = NULL;
main_Scalar_1_in_1 = "Scalar_1";
main_Scalar_1_in_2 = NULL;
main_Scalar_1_in_3 = -3.0 ;
main_Scalar_1_in_4 = NULL;
main_Scalar_1_in_5 = NULL;
main_Scalar_1_in_6 = NULL;
main_Scalar_1_in_7 = NULL;
main_Scalar_1_in_8 = NULL;
main_Scalar_1_in_9 = NULL;
main_Scalar_1_in_10 = NULL;
main_Scalar_1_in_11 = NULL;
main_Scalar_1_out_1 = -3.0 ;
main_Compute_15_in_1 = "10**$0";
main_Compute_15_out_1 = NULL;
main_Scalar_5_in_1 = "Scalar_5";
main_Scalar_5_in_2 = NULL;
main_Scalar_5_in_3 = -0.8 ;
main_Scalar_5_in_4 = NULL;
main_Scalar_5_in_5 = NULL;
main_Scalar_5_in_6 = NULL;
main_Scalar_5_in_7 = NULL;
main_Scalar_5_in_8 = NULL;
main_Scalar_5_in_9 = NULL;
main_Scalar_5_in_10 = NULL;
main_Scalar_5_in_11 = NULL;
main_Scalar_5_out_1 = -0.8 ;
main_Compute_23_in_1 = "10**$0";
main_Compute_23_out_1 = NULL;
main_Integer_1_in_1 = "Integer_1";
main_Integer_1_in_2 = NULL;
main_Integer_1_in_3 = 40;
main_Integer_1_in_4 = NULL;
main_Integer_1_in_5 = NULL;
main_Integer_1_in_6 = NULL;
main_Integer_1_in_7 = NULL;
main_Integer_1_in_8 = NULL;
main_Integer_1_in_9 = NULL;
main_Integer_1_in_10 = NULL;
main_Integer_1_in_11 = NULL;
main_Integer_1_out_1 = 40;
main_Compute_33_in_1 = "[1.0/float($0)]";
main_Compute_33_out_1 = NULL;
main_List_1_in_2 = NULL;
main_List_1_out_1 = NULL;
main_Construct_1_in_1 = {[0.]};
main_Construct_1_in_4 = {0.0015};
main_Construct_1_out_1 = NULL;
main_Extract_1_in_2 = "positions";
main_Extract_1_out_1 = NULL;
main_Receiver_43_out_1 = NULL;
main_Scalar_10_in_1 = "Scalar_10";
main_Scalar_10_in_2 = NULL;
main_Scalar_10_in_3 = 40.0;
main_Scalar_10_in_4 = NULL;
main_Scalar_10_in_5 = NULL;
main_Scalar_10_in_6 = NULL;
main_Scalar_10_in_7 = NULL;
main_Scalar_10_in_8 = NULL;
main_Scalar_10_in_9 = NULL;
main_Scalar_10_in_10 = NULL;
main_Scalar_10_in_11 = NULL;
main_Scalar_10_out_1 = 40.0;
main_Scalar_11_in_1 = "Scalar_11";
main_Scalar_11_in_2 = NULL;
main_Scalar_11_in_3 = 49.087;
main_Scalar_11_in_4 = NULL;
main_Scalar_11_in_5 = NULL;
main_Scalar_11_in_6 = NULL;
main_Scalar_11_in_7 = NULL;
main_Scalar_11_in_8 = NULL;
main_Scalar_11_in_9 = NULL;
main_Scalar_11_in_10 = NULL;
main_Scalar_11_in_11 = NULL;
main_Scalar_11_out_1 = 49.087;
main_Scalar_12_in_1 = "Scalar_12";
main_Scalar_12_in_2 = NULL;
main_Scalar_12_in_3 = 0.001;
main_Scalar_12_in_4 = NULL;
main_Scalar_12_in_5 = NULL;
main_Scalar_12_in_6 = NULL;
main_Scalar_12_in_7 = NULL;
main_Scalar_12_in_8 = NULL;
main_Scalar_12_in_9 = NULL;
main_Scalar_12_in_10 = NULL;
main_Scalar_12_in_11 = NULL;
main_Scalar_12_out_1 = 0.001;
main_Compute_31_in_1 = "2*3.14159*$0+$2/$3*cos($3*$1*$4)";
main_Compute_31_out_1 = NULL;
main_Scalar_13_in_1 = "Scalar_13";
main_Scalar_13_in_2 = NULL;
main_Scalar_13_in_3 = 0.08;
main_Scalar_13_in_4 = NULL;
main_Scalar_13_in_5 = NULL;
main_Scalar_13_in_6 = NULL;
main_Scalar_13_in_7 = NULL;
main_Scalar_13_in_8 = NULL;
main_Scalar_13_in_9 = NULL;
main_Scalar_13_in_10 = NULL;
main_Scalar_13_in_11 = NULL;
main_Scalar_13_out_1 = 0.08;
main_Compute_32_in_1 = "[$1*cos($0), $1*sin($0),0.]";
main_Compute_32_out_1 = NULL;
main_Compute_34_in_1 = "[0, $0, 0]";
main_Receiver_49_out_1 = NULL;
main_Compute_36_in_1 = "[0, $0-0.0001, 0]";
main_Replace_1_in_3 = NULL;
main_Replace_1_in_4 = "positions";
main_Replace_1_out_1 = NULL;
main_Glyph_2_in_2 = "sphere";
main_Glyph_2_in_3 = NULL;
main_Glyph_2_in_4 = 1.0;
main_Glyph_2_in_5 = 1.0;
main_Glyph_2_in_6 = NULL;
main_Glyph_2_in_7 = NULL;
main_Glyph_2_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_6_in_1 = "Image_6";
main_Image_6_in_3 = "X16,,";
main_Image_6_in_4 = 1;
main_Image_6_in_5 = [0.510455 0.487101 0.492487];
main_Image_6_in_6 = [3.08541 2.64132 4.15586];
main_Image_6_in_7 = 2.18441;
main_Image_6_in_8 = 1000;
main_Image_6_in_9 = 0.697;
main_Image_6_in_10 = [-0.262904 0.901015 -0.34504];
main_Image_6_in_11 = NULL;
main_Image_6_in_12 = 0;
main_Image_6_in_13 = NULL;
main_Image_6_in_14 = 1;
main_Image_6_in_15 = NULL;
main_Image_6_in_16 = NULL;
main_Image_6_in_17 = NULL;
main_Image_6_in_18 = NULL;
main_Image_6_in_19 = 0;
main_Image_6_in_20 = NULL;
main_Image_6_in_21 = NULL;
main_Image_6_in_22 = NULL;
main_Image_6_in_23 = NULL;
main_Image_6_in_25 = "tank";
main_Image_6_in_26 = "yuv";
main_Image_6_in_27 = 640;
main_Image_6_in_28 = 0.75;
main_Image_6_in_29 = NULL;
main_Image_6_in_30 = NULL;
main_Image_6_in_31 = NULL;
main_Image_6_in_32 = NULL;
main_Image_6_in_33 = NULL;
main_Image_6_in_34 = NULL;
main_Image_6_in_35 = NULL;
main_Image_6_in_36 = NULL;
main_Image_6_in_37 = NULL;
main_Image_6_in_38 = NULL;
main_Image_6_in_39 = NULL;
main_Image_6_in_40 = NULL;
main_Image_6_in_41 = "none";
main_Image_6_in_42 = NULL;
main_Image_6_in_43 = NULL;
main_Image_6_in_44 = NULL;
main_Image_6_in_45 = NULL;
main_Image_6_in_46 = NULL;
main_Image_6_in_47 = NULL;
main_Image_6_in_48 = NULL;
main_Image_6_in_49 = NULL;
main_Light_1_in_1 = [0 10 5];
main_Light_1_in_2 = NULL;
main_Light_1_in_3 = 0;
main_Print_3_in_2 = "rd";
main_Print_3_in_3 = NULL;
main_Toggle_3_in_1 = "Toggle_3";
main_Toggle_3_in_2 = 1;
main_Toggle_3_in_3 = 1;
main_Toggle_3_in_4 = NULL;
main_Toggle_3_in_5 = NULL;
main_Toggle_3_in_6 = NULL;
main_Toggle_3_out_1 = 1;
main_Switch_10_out_1 = NULL;
main_Transmitter_22_out_1 = NULL;
main_Transmitter_31_out_1 = NULL;
main_Toggle_2_in_1 = "Toggle_2";
main_Toggle_2_in_2 = 0;
main_Toggle_2_in_3 = 0;
main_Toggle_2_in_4 = 1;
main_Toggle_2_in_5 = 0;
main_Toggle_2_in_6 = NULL;
main_Toggle_2_out_1 = 0;
main_Streamline_1_in_3 = NULL;
main_Streamline_1_in_4 = NULL;
main_Streamline_1_in_5 = NULL;
main_Streamline_1_in_6 = NULL;
main_Streamline_1_out_1 = NULL;
main_Translate_1_in_2 = [0 0 1];
main_Translate_1_out_1 = NULL;
main_Tube_1_in_3 = NULL;
main_Tube_1_in_4 = NULL;
main_Tube_1_out_1 = NULL;
main_Switch_6_out_1 = NULL;
main_Transmitter_33_out_1 = NULL;
main_RubberSheet_1_in_2 = 0.01;
main_RubberSheet_1_in_3 = NULL;
main_RubberSheet_1_in_4 = NULL;
Executive("product version 4 2 0");
$sync

sequence main();
play;

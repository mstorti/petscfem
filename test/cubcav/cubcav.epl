# -*- mode: shell-script -*-
<:                              # starts ePerl block
#__TRANSCRIPT__
require "$ENV{'PETSCFEM_DIR'}/test/eperlini.pl";# Initializes ePerl 
require "math.pl";
# $conf = 'small';
$case = 'laplace' unless $case;
get_var_env2('job',undef);
$CASE = $case;
get_var_env2('N',10);
$nelem = $N**3.0;
$cs = 0.2*$nelem;		# desired chunk_size
$chunk_size = ($cs < 5000 ? 5000 : $cs > 40000 ? 40000 : $cs);
$hratio = 10;
$use_tetra = 1;
$maxits = 150;
$tol = 1e-7;
get_var_env2('subpart',350);
$subpart_entered = $subpart;
$subpart = ceil($subpart/$NP);
$iisd_subpart = $subpart;
$nu = 1e-5;
get_var_env2('nlay',1);
get_var_env2('isp_maxits',12);
#
#__END_TRANSCRIPT__
transcript("", qw(viscosity Dt));	# print variables on output
octave_export_vars(">data.m.tmp",qw(CASE U L N Re viscosity 
    h Co Dt hratio leaky tol use_prismatic use_tetra));
system "octave -qH mkmesh.m > mkmesh.output.tmp";
:>//                            # ends ePerl block

global_options

# <:pr('dx'):>
# <:pr('case'):>
# <:pr('subpart_entered'):>
# <:pr('NP'):>
# <:pr('subpart'):>
# <:pr('nlay'):>
ndim 3
nsave 10
nstep 10000
nsaverot 20
nfile 2000000
nrec 1
# initial_state "cubcav-steady-Re1000"
initial_state "outvector.out"
save_file_pattern "STEPS/cubcav.state_%d.tmp"

#  compact_profile_graph_chunk_size 40000
#  max_partgraph_vertices 5000
#  max_partgraph_vertices_proc 5000
chunk_size 40000

#if $iisd_subpart
solver "iisd"
# <:pr('iisd_subpart'):>
iisd_subpart_auto 3000
use_interface_full_preco 1
use_interface_full_preco_nlay <:=$nlay:>
print_interface_full_preco_conv 0
interface_full_preco_maxits <:=$isp_maxits:>
interface_full_preco_relax_factor 0.5
#else
solver "petsc"
#endif
Krylov_dim <:=$maxits:>
<:pr('maxits'):>
report_consumed_time
#
activate_debug_print
activate_debug_memory_usage
# activate_debug

iisdmat_print_statistics
print_partitioning_statistics

# file containing the weight (speed) of processors
proc_weights weights.dat
max_partgraph_vertices 4000
max_partgraph_vertices_proc 4000

#    Iterative parameters
tol_tet 1e-5
tol_newton -1.
atol 0
rtol 1e-3
dtol 1e3
nnwt 1

print_internal_loop_conv 1
# print_linear_system_and_stop 1
# solve_system 0
#verify_jacobian_with_numerical_one 1

rho 1
viscosity <:=$nu:>
Dt 0.1
steady 0
temporal_stability_factor 0
LES <:($nu < 1e-4 ? 1 : 0):>
C_smag 0.1
A_van_Driest 0.

#if $dx
hook_list ns_dx_hook my_dx_hook
dx_split_state "1 3 0 1 2 u 1 1 3 p"
dx_auto_combine
dx_state_all_fields 0
dx_steps 1
dx_read_state_from_file 2
dx_do_make_command
#else
hook_list shell_hook cubcav
#endif

__END_HASH__

# ndim nu ndof
nodedata  3  3  4
data cubcav.nod.tmp
__END_HASH__

elemset nsi_tet_les_fm2 4
name fluid
geometry tetra
npg 4
data cubcav.con-tetra.tmp
dx 1
__END_HASH__

end_elemsets

fixa
# fijaciones de velocidad en las paredes
__INCLUDE__ cubcav.fixa.tmp
# fijacion en la presion
1 4 0.
__END_FIXA__

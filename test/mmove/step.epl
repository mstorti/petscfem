<:
require "$ENV{'PETSCFEM_DIR'}/test/eperlini.pl";       # Initializes ePerl 
$N=4;
$disp = 0.1;
# $df = 'rcond';
$df = 'eig';
$slope = 5;
# $shape =ns 'quad';
#
octave_export_vars(">data.m.tmp",qw(N disp shape slope));
:>//                            # ends ePerl block

#default definitions
#===========================================================
global_options
ndim 2

save_file "save.state.tmp"
nsave 5
nsaverot 0

#if 1
solver "petsc"
#else
# solver "iisd"
iisd_subpart 1
#endif

nnwt 1
# newton_relaxation_factor 0.1 10 1.
pc_lu_fill 8.
rtol 1e-4
atol 1e-10
tol_newton 0
maxits 100
steady
c_volume 0.1
# distor_exp 1.

<:$nstep=40; pr('nstep');:>
Dt <:= 1./$nstep;:>
__END_HASH__

# ndim nu ndof
nodes   2  2  2
__INCLUDE__ "step.nod.tmp"
__END_NODES__

#===========================================================
#if $shape eq 'quad'
elemset mesh_move_<:=$df:> 4
geometry cartesian2d
npg 4
#else
# elemset mesh_move_<:=$df:> 3
elemset mesh_move_eig_anal 3
geometry triangle
npg 1
#endif
__END_HASH__
__INCLUDE__ "step.con.tmp"
__END_ELEMSET__

end_elemsets

#===========================================================
#  fixa_amplitude ramp
#  start_time 0
#  end_time 1
#  slope 1
#  __END_HASH__
#  __INCLUDE__ "step.fixa.tmp"
#  __END_FIXA__

fixa_amplitude piecewise_linear
filename "piecewise.dat"
__END_HASH__
__INCLUDE__ "step.fixa.tmp"
__END_FIXA__


# Local Variables: $
# mode: shell-script $
# eval: (setq indent-tabs-mode nil) $
# End: $

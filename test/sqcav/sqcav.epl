# -*- mode: shell-script -*-
<:                              # starts ePerl block
#__TRANSCRIPT__
require "$ENV{'PETSCFEM_DIR'}/test/eperlini.pl";# Initializes ePerl 
get_var_env('weak_form',0);
get_var_env('case',undef);
print "# case: $case\n";
get_var_env('meas_perf',undef);
get_var_env('use_triangles',0);

$press_term=0;
if ($case eq 'press_term') {
    $press_term=1;
    $case='weak_form_0';
}

$u_rini = 0.5;
if ($case eq 'read_ini') {
    $read_ini_case = 1;
    $case = 'iisd_sbp2';
    $save_file = "sqcav.read_ini.state.tmp";
}

$dx = 0;
if ($case =~ /^dx_(.*)/) {
    $dx = 1;
    $dx_case = $1;
    $case = "weak_form_0"; 
    ${$dx_case} = 1;
    $synchro = 1 if $allf;
    $solver = 'iisd';
    $preco_type = 'jacobi';
    $steady = 0;
    $nstep = 20;
}
$save_file = ($case ? "sqcav.$case.tmp" : "sqcav.state.tmp") unless $save_file;

if ($case eq 'other') {
    $case = 'weak_form_1';
    $Re = 1000;
    $hratio = 4;
    $N = 40;
}

if ($case eq 'zwproc2_ref') { $case = 'zwproc2'; }

if ($case eq 'zwproc2') {
    $case = 'zwproc';
    $iisd_subpart = 2;
}

if ($case eq 'zwproc_ref') { $case = 'zwproc'; }

if ($case eq 'zwproc') {
    $case = 'weak_form_1';
    $preco_type = 'jacobi';
    $N=10;
    $Re=1;
    $nstep = 5;
    $solver = "iisd";
    $iisd_subpart = 1 unless $iisd_subpart;
    $steady = 0;
    $maxits = 100;
}

$steady = 1 unless defined $steady;

## Test the 'G_body' feature. 
$g_body= 0;
if ($case eq 'g_body') {
    $case='lu';
    $g_body=1;
}
$U = 1;				# typical velocity scale
$L = 1;				# Side of the cavity
$N = 20 unless $N;
$hratio = 10 unless $hratio;			# refinement (h_center/h_wall)
$Re = 1000 unless $Re;		# Reynolds number
$viscosity = $L/$Re;		# viscosity
$Dt = 0.01;			# time step
$solver = "petsc" unless $solver;
$preco_type = "lu" unless $preco_type;
$maxits = 1 unless $maxits;
$nstep = 100 unless $nstep;
#
$weak_form = 0;
$cache_gdu = 0;
$update_jacobian =0;
# `scalar' avoids returning the first match, which can be zero
# and then can be interpreted as `false' 
if (scalar $case =~ /weak_form_(\d)/) {
    $weak_form = $1;
} elsif ($case eq 'lu') {
    $solver = "petsc";
    $preco_type = "lu";
    $maxits = 1;
    $nstep = 2;
} elsif ($case =~ /^iisd/) {
    $solver = "iisd";
    $iisd_subpart = 2;
    $maxits = 200;
    $nstep = 2;
    $iisd_subpart = $1 if $case=~/_sbp(\d*)/;
    if ($case=~/_uj/) {
	$update_jacobian = 1;
	$nstep = 2000;
	$maxits=100;
	$iisd_subpart = 20;
	$N = 200;
    }
    $preco_type = "jacobi";
} elsif ($case eq 'big') {
    $N = 40;
#      $solver = "iisd";
#      $preco_type = "jacobi";
    $solver = "petsc";
    $preco_type = "lu";
    $maxits = 1;
    $nstep = 20;
    $cache_gdu = 0;
    $iisd_subpart = 10;
} else {
    die "don't know case $case\n";
}
$use_qharmm = 0;
$nstep = 0 if defined $read_ini_case;
#
#__END_TRANSCRIPT__
@vars = qw(U L N Re viscosity h Co Dt hratio g_body use_triangles u_rini);
transcript("", @vars);	# print variables on output
octave_export_vars(">data.m.tmp",@vars);
:>//                            # ends ePerl block
# <:pr('dx_case'):> 
# <:pr('dx'):> 
# <:pr('file0'):> 
# <:pr('file1'):> 
# <:pr('file2'):> 
# <:pr('file3'):> 
# <:pr('synchro'):> 
# <:pr('allf'):> 
#================================================================
global_options

nsave 5
<:pr('nstep'):> 
initial_state "sqcav.ini.tmp"
# initial_state sqcav.weak_form_0.tmp
<:pr('save_file'):> 

# type of solver (may be "iisd", "petsc"...)
<:pr('solver'):>
<:pr('preco_type'):> 
<:pr('maxits'):> 
# Number of subdomains
<:pr('iisd_subpart'):>
#if $update_jacobian
# update_jacobian_iters 3
update_jacobian_start_steps 3
update_jacobian_steps 3
report_consumed_time
activate_debug_print
#endif

# file containing the weight (speed) of processors
proc_weights weights.dat

#    Iterative parameters
tol_tet 1e-5
tol_newton 1e-10
atol 0
rtol 1e-6
dtol 1e3
nnwt 1

Krylov_dim <:=$maxits:>
print_internal_loop_conv 1
#print_linear_system_and_stop 1
#verify_jacobian_with_numerical_one 1

#print_nodal_partitioning 1
Dt <:=$Dt:>
<:pr('steady'):>
temporal_stability_factor 0

shock_capturing_factor 0
#if $cache_gdu
local_store
cache_grad_div_u
#endif

#if $meas_perf
measure_performance
measure_performance_loop_length 10
#endif

#if $g_body
G_body 0 -1.
#endif

#if $dx_case eq 'file0'
save_file_pattern "sqcav.state_%d.tmp"
nsaverot 1
nrec 100000
nfile 1
#endif

#if $dx_case eq 'file2'
save_file_pattern "sqcav.state_%d.tmp"
nsaverot 1
nrec 1
nfile 100000
#endif

#if $file1 || $file3 || $synchro
hook_list ns_dx_hook my_dx_hook
#if !$allf
dx_split_state "1 2 0 1 u 1 1 2 p"
dx_auto_combine
dx_state_all_fields 0
#endif
#endif
#if $file1 || $file3
dx_read_state_from_file
#endif
# activate_debug

# Use DX for visualization
#if $use_qharmm
hook_list ns_dx_hook my_dx_hook
dx_split_state "1 2 0 1 u 1 1 2 p"
dx_auto_combine
dx_state_all_fields 0
dx_steps 1
#endif

pressure_control_coef 0.
# block_uploading 2

__END_HASH__

# ndim nu ndof
nodes  2  2  3
__INCLUDE__ sqcav.nod.tmp
_END_NODES__

elemset <:=($use_qharmm ? 'qharmm' : 'nsi_tet_les_fm2'):> <:=($use_triangles ? 3 : 4):>
name visc_fluid
dx
# report_consumed_time
geometry <:=($use_triangles ? "triangle" : "cartesian2d"):>
ndim 2
npg <:=($use_triangles ? 3 : 4):>
#if $use_qharmm
Cp 4.
C 0.
conductivity 0.3
#else
<:pr('viscosity'):> 
<:pr('weak_form'):>
LES 0
#endif
__END_HASH__
__INCLUDE__ sqcav.con.tmp
__END_ELEMSET__

end_elemsets

fixa
# fijacion en la presion
1 3 0.
# fijaciones de velocidad en las paredes
__INCLUDE__ sqcav.fixa.tmp
__END_FIXA__

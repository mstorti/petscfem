# -*- mode: shell-script -*-
#$Id: sqcav.epl,v 1.19 2002/07/26 16:22:04 mstorti Exp $
# case: <:=$ENV{'case'}:>
<:                              # starts ePerl block
#__TRANSCRIPT__
require "$ENV{'PETSCFEM_DIR'}/test/eperlini.pl";# Initializes ePerl 
get_var_env('weak_form',0);
get_var_env('case',undef);
get_var_env('meas_perf',undef);
$save_file = ($case ? "sqcav.$case.tmp" : "sqcav.state.tmp");
## Test the 'G_body' feature. 
$g_body= 0;
if ($case eq 'g_body') {
    $case='lu';
    $g_body=1;
}
$U = 1;				# typical velocity scale
$L = 1;				# Side of the cavity
$N = 20;
$hratio = 4;			# refinement (h_center/h_wall)
$Re = 100;			# Reynolds number
$viscosity = $L/$Re;		# viscosity
$Dt = 0.05;			# time step
$solver = "petsc";
$preco_type = "jacobi";
$maxits = 20;
$nstep = 100;
#
$weak_form = 0;
$cache_gdu = 0;
$update_jacobian =0;
# `scalar' avoids returning the first match, which can be zero
# and then can be interpreted as `false' 
if (scalar $case =~ /weak_form_(\d)/) {
    $weak_form = $1;
} elsif ($case eq 'lu') {
    $solver = "petsc";
    $preco_type = "lu";
    $maxits = 1;
    $nstep = 2;
} elsif ($case =~ /^iisd/) {
    $solver = "iisd";
    $iisd_subpart = 2;
    $maxits = 200;
    $nstep = 2;
    $iisd_subpart = $1 if $case=~/_sbp(\d*)/;
    if ($case=~/_uj/) {
	$update_jacobian = 1;
	$nstep = 2000;
	$maxits=100;
	$iisd_subpart = 20;
	$N = 200;
    }
    $preco_type = "jacobi";
} elsif ($case eq 'big') {
    $N = 40;
#      $solver = "iisd";
#      $preco_type = "jacobi";
    $solver = "petsc";
    $preco_type = "lu";
    $maxits = 1;
    $nstep = 20;
    $cache_gdu = 0;
    $iisd_subpart = 10;
} else {
    die "don't know case $case\n";
}
$fractional_step = 1;
# if ($fractional_step) { $solver = "iisd"; }
#
#__END_TRANSCRIPT__
@vars = qw(U L N Re viscosity h Co Dt hratio g_body);
transcript("", @vars);	# print variables on output
octave_export_vars(">data.m.tmp",@vars);
:>//                            # ends ePerl block

global_options

<:pr('fractional_step'):> 
# mat_new_nonzero_allocation_err 0
# debug_compute_prof
nsave 5
nstep 30
# initial_state sqcav.state
<:pr('save_file'):> 

# type of solver (may be "iisd", "petsc"...)
#if 0
#<:$maxits=1;:>
solver "petsc"
solver_mom "petsc"
preco_type "lu"
#else
solver "iisd"
solver_mom "petsc"
preco_type "jacobi"
#endif
<:pr('maxits'):> 

# Number of subdomains
iisd_subpart 10
#if $update_jacobian
# update_jacobian_iters 3
update_jacobian_start_steps 3
update_jacobian_steps 3
#endif
report_consumed_time
activate_debug_print

# file containing the weight (speed) of processors
proc_weights weights.dat
max_partgraph_vertices 2000
max_partgraph_vertices_proc 2000

#    Iterative parameters
tol_tet 1e-5
tol_newton 1e-10
atol 0
rtol 1e-6
dtol 1e3
nnwt 1

Krylov_dim <:=$maxits:>
print_internal_loop_conv 1
#print_linear_system_and_stop 1
#verify_jacobian_with_numerical_one 1

#print_nodal_partitioning 1
Dt <:=$Dt:>
# steady
temporal_stability_factor 0

shock_capturing_factor 0
#if $cache_gdu
local_store
cache_grad_div_u
#endif

#if $meas_perf
measure_performance
measure_performance_loop_length 10
#endif

#if $g_body
G_body 0 -1.
#endif
__END_HASH__

# ndim nu ndof
nodes  2  2  3
__INCLUDE__ sqcav.nod.tmp
_END_NODES__

elemset <:=(!$fractional_step ? nsi_tet_les_fm2 : fracstep_fm2):> 4 
name malla

# report_consumed_time
geometry cartesian2d
ndim 2
npg 4
#
# Datos fisicos
#
<:pr('viscosity'):> 
<:pr('weak_form'):>
LES 0
__END_HASH__
__INCLUDE__ sqcav.con.tmp
__END_ELEMSET__

end_elemsets

#if 1
fixa
# fijacion en la presion
1 3 0.
# fijaciones de velocidad en las paredes
__INCLUDE__ sqcav.fixa.tmp
__END_FIXA__
#endif

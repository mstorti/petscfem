# -*- mode: shell-script -*-
#$Id: sqcav2.epl,v 1.10 2004/11/11 21:52:26 mstorti Exp $
# case: <:=$ENV{'case'}:>
#<: require './sqcav2.pl'; :>
global_options

#if $fractional_step
fractional_step 1
fractional_step_use_petsc_symm 1
gamma_pressure 0.9
dt_art_fac 0.
reuse_mat <:=$reuse:>

nsome 20
print_some_file "sqcav.some-nodes.tmp"
save_file_some "sqcav.some-state.tmp"

#endif
# mat_new_nonzero_allocation_err 0
# debug_compute_prof
nsave 5
<:pr('nstep'):>
# initial_state <:=$save_file:> 
<:pr('save_file'):> 

# type of solver (may be "iisd", "petsc"...)
#if 0
#<:$maxits=1;:>
solver "petsc"
solver_mom "petsc"
preco_type "lu"
#endif
#if 0
solver "iisd"
solver_mom "petsc"
preco_type "jacobi"
#endif
<:pr('maxits'):> 

report_consumed_time
activate_debug_print

# file containing the weight (speed) of processors
proc_weights weights.dat
max_partgraph_vertices 2000
max_partgraph_vertices_proc 2000

#    Iterative parameters
tol_tet 1e-5
tol_newton 1e-10
atol 0
rtol 1e-6
dtol 1e3
nnwt 1

Krylov_dim <:=$maxits:>
print_internal_loop_conv 1
#print_linear_system_and_stop 1
#verify_jacobian_with_numerical_one 1

#print_nodal_partitioning 1
Dt <:=$Dt:>
# steady
temporal_stability_factor 0

shock_capturing_factor 0
#if $cache_gdu
local_store
cache_grad_div_u
#endif

#if $meas_perf
measure_performance
measure_performance_loop_length 10
#endif

#if $g_body
G_body 0 -1.
#endif
block_uploading 2

__END_HASH__

# ndim nu ndof
nodes  2  2  3
__INCLUDE__ sqcav.nod.tmp
_END_NODES__

elemset <:=(!$fractional_step ? nsi_tet_les_fm2 : fracstep_fm2):> 4 
name malla

# report_consumed_time
geometry cartesian2d
ndim 2
npg 4
#
# Datos fisicos
#
<:pr('viscosity'):> 
<:pr('weak_form'):>
LES 0
__END_HASH__
__INCLUDE__ sqcav.con.tmp
__END_ELEMSET__

end_elemsets

#if 1
fixa
# fijacion en la presion
1 3 0.
# fijaciones de velocidad en las paredes
__INCLUDE__ sqcav.fixa.tmp
__END_FIXA__
#endif

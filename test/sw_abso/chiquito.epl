<:                              # starts ePerl block
#__TRANSCRIPT__
require "$ENV{'PETSCFEM_DIR'}/test/eperlini.pl";       # Initializes ePerl 
$case_name = $ENV{'case_name'};                   # case name
print "# case_name $case_name\n";
$case_name = 'chiquito' unless $case_name;

$nx = 100;
$R = 200;
$u0=0.;
$h0=1.;
$h = 1.;
$alpha = 1.0;
$Courant = 0.5;
$gravity = 9.81;
$urms=sqrt($gravity*$h0);
$Dt = $Courant*$h/$urms;
$Tend = 3.;
#$Dt=0.005/3;
$nstep = ceil($Tend/$Dt);


#__END_TRANSCRIPT__
@vars = qw(R nx u0 h0 nstep case_name Courant alpha Tend Dt gravity);
transcript("", @vars);	# print variables on output and transcript this block
octave_export_vars(">chiquito.data.m.tmp",@vars);
system "octave -qH chiquito.m";
:>//                            # ends ePerl block

global_options
ndim 2
use_log_vars 0

# SUPG conf
weak_form 1

# time stepping
nnwt 3
<:pr('nstep'):>
alpha 1
steady 0

initial_state "chiquito.ini"

# "rotary saving" 
nsaverot 1
nfile 1
nrec 10000
save_file_pattern "chiquito%d.out.tmp"
save_file "chiquito.save.state.tmp"

tol_newton 0
solver "petsc"
preco_type "lu"

# convergence parameters. Internal GMRES loop. 
rtol 0
atol 0
dtol 1e10
maxits 100
Krylov_dim 100
#print_linear_system_and_stop 1
#solve_system 0
print_internal_loop_conv 1
<:pr('Dt'):>
tau_fac 1

__END_HASH__

# ndim nu ndof
nodes   2  3  2
0.0 -1.0 0.0
0.5 -0.5 0.0
#0.0 1.0 0.0
#0.5 0.5 0.0
1.0 0.0 0.0
1.5 0.0 0.0
2.0 0.0 0.0
2.5 0.0 0.0
3.0 0.0 0.0
__END_NODES__

#===========================================================
table physical_data_1
<:pr('gravity'):>
friction_law "Chezy"
Ch 110.
shape "rectangular"
width 1.
cfric 0.
ndim 2
__END_HASH__

table physical_data_2
<:pr('gravity'):>
friction_law "Chezy"
Ch 110.
shape "rectangular"
width 2.
cfric 0.
ndim 2
__END_HASH__

#===========================================================
elemset streamsw1d 2
geometry cartesian1d
npg 2
_table_include physical_data_1
__END_HASH__
1 2
2 3
#3 4 
#4 5
__END_ELEMSET__

elemset streamsw1d 2
geometry cartesian1d
npg 2
_table_include physical_data_2
__END_HASH__
3 4
4 5
5 6
6 7
#5 6
#6 7
#7 8
#8 9
__END_ELEMSET__

#if 0
elemset streamsw1d_abso 5
geometry cartesian1d
lagrange_diagonal_factor 1.e-6
#lagrange_residual_factor 1.0
props U_ref[2] normaln[1]
_table_include physical_data
__END_HASH__
__INCLUDE__ canal1d.rest.tmp
__END_ELEMSET__
#endif

end_elemsets

fixa
1 1 .30
#3 1 .30
7 2 1.0
__END_FIXA__

#if 0
constraint
-1.0 51 1 1.0 1 1
-1.0 51 2 1.0 1 2 
__END_CONSTRAINT__
#endif

# Local Variables: $
# mode: shell-script $
# eval: (setq indent-tabs-mode nil) $
# End: $

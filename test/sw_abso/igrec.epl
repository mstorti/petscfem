<:                              # starts ePerl block
#__TRANSCRIPT__
require "$ENV{'PETSCFEM_DIR'}/test/eperlini.pl";       # Initializes ePerl 
$case_name = $ENV{'case_name'};                   # case name
print "# case_name $case_name\n";
$case_name = 'igrec' unless $case_name;
$nx = 50;
$L = 100;
$ds = $L/$nx;
$u0 = 0.3;
$h0 = 1.;
$h = $ds;
$alpha = 1.0;
$Courant = 2.;
$gravity = 9.81;
$urms = sqrt($gravity*$h0);
$Dt = $Courant*$h/$urms;
$Tend = 180.;
#$Dt=0.005/3;
$nstep = ceil($Tend/$Dt);
$abso = 0;

#__END_TRANSCRIPT__
@vars = qw(L nx ds u0 h0 nstep case_name Courant alpha Tend Dt gravity);
transcript("", @vars);	# print variables on output and transcript this block
octave_export_vars(">igrec.data.m.tmp",@vars);
# system "octave -qH igrec.m";
:>//                            # ends ePerl block

global_options
ndim 2
use_log_vars 0

weak_form 1

# time stepping
nnwt 3
<:pr('nstep'):>
alpha 1
steady 0

initial_state "igrec.ini.tmp"

# "rotary saving" 
nsaverot 1
nfile 1
nrec 10000
save_file_pattern "igrec%d.out.tmp"
save_file "igrec.save.state.tmp"

tol_newton 0
solver "petsc"
preco_type "lu"

# convergence parameters. Internal GMRES loop. 
rtol 0
atol 0
dtol 1e10
maxits 100
Krylov_dim 100
#print_linear_system_and_stop 1
#solve_system 0
#print_internal_loop_conv 1
<:pr('Dt'):>
tau_fac 1.

__END_HASH__

# ndim nu ndof
nodes   2  3  2
__INCLUDE__ igrec.nod.tmp
__END_NODES__

#===========================================================
table physical_data_1
<:pr('gravity'):>
friction_law "Chezy"
Ch 110.
shape "rectangular"
width 1.
cfric 0.
ndim 2
__END_HASH__

table physical_data_2
<:pr('gravity'):>
friction_law "Chezy"
Ch 110.
shape "rectangular"
width 2.1
cfric 0.
ndim 2
__END_HASH__

#===========================================================
elemset streamsw1d 2
geometry cartesian1d
npg 2
_table_include physical_data_1
__END_HASH__
__INCLUDE__ igrec1.con.tmp
__END_ELEMSET__

elemset streamsw1d 2
geometry cartesian1d
npg 2
_table_include physical_data_2
__END_HASH__
__INCLUDE__ igrec2.con.tmp
__END_ELEMSET__

#if 1
elemset streamsw1d_abso 6
geometry cartesian1d
lagrange_diagonal_factor 1.e-6
#lagrange_residual_factor 1.0
props normaln[1]
_table_include physical_data_1
__END_HASH__
__INCLUDE__ igrec1.rest.tmp
__END_ELEMSET__
#endif

#if 1
elemset streamsw1d_abso 6
geometry cartesian1d
lagrange_diagonal_factor 1.e-6
#lagrange_residual_factor 1.0
props normaln[1]
_table_include physical_data_2
__END_HASH__
__INCLUDE__ igrec2.rest.tmp
__END_ELEMSET__
#endif

end_elemsets

#if 1
fixa
__INCLUDE__ igrec.fixa.tmp
__END_FIXA__
#endif


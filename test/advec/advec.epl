<:                              # starts ePerl block
#__TRANSCRIPT__
require "$ENV{'PETSCFEM_DIR'}/test/eperlini.pl";       # Initializes ePerl 
$case_name = $ENV{'case_name'};                   # case name
$case_name = 'skew' unless $case_name;
$N = 40;
$M = 40;
$Lx = $Ly = 1;
$ydisc = 0.4;
$delta = 0.01;
$ux = 2;
$uy = 1;
$alpha = 1;
if ($case_name eq 'cone') {
    $N = 150;
    $M = 30;
    $Lx = 5;
    $Ly = 1;
    $ux = 1;
    $uy = 0;
    $alpha = 0.5;
    $Courant = 0.5;
    $hx = $Lx/$N;
    $Dt = $Courant*$hx/$ux;
    $Tend = 3.5;
    $nstep = ceil($Tend/$Dt);
}
#__END_TRANSCRIPT__
octave_export_vars(">data.m.tmp",qw(N M Lx Ly delta ydisc 
    ux uy case_name Courant));
system "octave -qH advec.m";
:>//                            # ends ePerl block

#default definitions
#===========================================================
global_options
ndim 2

save_file "save.state.tmp"
save_file_pattern "outvector.out.tmp"
#if $case_name eq 'skew'
steady
#elsif $case_name eq 'cone'
<:pr('Dt'):>
nsave 10
nsaverot 10
initial_state "advec.ini.tmp"
#endif
solver "iisd"
iisd_subpart 1
nnwt 1
<:pr('nstep'):>
<:pr('alpha'):>
weak_form 0
__END_HASH__

#===========================================================
# ndim nu ndof
nodedata   2  2  1
data advec.nod.tmp
__END_HASH__

#===========================================================
elemset advec 3
geometry triangle
npg 3
u <:=$ux:> <:=$uy:> 
diff 1e-4
data advec.con.tmp
__END_HASH__

end_elemsets

#===========================================================
fixa

__INCLUDE__ "advec.fixa.tmp"
#if $case_name eq 'skew'
__INCLUDE__ "advec.fixa-y0.tmp"
#endif
__END_FIXA__

# Local Variables: $
# mode: shell-script $
# eval: (setq indent-tabs-mode nil) $
# End: $

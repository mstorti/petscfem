//
// time: Fri Jun  6 17:39:11 2003
//
// version: 3.1.2 (format), 4.2.0 (DX)
//
//
// MODULE main
// workspace: width = 528, height = 957
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node AmbientLight[3]: x = 273, y = 701, inputs = 1, label = AmbientLight
    //
main_AmbientLight_3_out_1 = 
    AmbientLight(
    main_AmbientLight_3_in_1
    ) [instance: 3, cache: 1];
    // 
    // node Sequencer[1]: x = 155, y = 0, inputs = 7, label = Sequencer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Sequencer_1"
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 0
    // input[5]: defaulting = 0, visible = 1, type = 1, value = 1000
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 16777217, value = { 0 1000 1 0 31 1 }
    // vcr[1]: min = 0, max = 1000, beg = 0, end = 31, cur = 0, inc = 1, loop = off, step = off, pal = off
    // window: position = (0.5527,0.5352), size = 0.3496x0.1328
    //
    main_Sequencer_1_in_3 = @frame;
main_Sequencer_1_out_1[cache: 2] = 
    Sequencer(
    main_Sequencer_1_in_1,
    main_Sequencer_1_in_2,
    main_Sequencer_1_in_3,
    main_Sequencer_1_in_4,
    main_Sequencer_1_in_5,
    main_Sequencer_1_in_6,
    main_Sequencer_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Format[1]: x = 299, y = 100, inputs = 2, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "STEPS_REF/smoke.state.%d.tmp"
    //
main_Format_1_out_1 = 
    Format(
    main_Format_1_in_1,
    main_Sequencer_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node ExtProgImport[1]: x = 120, y = 157, inputs = 7, label = ExtProgImport
    // input[1]: defaulting = 0, visible = 1, type = 1, value = 1
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "localhost"
    // input[4]: defaulting = 0, visible = 1, type = 32, value = NULL
    //
main_ExtProgImport_1_out_1,
main_ExtProgImport_1_out_2,
main_ExtProgImport_1_out_3 = 
    ExtProgImport(
    main_ExtProgImport_1_in_1,
    main_ExtProgImport_1_in_2,
    main_ExtProgImport_1_in_3,
    main_ExtProgImport_1_in_4,
    main_Sequencer_1_out_1,
    main_Format_1_out_1,
    main_ExtProgImport_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Select[1]: x = 182, y = 236, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "smoke_0_state"
    //
main_Select_1_out_1 = 
    Select(
    main_ExtProgImport_1_out_2,
    main_Select_1_in_2,
    main_Select_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[1]: x = 478, y = 159, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_1"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 1.0 
    //
    // 
    // node Compute[3]: x = 146, y = 302, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "max(-$1,min($1,$0))"
    // expression: value = max(-cota,min(cota,u))
    // name[2]: value = u
    // name[3]: value = cota
    //
main_Compute_3_out_1 = 
    Compute(
    main_Compute_3_in_1,
    main_Select_1_out_1,
    main_Scalar_1_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Compute[5]: x = 134, y = 370, inputs = 2, label = Comp
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "tanh(4*$0)"
    // expression: value = tanh(4*u)
    // name[2]: value = u
    //
main_Compute_5_out_1 = 
    Compute(
    main_Compute_5_in_1,
    main_Compute_3_out_1
    ) [instance: 5, cache: 1];
    // 
    // node Compute[6]: x = 93, y = 456, inputs = 2, label = Comp
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "4*$0**3-3*$0"
    // expression: value = 4*u**3-3*u
    // name[2]: value = u
    //
main_Compute_6_out_1 = 
    Compute(
    main_Compute_6_in_1,
    main_Compute_5_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Compute[4]: x = 419, y = 248, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "-$0"
    // expression: value = -c
    // name[2]: value = c
    //
main_Compute_4_out_1 = 
    Compute(
    main_Compute_4_in_1,
    main_Scalar_1_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Colormap[3]: x = 286, y = 339, inputs = 19, label = Colormap
    // input[1]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.53225806] }
    // input[2]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.70967742] }
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 0.0] }
    // input[4]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[5]: defaulting = 0, visible = 0, type = 32, value = "Colormap_3"
    // input[7]: defaulting = 1, visible = 1, type = 5, value = -1.0
    // input[8]: defaulting = 1, visible = 1, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 1, type = 1, value = 20
    // input[12]: defaulting = 0, visible = 0, type = 16777221, value = { -1.0 1.0 }
    // input[17]: defaulting = 0, visible = 0, type = 5, value = -1.0
    // input[18]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[19]: visible = 1
    // window: position = (0.1084,0.1146), size = 0.8125x0.7500
    //
main_Colormap_3_out_1[cache: 2],
main_Colormap_3_out_2[cache: 2] = 
    Colormap(
    main_Colormap_3_in_1,
    main_Colormap_3_in_2,
    main_Colormap_3_in_3,
    main_Colormap_3_in_4,
    main_Colormap_3_in_5,
    main_Colormap_3_in_6,
    main_Compute_4_out_1,
    main_Scalar_1_out_1,
    main_Colormap_3_in_9,
    main_Colormap_3_in_10,
    main_Colormap_3_in_11,
    main_Colormap_3_in_12,
    main_Colormap_3_in_13,
    main_Colormap_3_in_14,
    main_Colormap_3_in_15,
    main_Colormap_3_in_16,
    main_Colormap_3_in_17,
    main_Colormap_3_in_18,
    main_Colormap_3_in_19
    ) [instance: 3, cache: 1];
    // 
    // node Color[2]: x = 182, y = 516, inputs = 5, label = Color
    //
main_Color_2_out_1 = 
    Color(
    main_Compute_6_out_1,
    main_Colormap_3_out_1,
    main_Color_2_in_3,
    main_Color_2_in_4,
    main_Color_2_in_5
    ) [instance: 2, cache: 1];
    // 
    // node Light[1]: x = 302, y = 616, inputs = 3, label = Light
    // input[1]: defaulting = 0, visible = 1, type = 8, value = [5 5 1]
    //
main_Light_1_out_1 = 
    Light(
    main_Light_1_in_1,
    main_Light_1_in_2,
    main_Light_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node ColorBar[1]: x = 297, y = 516, inputs = 16, label = ColorBar
    //
main_ColorBar_1_out_1 = 
    ColorBar(
    main_Colormap_3_out_1,
    main_ColorBar_1_in_2,
    main_ColorBar_1_in_3,
    main_ColorBar_1_in_4,
    main_ColorBar_1_in_5,
    main_ColorBar_1_in_6,
    main_ColorBar_1_in_7,
    main_ColorBar_1_in_8,
    main_ColorBar_1_in_9,
    main_ColorBar_1_in_10,
    main_ColorBar_1_in_11,
    main_ColorBar_1_in_12,
    main_ColorBar_1_in_13,
    main_ColorBar_1_in_14,
    main_ColorBar_1_in_15,
    main_ColorBar_1_in_16
    ) [instance: 1, cache: 1];
    // 
    // node Collect[1]: x = 131, y = 615, inputs = 4, label = Collect
    //
main_Collect_1_out_1 = 
    Collect(
    main_Color_2_out_1,
    main_Light_1_out_1,
    main_AmbientLight_3_out_1,
    main_ColorBar_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Image[2]: x = 149, y = 717, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_2"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [0.757174 0.486745 -2e-05]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [0.757174 0.486745 3.9276]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 1.51894
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 997
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.692
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0 1 0]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 21.888
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "none"
    // depth: value = 16
    // window: position = (0.0000,0.0000), size = 0.9873x0.9544
    // internal caching: 1
    //
main_Image_2_out_1,
main_Image_2_out_2,
main_Image_2_out_3 = 
    Image(
    main_Image_2_in_1,
    main_Collect_1_out_1,
    main_Image_2_in_3,
    main_Image_2_in_4,
    main_Image_2_in_5,
    main_Image_2_in_6,
    main_Image_2_in_7,
    main_Image_2_in_8,
    main_Image_2_in_9,
    main_Image_2_in_10,
    main_Image_2_in_11,
    main_Image_2_in_12,
    main_Image_2_in_13,
    main_Image_2_in_14,
    main_Image_2_in_15,
    main_Image_2_in_16,
    main_Image_2_in_17,
    main_Image_2_in_18,
    main_Image_2_in_19,
    main_Image_2_in_20,
    main_Image_2_in_21,
    main_Image_2_in_22,
    main_Image_2_in_23,
    main_Image_2_in_24,
    main_Image_2_in_25,
    main_Image_2_in_26,
    main_Image_2_in_27,
    main_Image_2_in_28,
    main_Image_2_in_29,
    main_Image_2_in_30,
    main_Image_2_in_31,
    main_Image_2_in_32,
    main_Image_2_in_33,
    main_Image_2_in_34,
    main_Image_2_in_35,
    main_Image_2_in_36,
    main_Image_2_in_37,
    main_Image_2_in_38,
    main_Image_2_in_39,
    main_Image_2_in_40,
    main_Image_2_in_41,
    main_Image_2_in_42,
    main_Image_2_in_43,
    main_Image_2_in_44,
    main_Image_2_in_45,
    main_Image_2_in_46,
    main_Image_2_in_47,
    main_Image_2_in_48,
    main_Image_2_in_49
    ) [instance: 2, cache: 1];
    // 
    // node Print[1]: x = 310, y = 177, inputs = 3, label = Print
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "od"
    //
    Print(
    main_Format_1_out_1,
    main_Print_1_in_2,
    main_Print_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[1]: x = 313, y = 20, inputs = 1, label = t
    //
t = main_Sequencer_1_out_1;
    // 
    // node Receiver[1]: x = 280, y = 782, inputs = 1, label = t
    //
main_Receiver_1_out_1[cache: 0] = t;
    // 
    // node Render[1]: x = 157, y = 812, inputs = 3, label = Render
    // input[1]: defaulting = 1, visible = 1, type = 67108863, value = NULL
    //
main_Render_1_out_1 = 
    Render(
    main_Image_2_out_1,
    main_Image_2_out_2,
    main_Render_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node WriteImage[1]: x = 169, y = 895, inputs = 4, label = WriteImage
    // input[1]: defaulting = 1, visible = 1, type = 133120, value = NULL
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "sqcav"
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "tiff"
    //
    WriteImage(
    main_Render_1_out_1,
    main_WriteImage_1_in_2,
    main_WriteImage_1_in_3,
    main_Receiver_1_out_1
    ) [instance: 1, cache: 1];
// network: end of macro body
CacheScene(main_Image_2_in_1, main_Image_2_out_1, main_Image_2_out_2);
}
main_AmbientLight_3_in_1 = NULL;
main_AmbientLight_3_out_1 = NULL;
main_Sequencer_1_in_1 = "Sequencer_1";
main_Sequencer_1_in_2 = NULL;
main_Sequencer_1_in_3 = NULL;
main_Sequencer_1_in_4 = 0;
main_Sequencer_1_in_5 = 1000;
main_Sequencer_1_in_6 = NULL;
main_Sequencer_1_in_7 = { 0 1000 1 0 31 1 };
main_Sequencer_1_out_1 = NULL;

@startframe = 0;
@nextframe  = @startframe;
@endframe   = 31;
@deltaframe = 1;
main_Format_1_in_1 = "STEPS_REF/smoke.state.%d.tmp";
main_Format_1_out_1 = NULL;
main_ExtProgImport_1_in_1 = 1;
main_ExtProgImport_1_in_2 = "localhost";
main_ExtProgImport_1_in_3 = NULL;
main_ExtProgImport_1_in_4 = NULL;
main_ExtProgImport_1_in_7 = NULL;
main_ExtProgImport_1_out_2 = NULL;
main_Select_1_in_2 = "smoke_0_state";
main_Select_1_in_3 = NULL;
main_Select_1_out_1 = NULL;
main_Scalar_1_in_1 = "Scalar_1";
main_Scalar_1_in_2 = NULL;
main_Scalar_1_in_3 = 1.0 ;
main_Scalar_1_in_4 = NULL;
main_Scalar_1_in_5 = NULL;
main_Scalar_1_in_6 = NULL;
main_Scalar_1_in_7 = NULL;
main_Scalar_1_in_8 = NULL;
main_Scalar_1_in_9 = NULL;
main_Scalar_1_in_10 = NULL;
main_Scalar_1_in_11 = NULL;
main_Scalar_1_out_1 = 1.0 ;
main_Compute_3_in_1 = "max(-$1,min($1,$0))";
main_Compute_3_out_1 = NULL;
main_Compute_5_in_1 = "tanh(4*$0)";
main_Compute_5_out_1 = NULL;
main_Compute_6_in_1 = "4*$0**3-3*$0";
main_Compute_6_out_1 = NULL;
main_Compute_4_in_1 = "-$0";
main_Compute_4_out_1 = NULL;
main_Colormap_3_in_1 = { [0.0 0.53225806] };
main_Colormap_3_in_2 = { [0.0 0.70967742] };
main_Colormap_3_in_3 = { [0.0 1.0] [1.0 0.0] };
main_Colormap_3_in_4 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_3_in_5 = "Colormap_3";
main_Colormap_3_in_6 = NULL;
main_Colormap_3_in_9 = NULL;
main_Colormap_3_in_10 = NULL;
main_Colormap_3_in_11 = NULL;
main_Colormap_3_in_12 = { -1.0 1.0 };
main_Colormap_3_in_13 = NULL;
main_Colormap_3_in_14 = NULL;
main_Colormap_3_in_15 = NULL;
main_Colormap_3_in_16 = NULL;
main_Colormap_3_in_17 = -1.0;
main_Colormap_3_in_18 = 1.0;
main_Colormap_3_in_19 = NULL;
main_Colormap_3_out_1 = NULL;
main_Color_2_in_3 = NULL;
main_Color_2_in_4 = NULL;
main_Color_2_in_5 = NULL;
main_Color_2_out_1 = NULL;
main_Light_1_in_1 = [5 5 1];
main_Light_1_in_2 = NULL;
main_Light_1_in_3 = NULL;
main_Light_1_out_1 = NULL;
main_ColorBar_1_in_2 = NULL;
main_ColorBar_1_in_3 = NULL;
main_ColorBar_1_in_4 = NULL;
main_ColorBar_1_in_5 = NULL;
main_ColorBar_1_in_6 = NULL;
main_ColorBar_1_in_7 = NULL;
main_ColorBar_1_in_8 = NULL;
main_ColorBar_1_in_9 = NULL;
main_ColorBar_1_in_10 = NULL;
main_ColorBar_1_in_11 = NULL;
main_ColorBar_1_in_12 = NULL;
main_ColorBar_1_in_13 = NULL;
main_ColorBar_1_in_14 = NULL;
main_ColorBar_1_in_15 = NULL;
main_ColorBar_1_in_16 = NULL;
main_ColorBar_1_out_1 = NULL;
main_Collect_1_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_2_in_1 = "Image_2";
main_Image_2_in_3 = "X16,,";
main_Image_2_in_4 = 1;
main_Image_2_in_5 = [0.757174 0.486745 -2e-05];
main_Image_2_in_6 = [0.757174 0.486745 3.9276];
main_Image_2_in_7 = 1.51894;
main_Image_2_in_8 = 997;
main_Image_2_in_9 = 0.692;
main_Image_2_in_10 = [0 1 0];
main_Image_2_in_11 = NULL;
main_Image_2_in_12 = 0;
main_Image_2_in_13 = NULL;
main_Image_2_in_14 = 1;
main_Image_2_in_15 = NULL;
main_Image_2_in_16 = NULL;
main_Image_2_in_17 = NULL;
main_Image_2_in_18 = NULL;
main_Image_2_in_19 = 0;
main_Image_2_in_20 = NULL;
main_Image_2_in_21 = NULL;
main_Image_2_in_22 = NULL;
main_Image_2_in_23 = NULL;
main_Image_2_in_25 = NULL;
main_Image_2_in_26 = NULL;
main_Image_2_in_27 = NULL;
main_Image_2_in_28 = NULL;
main_Image_2_in_29 = NULL;
main_Image_2_in_30 = NULL;
main_Image_2_in_31 = NULL;
main_Image_2_in_32 = NULL;
main_Image_2_in_33 = NULL;
main_Image_2_in_34 = NULL;
main_Image_2_in_35 = NULL;
main_Image_2_in_36 = NULL;
main_Image_2_in_37 = NULL;
main_Image_2_in_38 = NULL;
main_Image_2_in_39 = NULL;
main_Image_2_in_40 = NULL;
main_Image_2_in_41 = "none";
main_Image_2_in_42 = NULL;
main_Image_2_in_43 = NULL;
main_Image_2_in_44 = NULL;
main_Image_2_in_45 = NULL;
main_Image_2_in_46 = NULL;
main_Image_2_in_47 = NULL;
main_Image_2_in_48 = NULL;
main_Image_2_in_49 = NULL;
main_Image_2_out_1 = NULL;
main_Image_2_out_2 = NULL;
main_Print_1_in_2 = "od";
main_Print_1_in_3 = NULL;
main_Transmitter_1_out_1 = NULL;
main_Receiver_1_out_1 = NULL;
main_Render_1_in_3 = NULL;
main_Render_1_out_1 = NULL;
main_WriteImage_1_in_2 = "sqcav";
main_WriteImage_1_in_3 = "tiff";
Executive("product version 4 2 0");
$sync

sequence main();
play;

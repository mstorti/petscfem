# -*- mode: shell-script -*-
#
<:require 'eperlini.pl':>// # Initializes ePerl 

# Synchronize the time step with external frequency
<:
$piecewise_fun = 1 if $spline_fun;
$N = 16 unless $N;   # number of time steps per period
$omega=2.*$PI*1000.; # pulsation
$T=2*$PI/$omega;     # period
$Dt = $T/$N;         # we put $N time steps per period
$Nperiods = 1 unless $Nperiods; # Numbeer of periods to be run
$alpha=1 unless $alpha; # trapezoidal rule parameter
:>//

global_options

nsave 100000000
save_file oscplate.sal
#if $piecewise_fun 
nstep 300
#elsif  $spline_periodic_fun
nstep 50
#else
nstep <:=$N*$Nperiods+$N/4:>
#endif

<: if ($piecewise_fun) {
heredoc(<<EOF,"tmp_file_some.tmp");
1
11
EOF
} elsif ($spline_periodic_fun) {
heredoc(<<EOF,"tmp_file_some.tmp");
1
EOF
} else {
heredoc(<<EOF,"tmp_file_some.tmp");
11
EOF
}
:>//

print_some_file tmp_file_some.tmp
#if $spline_fun
save_file_some oscsome2b.sal
#elsif $piecewise_fun
save_file_some oscsome2.sal
#else
save_file_some oscsome.sal
#endif
nsome 1

#    Iterative parameters
nnwt 3
maxits 20
Krylov_dim 20

Dt <:=$Dt:>
alpha <:=$alpha:>
__END_HASH__

# ndim nu ndof
nodes  2  2  3
  0.00000  0.00000
  0.00000  0.10000
  0.10000  0.00000
  0.10000  0.10000
  0.20000  0.00000
  0.20000  0.10000
  0.30000  0.00000
  0.30000  0.10000
  0.40000  0.00000
  0.40000  0.10000
  0.50000  0.00000
  0.50000  0.10000
  0.60000  0.00000
  0.60000  0.10000
  0.70000  0.00000
  0.70000  0.10000
  0.80000  0.00000
  0.80000  0.10000
  0.90000  0.00000
  0.90000  0.10000
  1.00000  0.00000
  1.00000  0.10000
_END_NODES__

elemset nsi_tet_les_fm2 4
props 
#
#Datos del elemento
#
name malla
geometry cartesian2d
ndim 2
npg 4
#
# Datos fisicos
#
viscosity  100
weak_form 0
__END_HASH__
   1   3   4   2
   3   5   6   4
   5   7   8   6
   7   9  10   8
   9  11  12  10
  11  13  14  12
  13  15  16  14
  15  17  18  16
  17  19  20  18
  19  21  22  20
__END_ELEMSET__

end_elemsets

fixa
# velocity set to zero at the bottom
21 1 0.
21 2 0.
22 1 0.
22 2 0.
# pressure also
21 3 0.
22 3 0.
__END_FIXA__

#if $spline_fun

fixa_amplitude spline
npoints 8
periodic 1
final_time <:=$T*6:>
time_vals  0. <:=.05*$T:> <:=.40*$T:> <:=.45*$T:> <:=.55*$T:> \
                       <:=.60*$T:>  <:=.95*$T/2:> <:=$T:>   
ampl_vals -0.5  -0.5          -0.5       -0.5         0.5     \
                               0.5       0.5          0.5

__END_HASH__
1 1 0.
1 2 1.
2 1 0.
2 2 1.
__END_FIXA__

#elsif $spline_periodic_fun
fixa_amplitude spline_periodic

period <:=$T:>
npoints 5
#if $cos_case 
ampl_vals  1            0        -1         0.     1.
#else
#if $sin30deg_case
start_time <:=$T/12.0:>
#endif
ampl_vals  0.     1            0        -1         0.
#endif 

__END_HASH__
1 1 0.
1 2 1.
2 1 0.
2 2 1.
__END_FIXA__

#elsif $piecewise_fun

fixa_amplitude piecewise
npoints 4
final_time <:=$T*6:>
time_vals  0.    <:=$T/2:>   <:=$T/2:>   <:=$T:>   
ampl_vals -0.5     -0.5         0.5        0.5
__END_HASH__
1 1 0.
1 2 1.
2 1 0.
2 2 1.
__END_FIXA__

#else

fixa_amplitude sin
omega <:=$omega:>
amplitude 1.
__END_HASH__
1 1 0.
1 2 1.
2 1 0.
2 2 1.
__END_FIXA__

#endif

#
# Periodic boundary conditions from y=0.1 to y=0.
#
constraint
-1.  4 1   1. 3   1
-1.  6 1   1. 5   1
-1.  8 1   1. 7   1
-1. 10 1   1. 9   1
-1. 12 1   1. 11  1
-1. 14 1   1. 13  1
-1. 16 1   1. 15  1
-1. 18 1   1. 17  1
-1. 20 1   1. 19  1
       	      
-1.  4 2   1. 3   2
-1.  6 2   1. 5   2
-1.  8 2   1. 7   2
-1. 10 2   1. 9   2
-1. 12 2   1. 11  2
-1. 14 2   1. 13  2
-1. 16 2   1. 15  2
-1. 18 2   1. 17  2
-1. 20 2   1. 19  2
       	      
-1.  4 3   1. 3   3
-1.  6 3   1. 5   3
-1.  8 3   1. 7   3
-1. 10 3   1. 9   3
-1. 12 3   1. 11  3
-1. 14 3   1. 13  3
-1. 16 3   1. 15  3
-1. 18 3   1. 17  3
-1. 20 3   1. 19  3

# periodic boundary conditions on the pressure at the moving plate also
-1. 2 3  1. 1 3 

__END_CONSTRAINT__

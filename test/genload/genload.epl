<:
require '../eperlini.pl';       # Initializes ePerl 
doc_vals(qw(case));
:>//                            # ends ePerl block

#default definitions
#===========================================================
global_options
ndim 2

chunk_size 10
save_file "save.state.tmp"
nsave 20

rtol 1e-2
maxits 100

save_file_pattern "outvector%d.sal"
#nsaverot 1000000

nnwt 1
tol_newton 0
preco_type "lu"

local_time_step 0
consistent_supg_matrix 1
auto_time_step 0
#print_linear_system_and_stop

Dt 1000.
nstep 4
alpha 1.
tau_fac 0.

weak_form 1

diffusive_jacobians_type "scalar_per_field"
diffusive_jacobians 3. 1.

__END_HASH__

#===========================================================
# ndim nu ndof
nodes   2  2  2
__INCLUDE__ genload.nod
__END_NODES__

#===========================================================
elemset newadvdif_advecfm2 4
#Datos del elemento
geometry cartesian2d
npg 4
__END_HASH__
1 3 4 2 
3 5 6 4 
5 7 8 6 
7 9 10 8 
9 11 12 10 
11 13 14 12 
13 15 16 14 
#<:$lin_gen_load_e=1:>
#if $lin_gen_load_e
15 17 18 16 
#else
15 19 20 16 
#endif
19 21 22 20 
21 23 24 22 
23 25 26 24 
25 27 28 26 
27 29 30 28 
29 31 32 30 
31 33 34 32 
33 35 36 34 
__END_ELEMSET__

elemset lin_gen_load 4
geometry cartesian1d
npg 2
double_layer
hfilm_coeff 3. 0. 0. 1.
__END_HASH__
17 18 19 20 
__END_ELEMSET__

elemset lin_gen_load <:= $case eq '2b' ? 2 : 4 :>
geometry cartesian1d
npg 2
#if $case ne '2b'
double_layer
#endif
#if $case eq '1'
hfilm_coeff 3. 0. 0. 1.
#elsif $case =~ /^2/ 
hfilm_source -3. -1.
#endif
__END_HASH__
#if $case ne '2b'
35 36 37 38
#else
35 36
#endif
__END_ELEMSET__

end_elemsets

#===========================================================
fixa
1 1  1.
2 1  1.
1 2  6.
2 2  6.
#if $case eq '1'
37 1 -2.
38 1 -2.
37 2 3.
38 2 3.
#elsif $case eq '2a'
37 1 0.
38 1 0.
37 2 0.
38 2 0.
#endif
__END_FIXA__

# Local Variables: $
# mode: shell-script $
# eval: (setq indent-tabs-mode nil) $
# End: $

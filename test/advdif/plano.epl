# -*- mode: shell-script -*-
#
<:require '../eperlini.pl':>// # Initializes ePerl 
<:$N=readm("N","plano.m");	# Number of elements in z
:>//

#default definitions
#===========================================================
global_options
ndim 2

save_file "save.state"
nsave 10

rtol 1e-2
maxits 100

save_file_pattern "outvector%d.sal"
nsaverot 100
nrec  100
nfile 2

nstep 3
nnwt 2
tol_newton 0
preco_type "LU"

local_time_step 0
consistent_supg_matrix 1
auto_time_step 0
Dt 1e-2
alpha 1.
#tau_fac 0.

weak_form 0
#print_linear_system_and_stop
#initial_state "save.state"
advective_jacobians 10. 0. -10. 0.
diffusive_jacobians 0.1 0.1
diffusive_jacobians_mol 0.0 0.0
__END_HASH__

#===========================================================
# ndim nu ndof
nodes   2  2  2

__INCLUDE__ plano.nod
__END_NODES__

#===========================================================
elemset advdif_advecfm2 4
#Datos del elemento
geometry cartesian2d
npg 4
__END_HASH__
__INCLUDE__ plano.con
__END_ELEMSET__

#===========================================================
elemset bcconv_adv_advecfm2 2
npg 2
ndim 2
geometry cartesian1d
__END_HASH__

2 1
<:=2*$N+1:> <:=2*$N+2:>

__END_ELEMSET__

end_elemsets

#===========================================================
fixa
# componente 1, valor fijado a la izquierda
1 1 1.
2 1 1.
#1 2 -1.
#2 2 -1.

# componente 2, valor fijado a la derecha
#<:=2*$N+1:>  1 -1.
#<:=2*$N+2:>  1 -1.
<:=2*$N+1:>  2  1.
<:=2*$N+2:>  2  1.
__END_FIXA__

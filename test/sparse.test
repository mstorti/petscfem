__EXACT_MATCH__
set values ...  
length: 5
2 -> 1.000000
3 -> 2.000000
-- end vec --
set at 10 11 ...  
length: 12
2 -> 1.000000
3 -> 2.000000
10 -> 10.000000
11 -> 11.000000
-- end vec --
set at 5 ...  
length: 12
2 -> 1.000000
3 -> 2.000000
5 -> 5.000000
10 -> 10.000000
11 -> 11.000000
-- end vec --
resized to 10... 
length: 10
2 -> 1.000000
3 -> 2.000000
5 -> 5.000000
-- end vec --
cleared ...  
length: 10
-- end vec --
w: 
length: 4
0 -> 14.000000
1 -> 15.000000
2 -> 16.000000
3 -> 17.000000
-- end vec --
setting v[I] = w  
length: 20
14 -> 14.000000
15 -> 15.000000
16 -> 16.000000
17 -> 17.000000
-- end vec --
u[I] = v[J]
length: 20
8 -> 14.000000
10 -> 15.000000
12 -> 16.000000
14 -> 17.000000
-- end vec --
u*2 = 
length: 20
8 -> 28.000000
10 -> 30.000000
12 -> 32.000000
14 -> 34.000000
-- end vec --
u:
length: 20
8 -> 28.000000
10 -> 30.000000
12 -> 32.000000
14 -> 34.000000
-- end vec --
v:
length: 20
14 -> 14.000000
15 -> 15.000000
16 -> 16.000000
17 -> 17.000000
-- end vec --
u = u+3*v ... 
length: 20
8 -> 28.000000
10 -> 30.000000
12 -> 32.000000
14 -> 76.000000
15 -> 45.000000
16 -> 48.000000
17 -> 51.000000
-- end vec --
u empty OK ? 1
u empty after clear() OK ? 1
checkerboard mat
size 5 5 
row 0: 0.000000 1.000000 0.000000 3.000000 0.000000 
row 1: 10.000000 0.000000 12.000000 0.000000 14.000000 
row 2: 0.000000 21.000000 0.000000 23.000000 0.000000 
row 3: 30.000000 0.000000 32.000000 0.000000 34.000000 
row 4: 0.000000 41.000000 0.000000 43.000000 0.000000 
-- end mat --
after my_set; 
length: 5
1 -> 1.000000
2 -> 2.000000
3 -> 3.000000
4 -> 4.000000
-- end vec --
rows 0 1  set to u: 
size 5 5 
row 0: 0.000000 1.000000 2.000000 3.000000 4.000000 
row 1: 0.000000 1.000000 2.000000 3.000000 4.000000 
row 2: 0.000000 21.000000 0.000000 23.000000 0.000000 
row 3: 30.000000 0.000000 32.000000 0.000000 34.000000 
row 4: 0.000000 41.000000 0.000000 43.000000 0.000000 
-- end mat --
cols 3 4 set to u: 
size 5 5 
row 0: 0.000000 1.000000 2.000000 0.000000 0.000000 
row 1: 0.000000 1.000000 2.000000 1.000000 1.000000 
row 2: 0.000000 21.000000 0.000000 2.000000 2.000000 
row 3: 30.000000 0.000000 32.000000 3.000000 3.000000 
row 4: 0.000000 41.000000 0.000000 4.000000 4.000000 
-- end mat --
u = 3rd row of a

length: 5
0 -> 30.000000
2 -> 32.000000
3 -> 3.000000
4 -> 3.000000
-- end vec --
u = 3rd col of a

length: 5
1 -> 1.000000
2 -> 2.000000
3 -> 3.000000
4 -> 4.000000
-- end vec --
b set to rows 0 2 4 of a
size 3 5 
row 0: 0.000000 1.000000 2.000000 0.000000 0.000000 
row 1: 0.000000 21.000000 0.000000 2.000000 2.000000 
row 2: 0.000000 41.000000 0.000000 4.000000 4.000000 
-- end mat --
size of b: 8
b set to cols 0 2 4 of a
size 5 3 
row 0: 0.000000 2.000000 0.000000 
row 1: 0.000000 2.000000 1.000000 
row 2: 0.000000 0.000000 2.000000 
row 3: 30.000000 32.000000 3.000000 
row 4: 0.000000 0.000000 4.000000 
-- end mat --
size of b: 8
b not empty OK ? 1
b empty OK ? 1
random fill 100 elements 10% fill
length: 100
1 -> 0.007768
14 -> 0.000005
27 -> 0.000015
33 -> 0.000000
36 -> 0.000035
47 -> 0.000003
63 -> 0.000001
78 -> 0.000000
84 -> 0.000375
91 -> 0.019235
95 -> 0.000000
-- end vec --
purged to 1e-2
length: 100
91 -> 0.019235
-- end vec --
a set to 2.3*Id(4,4): 
size 4 4 
row 0 -> 0: 2.300000  
row 1 -> 1: 2.300000  
row 2 -> 2: 2.300000  
row 3 -> 3: 2.300000  
-- end mat --
a set to Id(3,3): 
size 3 3 
row 0 -> 0: 1.000000  
row 1 -> 1: 1.000000  
row 2 -> 2: 1.000000  
-- end mat --
----
u set to random_fill(10): 
length: 10
1 -> 0.108809
5 -> 0.839112
9 -> 0.218257
-- end vec --
a = diag(u): 
size 10 10 
row 1 -> 1: 0.108809  
row 5 -> 5: 0.839112  
row 9 -> 9: 0.218257  
-- end mat --
u.w: 2.667333, u2.w: 2.667333, err = 0, err<tol ? 1
a with random entries: 
size 5 5 
row 0: 0.000000 0.000000 0.000000 13.000000 6.000000 
row 1: 0.000000 0.000000 0.000000 0.000000 0.000000 
row 2: 25.000000 0.000000 0.000000 0.000000 0.000000 
row 3: 75.000000 0.000000 0.000000 66.000000 0.000000 
row 4: 0.000000 0.000000 0.000000 76.000000 0.000000 
-- end mat --
u with random entries: 
0 14.000000
1 0.000000
2 8.000000
3 0.000000
4 0.000000
w = a * u :
0 0.000000
1 0.000000
2 350.000000
3 1050.000000
4 0.000000
b with random entries: 
size 5 5 
row 0: 93.000000 47.000000 0.000000 0.000000 0.000000 
row 1: 0.000000 0.000000 0.000000 0.000000 82.000000 
row 2: 17.000000 0.000000 0.000000 0.000000 0.000000 
row 3: 0.000000 0.000000 0.000000 0.000000 0.000000 
row 4: 88.000000 0.000000 76.000000 0.000000 0.000000 
-- end mat --
c = a * b :
size 5 5 
row 0: 528.000000 0.000000 456.000000 0.000000 0.000000 
row 1: 0.000000 0.000000 0.000000 0.000000 0.000000 
row 2: 2325.000000 1175.000000 0.000000 0.000000 0.000000 
row 3: 6975.000000 3525.000000 0.000000 0.000000 0.000000 
row 4: 0.000000 0.000000 0.000000 0.000000 0.000000 
-- end mat --
u: 
length: 5
0 -> 14.000000
2 -> 8.000000
-- end vec --
u.^2+2*u+3: 
length: 5
0 -> 227.000000
2 -> 83.000000
-- end vec --
sqrt(u): 
length: 5
0 -> 15.066519
2 -> 9.110434
-- end vec --
u = u^(3/2): 
length: 5
0 -> 58.481620
2 -> 27.498472
-- end vec --
u = u^(2/3): 
length: 5
0 -> 15.066519
2 -> 9.110434
-- end vec --
sum(u): 24.176953
max(u): 15.066519
min(u): 0.000000
sum_abs(u): 24.176953
sum_sq(u): 310.000000
sum_pow(u,3.): 4486.265778
sum_pow(u,5.): 843610.711963
max_abs(u): 15.066519


---u = -u
max(u): 0.000000
min(u): -15.066519
sum_abs(u): 24.176953
sum_sq(u): 310.000000
sum_pow(u,3.): 4486.265778
sum_pow(u,5.): 843610.711963
max_abs(u): 15.066519


----------
a: 
size 5 5 
row 0: 0.000000 0.000000 0.000000 13.000000 6.000000 
row 1: 0.000000 0.000000 0.000000 0.000000 0.000000 
row 2: 25.000000 0.000000 0.000000 0.000000 0.000000 
row 3: 75.000000 0.000000 0.000000 66.000000 0.000000 
row 4: 0.000000 0.000000 0.000000 76.000000 0.000000 
-- end mat --
a.^2 + 2*a + 3: 
size 5 5 
row 0: 0.000000 0.000000 0.000000 198.000000 51.000000 
row 1: 0.000000 0.000000 0.000000 0.000000 0.000000 
row 2: 678.000000 0.000000 0.000000 0.000000 0.000000 
row 3: 5778.000000 0.000000 0.000000 4491.000000 0.000000 
row 4: 0.000000 0.000000 0.000000 5931.000000 0.000000 
-- end mat --
sqrt(a): 
size 5 5 
row 0: 0.000000 0.000000 0.000000 14.071247 7.141428 
row 1: 0.000000 0.000000 0.000000 0.000000 0.000000 
row 2: 26.038433 0.000000 0.000000 0.000000 0.000000 
row 3: 76.013157 0.000000 0.000000 67.014924 0.000000 
row 4: 0.000000 0.000000 0.000000 77.012986 0.000000 
-- end mat --
a = a^(3/2): 
size 5 5 
row 0: 0.000000 0.000000 0.000000 52.783586 19.084361 
row 1: 0.000000 0.000000 0.000000 0.000000 0.000000 
row 2: 132.868573 0.000000 0.000000 0.000000 0.000000 
row 3: 662.724694 0.000000 0.000000 548.601880 0.000000 
row 4: 0.000000 0.000000 0.000000 675.843191 0.000000 
-- end mat --
a = a^(2/3): 
size 5 5 
row 0: 0.000000 0.000000 0.000000 14.071247 7.141428 
row 1: 0.000000 0.000000 0.000000 0.000000 0.000000 
row 2: 26.038433 0.000000 0.000000 0.000000 0.000000 
row 3: 76.013157 0.000000 0.000000 67.014924 0.000000 
row 4: 0.000000 0.000000 0.000000 77.012986 0.000000 
-- end mat --
sum(a): 267.292175
max(a): 77.012986
min(a): 0.000000
sum_abs(a): 267.292175
sum_sq(a): 17127.000000
sum_pow(a,3.): 1217736.439077
sum_pow(a,5.): 6610957325.232467
max_abs(a): 77.012986


------------
a = -a: 
size 5 5 
row 0: 0.000000 0.000000 0.000000 -14.071247 -7.141428 
row 1: 0.000000 0.000000 0.000000 0.000000 0.000000 
row 2: -26.038433 0.000000 0.000000 0.000000 0.000000 
row 3: -76.013157 0.000000 0.000000 -67.014924 0.000000 
row 4: 0.000000 0.000000 0.000000 -77.012986 0.000000 
-- end mat --
max(a): 0.000000
min(a): -77.012986
sum_abs(a): 267.292175
sum_sq(a): 17127.000000
sum_pow(a,3.): 1217736.439077
sum_pow(a,5.): 6610957325.232467
max_abs(a): 77.012986
0.1*rand(5) (fill .6):
size 5 5 
row 1 -> 1: 0.007416  2: 0.057943  3: 0.031687  
row 2 -> 3: 0.030430  4: 0.028004  
row 3 -> 1: 0.065113  2: 0.016397  3: 0.003542  4: 0.098360  
row 4 -> 2: 0.087761  4: 0.007699  
-- end mat --
Id + 0.1 * rand: 
size 5 5 
row 0: 1.300000 0.000000 0.000000 0.000000 0.000000 
row 1: 0.000000 1.307416 0.057943 0.031687 0.000000 
row 2: 0.000000 0.000000 1.300000 0.030430 0.028004 
row 3: 0.000000 0.065113 0.016397 1.303542 0.098360 
row 4: 0.000000 0.000000 0.087761 0.000000 1.307699 
-- end mat --
b:
length: 5
0 -> 0.471483
2 -> 0.944318
-- end vec --
sol:
0 0.362680
1 -0.032150
2 0.727541
3 -0.003861
4 -0.048826
err < tol ? 1
b:
length: 5
0 -> 0.344943
2 -> 0.336351
4 -> 0.434513
-- end vec --
sol:
0 0.265341
1 -0.010552
2 0.252558
3 -0.026443
4 0.315324
err < tol ? 1

  // Diffusive jacobians
  Djac.set(0.);
  Djac.is(2,vl_indx,vl_indxe).is(4,vl_indx,vl_indxe).axpy(IdId,visco_eff).rs();
  tmp00 = 1./3.*visco_eff;  
  for (int j=1; j<=ndim; j++) {
     Djac.addel(tmp00,j,j+1,j,j+1);
  }
  // Momentum rows and first columns of K_ii
  tmp_vel.set(vel).scale(-tmp00);
  for (int j=1; j<=ndim; j++) {
    Djac.ir(1,j).ir(3,j).is(2,vl_indx,vl_indxe).ir(4,1).set(vel).scale(-visco_eff).rs();
    Djac.ir(1,j).ir(3,j).ir(4,1).ir(2,j+1).add(tmp_vel.get(j)).rs();
  }
  // Momentum columns and last row of K_ii
  tmp_vel.set(vel).scale(tmp00);
  for (int j=1; j<=ndim; j++) {
    Djac.ir(1,j).ir(3,j).is(4,vl_indx,vl_indxe).ir(2,ndof).set(vel).scale(visco_bar).rs();
    Djac.ir(1,j).ir(3,j).ir(2,ndof).ir(4,j+1).add(tmp_vel.get(j)).rs();
  }
  
  // Last row and column
  tmp02 = cond_eff/Cv;
  tmp01 = (0.5*square(velmod)-int_ene)*tmp02-visco_eff*square(velmod);
  for (int j=1; j<=ndim; j++) {
    vel_j2 = square(double(vel.ir(1,j)));
    vel.rs();
    tmp03 = tmp01 - tmp00*vel_j2;
    Djac.setel(tmp00,j,ndof,j,ndof);
    Djac.setel(tmp03,j,ndof,j,1);
  }

  // Diffusive Jacobians K_ij with i .ne. j
  tmp00 = 2.*visco_eff/3.;
  if(ndim==2) {
  } else {
  int ip[] = {1,2,3,1};    
  for (int j=1; j<=ndim; j++) {

    Djac.setel(-tmp00,ip[j],ip[j]+1,ip[j+1],ip[j+1]+1);
    Djac.setel(visco_eff,ip[j],ip[j+1]+1,ip[j+1],ip[j]+1);

    tmp04 = -visco_eff/3*double(vel.ir(1,ip[j]))*double(vel.ir(1,ip[j+1]));
    Djac.setel(tmp04,ip[j],ndof,ip[j+1],1);

    tmp04 = tmp00*double(vel.ir(1,ip[j+1]));
    Djac.setel(tmp04,ip[j],ip[j]+1,ip[j+1],1);
    tmp04 = -visco_eff*double(vel.ir(1,ip[j]));
    Djac.setel(tmp04,ip[j],ip[j+1]+1,ip[j+1],1);

    tmp04 = -tmp00*double(vel.ir(1,ip[j]));
    Djac.setel(tmp04,ip[j],ndof,ip[j+1],ip[j+1]+1);
    tmp04 = visco_eff*double(vel.ir(1,ip[j+1]));
    Djac.setel(tmp04,ip[j],ndof,ip[j+1],ip[j]+1);

  }
  }

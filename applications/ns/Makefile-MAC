#__INSERT_LICENSE__
 # $Id: Makefile-MAC,v 1.1.2.1 2001/10/29 14:34:41 mstorti Exp $ 

.PHONY: all run lclean save compile

PROG = ns
PETSCFEM_DIR   = ../..
#MYOBJS = ns.o fracstep.o nsi_tet.o
#  
#  NOTA:
#       INCORPORAR LOS NUEVOS *.o procedentes de *.cpp EN MYOBJS
#
MYOBJS = ns.o nsitetlesfm2.o \
		bccnsfm2.o wall.o nsvol.o walldata.o \
		nsilesther.o bccnstherfm2.o nsikeps.o \
		wallke.o nonlr.o adaptor.o elast.o elastf.o

#  
#  NOTA:
#       INCLUIR FORTRAN FILES *.f  ??????
#       Y LA DEPENDENCIA ENTRE *.o y *.f ES NECESARIO EN EL CASO
#       que exista pepe.cpp y pepe.f PARA QUE NO COLISIONE
#
# Fortran files
# FLIBOBJS_ =  calcct  elm000  eqload  linear   poismt   runend  stif30 \
#       bdbsem   calcst  invmtx   solidi summar  \
#       bmasig   cepl36  elmlib  frin30  kmatri   plbmtx   proma2   sqtota  youngt
FLIBOBJS_ = initf

VULCAN = /home/diego/vulcan

#LDFLAGS += 

# summar.o: summar.f
# bdbsem.o: bdbsem.f
# bmasig.o: bmasig.f
# calcct.o: calcct.f
# calcst.o: calcst.f
# cepl36.o: cepl36.f
# elm000.o: elm000.f
# elm030.o: elm030.f
# elmlib.o: elmlib.f
# eqload.o: eqload.f
# forcin.o: forcin.f
# frin30.o: frin30.f
# invmtx.o: invmtx.f
# kmatri.o: kmatri.f
# linear.o: linear.f
# plbmtx.o: plbmtx.f
# poismt.o: poismt.f
# proma2.o: proma2.f
# runend.o: runend.f
# solidi.o: solidi.f
# sqtota.o: sqtota.f
# stif30.o: stif30.f
# stifmx.o: stifmx.f
# youngt.o: youngt.f

#  
#  NOTA:
#       CONSTRUIR LIBRERIA DE OBJETOS FORTRAN  *.o de *.f
#

#OTHER_OBJS = $(FLIBOBJS_:=.o)

OTHER_OBJS = initf.o $(VULCAN)/sources/cluster/Libvulcang.a

#OTHER_OBJS = LibvulcanO2.a

TAGFLAGS = $(TAGINCL)="../../src/TAGS"
#TAGFLAGS = --include="../../src/TAGS"

# for makedepend

SRCS := $(MYOBJS:.o=.cpp)

include $(PETSCFEM_DIR)/Makefile.base

$(PROG) compile: $(PROG).bin

#  
#  DONDE ESTA DEFINIDO CPPFLAGS Y QUE ES ????  VER Makefile.base
#
%.cppi: %.cpp
	g++ $(CPPFLAGS) -I /usr/local/mpich-1.2.0/include/ \
		-I/home/mstorti/PETSC/petsc-2.0.24/bmake/linux/ \
		-I/home/mstorti/PETSC/petsc-2.0.24/include/ -E $< > $@

#  
#  NOTA:  HACE DOCUMENTACION TEX, PARA USARLO: make doc
#
# documentation of options with the script `odoc.pl'
odocns: ../../doc/odocns.tex ../../doc/odocnse.tex \
	../../doc/odocnsb.tex  ../../doc/odocnsw.tex 

../../doc/odocns.tex: ns.cpp 
	$(run_odoc)

../../doc/odocnse.tex: nsitetlesfm2.cpp 
	$(run_odoc)

../../doc/odocnsb.tex: bccnsfm2.cpp 
	$(run_odoc)

../../doc/odocnsw.tex: wall.cpp 
	$(run_odoc)

#  
#  QUE ES NOAFS, AFS  ??????  VERSIONES VIEJAS 
#
noafs:
	@echo "making symbolic links to NO Algebraic FS formulation... "
	@ls -l ns.cpp nsitetlesfm2.cpp ; \
	echo -n "re-link to .noafs files? (y/n) > " ; \
	read answer ; \
	if [ -L ns.cpp -a -L nsitetlesfm2.cpp -a "$$answer" = "y" ] ; \
		then ln -sf ns.cpp.noafs ns.cpp ; \
		ln -sf nsitetlesfm2.cpp.noafs nsitetlesfm2.cpp ; \
	fi ; 
	-@rm ns.o nsitetlesfm2.o

afs:
	@echo "making symbolic links to Algebraic FS formulation... "
	@ls -l ns.cpp nsitetlesfm2.cpp ; \
	echo -n "re-link to .afs files? (y/n) > " ; \
	read answer ; \
	if [ -L ns.cpp -a -L nsitetlesfm2.cpp -a "$$answer" = "y" ] ; \
		then ln -sf ns.cpp.afs ns.cpp ; \
		ln -sf nsitetlesfm2.cpp.afs nsitetlesfm2.cpp ; \
	fi ; 
	-@rm ns.o nsitetlesfm2.o

#lclean: general_clean
#	cat /dev/null >makefile.d
#	-rm *.o $(OBJS) $(PROG).bin octave-core *.cppi outvector.sal makefile.d
#	$(MAKE) clean

# File containing dependencies computed by makedepend
#
